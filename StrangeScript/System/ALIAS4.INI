[aliases]
n0=/check.look {
n1=  if ($key(settings,looksharp.kick) == $null) { keywrite settings looksharp.kick OFF | return 0 }
n2=  if (*l o o k s h a r p* iswm $1-) {
n3=    if ($key(settings,looksharp.kick) == OFF) { return 1 }
n4=    if ($key(settings,looksharp.kick) == ON) {
n5=      set %temp1 1
n6=      while (%temp1 <= $comchan($nick,0)) {
n7=        if ($nick !isowner $comchan($nick,%temp1)) {
n8=          if ($me isop $comchan($nick,%temp1)) {
n9=            .msg $comchan($nick,%temp1)) $highcol $+ I know! $lowcol $+ LookSharp as $me $lowcol $+ kicks your ass out the door
n10=            .kick $comchan($nick,%temp1) $nick Shove that trojan infected looksharp up your ass
n11=          }
n12=        }   
n13=        inc %temp1
n14=        if (%temp1 > $comchan($nick,0)) { break }
n15=      }
n16=      return 1
n17=    }
n18=  }
n19=}
n20=op.ircx { if ($key(settings,ircx) == ON) { return Owner } }
n21=nukex /ctcp $key(settings,botnick) DO //run $mIRCdirwar/wnuke4.exe -n $1 irc.msn.com 0 6667-6667 1000-6000 UNPROTOCOL
n22=nuke2 /ctcp $key(settings,botnick) DO //run $mIRCdirwar/wnuke4.exe -n $1 irc.msn.com 0 6667-6667 1024-4000 UNPROTOCOL
n23=/optake { /mkall # | cycle }
n24=/quit { fix | set %tmp.quit.message $1- | .raw quit $quit.message | unset %tmp.quit.message | return }
n25=quit.message {
n26=  if (%tmp.quit.message != $null) { return $replace(%tmp.quit.message,$chr(32),$chr(160)) }
n27=  else {
n28=    if ($master(settings,quit.message) != $null) { return $replace($unhex.ini($master(settings,quit.message)),$chr(32),$chr(160)) }
n29=    else { return $me }
n30=  }
n31=}
n32=is.access {
n33=  if ($key(settings,ircx) == ON) { return Access Menu }
n34=}
n35=is.keys {
n36=  if ($key(settings,ircx) == ON) { return Room Keys }
n37=}
n38=ban.type {
n39=  if ($key(settings,ircx) == ON) { return /access # add deny }
n40=  if ($key(settings,ircx) == OFF) { return /ban #  }
n41=  else { return /ban #  }
n42=}
n43=/cycleall {
n44=  keywrite settings rumble OFF
n45=  var %tmp.quit = 1
n46=  :qloop2
n47=  If (%tmp.quit <= $chan(0)) { 
n48=    .raw part $chan(%tmp.quit) :cycle
n49=    .raw join $chan(%tmp.quit) $key($chan(%tmp.quit),ownerkey)
n50=    inc %tmp.quit 
n51=    goto qloop2
n52=  }
n53=}
n54=/pr {
n55=  $report(Proping the Owner and Host Keys for #).active
n56=  if ($key(#,ownerkey) != $null) { prop # OWNERKEY $key(#,ownerkey) }
n57=  if ($key(#,hostkey) != $null) { prop # HOSTKEY $key(#,hostkey) }
n58=}
n59=/swho {
n60=  if ($master(settings,which.window) == ACTIVE) {
n61=    .enable #sswho
n62=    $report($chain).active
n63=    $report(StrangeWho,$1,$null,Processing).active
n64=    set %tempa 0
n65=    set %tempb 1 
n66=    if ($network == COS) { who # * $+ $1- $+ * }
n67=    else { who $1 }
n68=    goto swhodone
n69=  }
n70=  if ($master(settings,which.window) == On) {
n71=    window -al @UserInfo 0 0 420 270 @UserInfo arial 12
n72=    titlebar @UserInfo DoubleClick line to send RighClick for options
n73=    aline @UserInfo $sys $+ $lowcol $+ Trying A Who on $highcol $+ $1
n74=    .enable #sswho
n75=    aline @UserInfo $sys $+ $chain
n76=    set %tempa 0
n77=    set %tempb 1 
n78=    /who $1
n79=    goto swhodone
n80=  }
n81=  else {
n82=    $report(StrangeWho,$1,$null,Processing).status
n83=    .enable #sswho
n84=    $report($chain).status
n85=    set %tempa 0
n86=    set %tempb 1 
n87=    /who $1
n88=  }
n89=  :swhodone
n90=}
n91=/sock.aj {
n92=  set %tmp 1
n93=  :saj.loop
n94=  if (%tmp <= $chan(0)) {
n95=    /sw $1 join $chan(%tmp) $key($chan(%tmp),ownerkey)
n96=    inc %tmp
n97=    goto saj.loop
n98=  }
n99=  unset %tmp
n100=}
n101=/sock.partall {
n102=  if ($1 == $null) { return }
n103=  set %tmp 1
n104=  :saj.loop
n105=  if (%tmp <= $chan(0)) {
n106=    /sw $1 part $chan(%tmp)
n107=    inc %tmp
n108=    goto saj.loop
n109=  }
n110=  unset %tmp
n111=}
n112=/keys {
n113=  if (# == $null) { return }
n114=  if ($1 != ALL) {
n115=    keywrite # ownerkey ""
n116=    keywrite # hostkey ""
n117=    $report(Key Delete,$null,$null,Owner and Host keys for # have been Deleted).active
n118=    $report(Key Delete,$null,$null,Use /KEYS ALL to delete all keys).active
n119=  }
n120=  if ($1 == ALL) {
n121=    keywrite # ownerkey ""
n122=    keywrite # setupauto ""
n123=    $report(Key Delete,$null,$null,ALL keys for # have been Deleted).active
n124=    $report(Key Delete,$null,$null,Use /KEYS to delete only owner and host keys).active
n125=  }
n126=}
n127=/author {
n128=  if ($server != $null) {
n129=    msg # $report(mIRC Info,$null,$null,Dir,$mircdir) $+ $report($null,$null,$null,Ini,$nopath($mircini)) $+ $report($null,$null,$null,Exe,$nopath($mircexe))
n130=    msg # $report(Settings Info,$null,$null,Boss,$key(settings,boss)) $+ $report($null,$null,$null,$null,$alias(0), out of 8 Alias) $+ $report($null,$null,$null,$null,$script(0), out of 19 Script)
n131=    msg # $report($ver)
n132=  }
n133=  if ($server == $null) {
n134=    $report(Mirc directory is,$mircdir).status
n135=    $report(Mirc INI,$mircini).status
n136=    $report(Mirc EXE,$mircexe).status
n137=    $report(Boss,$key(settings,boss)).status
n138=    $report($null,$null,$null,$null,$alias(0), out of 8 Alias).status
n139=    $report($null,$null,$null,$null,$script(0), out of 19 Script).status
n140=    $report(Script Info,$ver).status
n141=  }
n142=}
n143=/set.bot {
n144=  if ($1 == $null) { $report(returning..you must include the bot number to run).active | return }
n145=  if ($1 > 20) { $report(returning.. only 1-20 are valid bots).active | return }
n146=  if ($exists($mircdirmbot\mirc.exe) == $false) { $report(The bot is not installed in your script. Check on COS.selfip.biz IRC for info.).active | return }
n147=  $report($chain).active
n148=  $report($ver,$null,$null,Auto Bot Configure).active
n149=  $report(Bot Config,$null,$null,Removing all ignores and adding $address($me,4) exclude to Bot $1).active
n150=  .remini $botdir $+ SSC [ $+ [ $1 $+ .ini ] ] ignore
n151=  .writeini $botdir $+ SSC [ $+ [ $1 $+ .ini ] ] ignore n0 $address($me,3) $+ , $+ exclude
n152=  $report(Tuning up the Bot for improved preformance on $network).active
n153=  $report(Setting your current nick $me as BOSS in the Bots remote file).active
n154=  .writeini $botdir $+ REMOTE.INI variables n0 % $+ boss $me
n155=  $report(Setting your current IP $address($me,4) to the Bots remote file).active
n156=  .remini $botdir $+ REMOTE.INI USERS
n157=  .writeini $botdir $+ REMOTE.INI USERS n0 5 $+ $chr(58) $+ $address($me,4) $me
n158=  $report(Bot Config: Setting HOST to $serverip 8000 (SSL) to Bot $1).active
n159=  .writeini $botdir $+ SSC [ $+ [ $1 $+ .ini ] ] mirc host Random $network IRCSERVER: $+ $serverip $+ :+8000GROUP: $+ $network
n160=  $report(Bot Config: Setting REMOTE file to REMOTE.INI to Bot $1).active
n161=  .writeini $botdir $+ SSC [ $+ [ $1 $+ .ini ] ] rfiles n1 REMOTE.INI
n162=  .writeini $botdir $+ SSC [ $+ [ $1 $+ .ini ] ] rfiles n0 REMOTE.INI
n163=  $report($null,Done).active
n164=  $report($chain).active
n165=  set %tmp.set.bot $readini($mircdirtext\BotNick.ini,n,$network,BOT [ $+ [ $1 ] ])
n166=  if (%tmp.set.bot != $null) { .timer 1 0 /run $botdir $+ mirc.exe -i $+ $botdir $+ SSC [ $+ [ $1 $+ .ini ] ]  -n $+ $strip(%tmp.set.bot) }
n167=  if (%tmp.set.bot == $null) { .timer 1 0 /run $botdir $+ mirc.exe -i $+ $botdir $+ SSC [ $+ [ $1 $+ .ini ] ]  }
n168=  unset %tmp.set.bot
n169=  return
n170=}
n171=/roomklist {
n172=  if ($1 == $null) { set %tmp.keys # }
n173=  if ($1 != $null) { set %tmp.keys $1 }
n174=  if (%tmp.keys == $null) { return }  
n175=  window -alk0 @RoomKeys 0 0 420 300 @RoomKeys Arial 12
n176=  titlebar @RoomKeys DoubleClick to send RightClick for options
n177=  aline 04 @RoomKeys $sys $report($chain)
n178=  aline 08 @RoomKeys $sys $report(Saved Keys List for %tmp.keys)
n179=  if ($key(%tmp.keys,ownerkey) != $null) { aline 04 @RoomKeys $sys $report(OwnerKey,$null,$null,$key(%tmp.keys,ownerkey)) }
n180=  if ($key(%tmp.keys,hostkey) != $null) { aline 04 @RoomKeys $sys $report(HostKey,$null,$null,$key(%tmp.keys,hostkey)) }
n181=  if ($key(%tmp.keys,memberkey) != $null) { aline 04 @RoomKeys $sys $report(MemberKey,$null,$null,$key(%tmp.keys,memberkey)) }
n182=  if ($key(%tmp.keys,topic) != $null) { var %tmpls = $key(%tmp.keys,topic) | aline 04 @RoomKeys $sys $report(Topic,$null,$null,$unhex.ini(%tmpls)) }
n183=  if ($key(%tmp.keys,subject) != $null) { aline 04 @RoomKeys $sys $report(Subject,$null,$null,$key(%tmp.keys,subject)) }
n184=  if ($key(%tmp.keys,Language) != $null) { aline 04 @RoomKeys $sys $report(Language,$null,$null,$key(%tmp.keys,Language)) }
n185=  if ($key(%tmp.keys,onjoin) != $null) { var %tmpls = $key(%tmp.keys,onjoin) | aline 04 @RoomKeys $sys $report(OnJoin,$null,$null,$unhex.ini(%tmpls)) }
n186=  if ($key(%tmp.keys,onpart) != $null) { var %tmpls = $key(%tmp.keys,onpart) | aline 04 @RoomKeys $sys $report(OnPart,$null,$null,$unhex.ini(%tmpls)) }
n187=  if ($key(%tmp.keys,Lag) != $null) { aline 04 @RoomKeys $sys $report(Lag,$null,$null,$key(%tmp.keys,Lag)) }
n188=  aline 04 @RoomKeys $sys $report($chain)
n189=  if ($key(%tmp.keys,mode) != $null) { aline 04 @RoomKeys $sys $report(Mode Settings,$null,$null,$key(%tmp.keys,mode)) }
n190=  if ($key(%tmp.keys,modelock) != $null) { aline 04 @RoomKeys $sys $report(Mode Locked Setting,$null,$null,$key(%tmp.keys,modelock)) }
n191=  if ($key(%tmp.keys,topiclock) != $null) { aline 04 @RoomKeys $sys $report(Topic Locked Setting,$null,$null,$key(%tmp.keys,topiclock)) }
n192=  if ($key(%tmp.keys,kicklock) != $null) { aline 04 @RoomKeys $sys $report(Kick/Op/Deop Locked Setting,$null,$null,$key(%tmp.keys,kicklock)) }
n193=  if ($key(%tmp.keys,ban.lock) != $null) { aline 04 @RoomKeys $sys $report(Ban/Unban Locked Setting,$null,$null,$key(%tmp.keys,ban.lock)) }
n194=  if ($key(%tmp.keys,GateScan) != $null) { aline 04 @RoomKeys $sys $report(Gate Scan Setting,$null,$null,$key(%tmp.keys,GateScan)) }
n195=  if ($key(%tmp.keys,modemaster) != $null) { aline 04 @RoomKeys $sys $report(Deop To Protect,$null,$null,$key(%tmp.keys,modemaster)) }
n196=  if ($key(%tmp.keys,deop) != $null) { aline 04 @RoomKeys $sys $report(Mode/Prop Protection,$null,$null,$key(%tmp.keys,deop)) }
n197=  if ($key(%tmp.keys,whoisonknock) != $null) { aline 04 @RoomKeys $sys $report(Whois on Knock Setting,$null,$null,$key(%tmp.keys,whoisonknock)) }
n198=  if ($key(%tmp.keys,unmaskonknock) != $null) { aline 04 @RoomKeys $sys $report(Auto Unmask on Knock Setting,$null,$null,$key(%tmp.keys,unmaskonknock)) }
n199=  if ($key(%tmp.keys,setupauto) != $null) { aline 04 @RoomKeys $sys $report(Auto Channel Setup Setting,$null,$null,$key(%tmp.keys,setupauto)) }
n200=  aline 04 @RoomKeys $sys $report($chain)
n201=  if ($key(%tmp.keys,lastin) != $null) { aline 04 @RoomKeys $sys $report(Last Entry,$null,$null,$key(%tmp.keys,lastin)) }
n202=  if ($key(%tmp.keys,lastinIP) != $null) { aline 04 @RoomKeys $sys $report(Last Entry IP,$null,$null,$key(%tmp.keys,lastinIP)) }
n203=  aline 04 @RoomKeys $sys $report($ver)
n204=  aline 08 @RoomKeys $sys $report($chain)
n205=}
n206=check.connect {
n207=  if ($server != $null) { return ** Connected ** }
n208=  if ($server == $null) { return ** Not Connected ** }
n209=}
