[aliases]
n0=/sw {
n1=  if ($1 == ALL) {
n2=    if ($sock(*) != $null) {
n3=      ;if ($sock(@Boom*,0) == 0) && ($sock(@Gate*,0) == 0) && ($sock(@Split*,0) == 0) && ($sock(Spy*,0) == 0) { return }
n4=      ;else {
n5=      if ($sock(@Boom*,0) != 0) { sockwrite -n @Boom* $2- }
n6=      if ($sock(@Gate*,0) != 0) { sockwrite -n @Gate* $2- }
n7=      if ($sock(@Spy*,0) != 0) { sockwrite -n @Spy* $2- }
n8=      ;}
n9=    }
n10=    if ($2 != god-find) && ($master(settings,remotecontrol.send) == ON) {
n11=      var %xXx = 0
n12=      while (%xXx <= 9) {
n13=        if (%remote.control [ $+ [ %xXx ] ] != $null) { var %tmp111 $chr(61) $+ %remote.control [ $+ [ %xXx ] ] | if ($window(%tmp111) != $null) { msg $chr(61) $+ %remote.control [ $+ [ %xXx ] ] .sw $2- } }
n14=        inc %xXx
n15=        if (%xXx > 9) { break }
n16=      }
n17=    }
n18=    return
n19=  }
n20=  if ($1 != ALL) {
n21=    if ($sock(@Boom*) != $null) { sockwrite -n @Boom [ $+ [ $1 ] ] $2- }
n22=    if ($sock(@Gate*) != $null) { sockwrite -n @Gate [ $+ [ $1 ] ] $2- }
n23=    if ($2 != god-find) && ($master(settings,remotecontrol.send) == ON) {
n24=      var %xXx = 0
n25=      while (%xXx <= 9) {
n26=        if (%remote.control [ $+ [ %xXx ] ] != $null) { var %tmp111 $chr(61) $+ %remote.control [ $+ [ %xXx ] ] | if ($window(%tmp111) != $null) { msg $chr(61) $+ %remote.control [ $+ [ %xXx ] ] .sw $1 $2- } }
n27=        inc %xXx
n28=        if (%xXx > 9) { break }
n29=      }
n30=    }
n31=    return
n32=  }
n33=}
n34=/saytime {
n35=  ;##saytime (Sends the time in my format to the channel)
n36=  var %temp = $lowcol $+ $date(dddd) $+ $bright $+ , $+ $chr(160) $+ $lowcol $+ $date(mmmm)
n37=  var %temp = %temp $+ $chr(160) $+ the $lowcol $+ $ord($date(dd)) $+ $bright $+ , $+ $chr(160) $+ $lowcol $+ $date(yyyy)
n38=  var %temp = %temp $+ $chr(160) $+ at $lowcol $+  $time(h) $+ $bright $+ : $+ $lowcol $+ $time(nn)
n39=  var %temp = %temp $+ $chr(160) $+ $lower($time(tt)) $+ $chr(160) $+ $bright $+ ( $+ $lowcol $+ $right($time(zzz),-1) $+ $bright $+ )
n40=  if ($1 != $null) { notice $1 $report(%temp) }
n41=  return $report(%temp)
n42=}
n43=/set.bot.key {
n44=  $report(NOTE,$null,$null,$null,Bots must be in # to accept this key).active
n45=  var %temp.Bot = $nick(#,0)
n46=  var %temp.Bot1 = 1
n47=  :sckloop
n48=  if (%temp.Bot1 > %temp.Bot) { goto sckout }
n49=  if ($istok($key(settings,botnick),$nick(#,%temp.Bot1),44) == $true) { .ctcp $nick(#,%temp.Bot1) SSKEY $key(settings,botkey) }
n50=  inc %temp.Bot1
n51=  goto sckloop
n52=  :sckout
n53=  return
n54=}
n55=/color.nick {
n56=  if ($1 == $null) { $report(ERROR,in the /COLOR.NICK routine).active | halt }
n57=  var %temp.c. [ $+ [ $1 ] ] = 1
n58=  while (%temp.c. [ $+ [ $1 ] ] <= $nick($1,0)) {
n59=    cline $color(listbox text) $1 %temp.c. [ $+ [ $1 ] ]
n60=    ;var %xcx = $left($remove($nick($1,%temp.c. [ $+ [ $1 ] ] ).pnick,$nick($1,%temp.c. [ $+ [ $1 ] ] )),1)
n61=    ;var %xcz = 15 $+ %xcx $+  $+  $nick($1,%temp.c. [ $+ [ $1 ] ] )
n62=    ;.msg #StrangeScript %xcz
n63=    ;goto optout
n64=    if (*Serv iswm $nick($1,%temp.c. [ $+ [ $1 ] ] )) { cline 3 $1 %temp.c. [ $+ [ $1 ] ] }
n65=    if ($istok($key(settings,botnick),$nick($1,%temp.c. [ $+ [ $1 ] ] ),44) == $true) && ($nick($1,%temp.c. [ $+ [ $1 ] ] ) != $key(settings,boss)) { cline %sc.bot $1 %temp.c. [ $+ [ $1 ] ] }
n66=    if ($sock(@Boom1).mark == $nick($1,%temp.c. [ $+ [ $1 ] ] )) { cline %sc.socket $1 %temp.c. [ $+ [ $1 ] ] }
n67=    if ($sock(@Boom2).mark == $nick($1,%temp.c. [ $+ [ $1 ] ] )) { cline %sc.socket $1 %temp.c. [ $+ [ $1 ] ] }
n68=    if ($sock(@Boom3).mark == $nick($1,%temp.c. [ $+ [ $1 ] ] )) { cline %sc.socket $1 %temp.c. [ $+ [ $1 ] ] }
n69=    if ($sock(@Boom4).mark == $nick($1,%temp.c. [ $+ [ $1 ] ] )) { cline %sc.socket $1 %temp.c. [ $+ [ $1 ] ] }
n70=    if ($sock(@Boom5).mark == $nick($1,%temp.c. [ $+ [ $1 ] ] )) { cline %sc.socket $1 %temp.c. [ $+ [ $1 ] ] }
n71=    if ($sock(@Boom6).mark == $nick($1,%temp.c. [ $+ [ $1 ] ] )) { cline %sc.socket $1 %temp.c. [ $+ [ $1 ] ] }
n72=    if ($sock(@Boom7).mark == $nick($1,%temp.c. [ $+ [ $1 ] ] )) { cline %sc.socket $1 %temp.c. [ $+ [ $1 ] ] }
n73=    if ($sock(@Boom8).mark == $nick($1,%temp.c. [ $+ [ $1 ] ] )) { cline %sc.socket $1 %temp.c. [ $+ [ $1 ] ] }
n74=    if ($sock(@Boom9).mark == $nick($1,%temp.c. [ $+ [ $1 ] ] )) { cline %sc.socket $1 %temp.c. [ $+ [ $1 ] ] }
n75=    if ($nick($1,%temp.c. [ $+ [ $1 ] ] ) == %split.nick.one) || ($nick($1,%temp.c. [ $+ [ $1 ] ] ) == %split.nick.two) { cline %sc.split $1 %temp.c. [ $+ [ $1 ] ] }
n76=    if ($level($address($nick($1,%temp.c. [ $+ [ $1 ] ] ),3)) == 4) { cline %sc.me $1 %temp.c. [ $+ [ $1 ] ] }
n77=    if ($level($address($nick($1,%temp.c. [ $+ [ $1 ] ] ),3)) == 3) { cline %sc.friend $1 %temp.c. [ $+ [ $1 ] ] }
n78=    if ($level($address($nick($1,%temp.c. [ $+ [ $1 ] ] ),3)) == 2)  { cline %sc.friend $1 %temp.c. [ $+ [ $1 ] ] }
n79=    if ($nick($1,%temp.c. [ $+ [ $1 ] ] ) == $me) && ($key(settings,away.iam) == OFF) { cline %sc.me $1 %temp.c. [ $+ [ $1 ] ] }
n80=    if ($nick($1,%temp.c. [ $+ [ $1 ] ] ) == $me) && ($key(settings,away.iam) == ON) { cline 14 $1 %temp.c. [ $+ [ $1 ] ] }
n81=    if ($istok(%away.users.nick,$nick($1,%temp.c. [ $+ [ $1 ] ] ),46) == $true) { cline 14 $1 %temp.c. [ $+ [ $1 ] ] }
n82=    :optout
n83=    inc %temp.c. [ $+ [ $1 ] ]
n84=    if (%temp.c. [ $+ [ $1 ] ] > $nick($1,0)) { break }
n85=  }
n86=  return
n87=}
n88=/login.color.nick {
n89=  var %temp.lc = 1
n90=  while (%temp.lc <= $chan(0)) {
n91=    color.nick $chan(%temp.lc)
n92=    inc %temp.lc
n93=    if (%temp.lc > $chan(0)) { break }
n94=  }
n95=  return
n96=}
n97=/hex {
n98=  set %hex.word ""
n99=  set %hex.word ""
n100=  set %hex.val ""
n101=  set %hex.comp ""
n102=  set %hex.val1 ""
n103=  set %hex.val2 ""
n104=  set %hex.char ""
n105=  if ($1- == $null) { set %hex.word $$?="Enter ASCII String to Hex" }
n106=  if ($1- != $null) { set %hex.word $replace($1-,$chr(32),$chr(95)) }
n107=  set %n 1
n108=  :begin
n109=  if (%n > $len(%hex.word)) { clipboard %hex.comp | goto end }
n110=  set %hex.char $asc($mid(%hex.word,%n,1))
n111=  set %hex.val1 $int($calc(%hex.char / 16))
n112=  set %hex.val2 $calc($calc(%hex.char - (%hex.val1 * 16)))
n113=  if (%hex.val1 == 10) { set %hex.val1 A }
n114=  if (%hex.val1 == 11) { set %hex.val1 B }
n115=  if (%hex.val1 == 12) { set %hex.val1 C }
n116=  if (%hex.val1 == 13) { set %hex.val1 D }
n117=  if (%hex.val1 == 14) { set %hex.val1 E }
n118=  if (%hex.val1 == 15) { set %hex.val1 F }
n119=  if (%hex.val2 == 10) { set %hex.val2 A }
n120=  if (%hex.val2 == 11) { set %hex.val2 B }
n121=  if (%hex.val2 == 12) { set %hex.val2 C }
n122=  if (%hex.val2 == 13) { set %hex.val2 D }
n123=  if (%hex.val2 == 14) { set %hex.val2 E }
n124=  if (%hex.val2 == 15) { set %hex.val2 F }
n125=  set %hex.char %hex.val1 $+ %hex.val2
n126=  set %hex.comp %hex.comp $+ %hex.char
n127=  inc %n
n128=  goto begin
n129=  :end
n130=  $report(%hex.word,$null,$null,is hexed to,%hex.comp).active
n131=  unset %hex.* %n
n132=  return
n133=}
n134=/unhex {
n135=  set %hex.word ""
n136=  set %hex.word ""
n137=  set %hex.val ""
n138=  set %hex.comp ""
n139=  set %hex.val1 ""
n140=  set %hex.val2 ""
n141=  set %hex.char ""
n142=  if ($1- == $null) { set %hex.word $$?="Enter ASCII String to Hex" }
n143=  if ($1- != $null) { set %hex.word $1- }
n144=  set %hex.word $remove(%hex.word,',^)
n145=  set %n 1
n146=  :begin
n147=  if (%n > $len(%hex.word)) { goto end }
n148=  set %hex.char $mid(%hex.word,%n,1)
n149=  if (%hex.char == A) { set %hex.char 10 }
n150=  if (%hex.char == B) { set %hex.char 11 }
n151=  if (%hex.char == C) { set %hex.char 12 }
n152=  if (%hex.char == D) { set %hex.char 13 }
n153=  if (%hex.char == E) { set %hex.char 14 }
n154=  if (%hex.char == F) { set %hex.char 15 }
n155=  set %hex.val $calc(16 * %hex.char)
n156=  inc %n
n157=  set %hex.char $mid(%hex.word,%n,1)
n158=  if (%hex.char == A) { set %hex.char 10 }
n159=  if (%hex.char == B) { set %hex.char 11 }
n160=  if (%hex.char == C) { set %hex.char 12 }
n161=  if (%hex.char == D) { set %hex.char 13 }
n162=  if (%hex.char == E) { set %hex.char 14 }
n163=  if (%hex.char == F) { set %hex.char 15 }
n164=  set %hex.val $calc(%hex.val + %hex.char)
n165=  set %hex.val $chr(%hex.val)
n166=  set %hex.comp %hex.comp $+ %hex.val
n167=  inc %n
n168=  goto begin
n169=  :end
n170=  $report(Your Hexed Submission,$null,$null,is unhexed to,$replace(%hex.comp,$chr(95),$chr(160))).chan
n171=  unset %hex.* %n
n172=  return
n173=}
n174=/sound.play {
n175=  if ($1 == IN) { goto soundin }
n176=  if ($1 == OUT) { goto soundout }
n177=  if ($1 == REQUEST) { goto soundreg }
n178=  :soundin
n179=  return
n180=  :soundout
n181=}
n182=/opscan {
n183=  ;set %copdisplay $$?1="Echo, @window, or msg #channel/nick?"
n184=  set %copdisplay echo
n185=  if (%copdisplay == echo) { set %copdisplay echo -at }
n186=  if (%copdisplay == msg) { $report(Format,$null,$null,msg (or .msg) <#channel/nickname>).chan | unset %propdisplay | return }
n187=  if (msg isin %copdisplay) { set %copdisplay . $+ %copdisplay }
n188=  if (%copdisplay == @window) { window -a @Cops 0 0 500 300 @Cops arial | set %copdisplay aline @Cops }
n189=  .enable #opscan
n190=  %copdisplay $sys $+ $chain
n191=  %copdisplay $sys Cop List for $server $+ :
n192=  who * o
n193=}
n194=/script.internal.userlist {
n195=  if ($1 == ADD) {
n196=    if ($2 == Q) { .auser 3 $myaddress($snick(#,1)) $snick(#,1) | $report(AutoOp,$snick(#,1),$myaddress($snick(#,1)),was added to user list,Op/Owner).active | return }
n197=    if ($2 == MASTER) { .auser 5 $myaddress($snick(#,1)) $snick(#,1) | $report($snick(#,1)  ( $+ $white $+ $myaddress($snick(#,1)) $+ $highcol $+ ) $lowcol was $bright $+ ADDED $lowcol $+ to user list as MASTER | .notice $snick(#,1) You have been added to $ver $+ $ver  as MASTER).active | return }
n198=    if ($2 == CHAN) {
n199=      if ($3 == Q) {
n200=        var %tmp = $readini($AutoOwner,n,#,$myaddress($snick(#,1)))
n201=        if (%tmp == $null) { .writeini -n $AutoOwner # $myaddress($snick(#,1)) $myaddress($snick(#,1)) | $report($snick(#,1),$myaddress($snick(#,1)),was ADDED to # for auto ops as Owner).active | return }
n202=        if (%tmp != $null) { $report($snick(#,1),$myaddress($snick(#,1)),was already listed in # for auto ops as Owner).active | return }
n203=      }
n204=      if ($3 == O) {
n205=        var %tmp = $readini($AutoOp,n,#,$myaddress($snick(#,1)))
n206=        if (%tmp == $null) { .writeini -n $AutoOp # $myaddress($snick(#,1)) $myaddress($snick(#,1)) | $report($snick(#,1),$myaddress($snick(#,1)),was ADDED to # for auto ops as Host).active | return }
n207=        if (%tmp != $null) { $report($snick(#,1),$myaddress($snick(#,1)),was already listed in # for auto ops as Host).active | return }
n208=      }
n209=    }
n210=  }
n211=  if ($1 == REMOVE) {
n212=    if ($2 == CHAN) {
n213=      if ($3 == Q) {
n214=        var %tmp = $readini($AutoOwner,n,#,$myaddress($snick(#,1)))
n215=        if (%tmp != $null) {
n216=          .remini $AutoOwner # $myaddress($snick(#,1))
n217=          $report($snick(#,1),$myaddress($snick(#,1)),was REMOVED from # for auto ops as Owner).active
n218=          return
n219=        }
n220=        else { $report($snick(#,1),$myaddress($snick(#,1)),is NOT listed in this channel as OWNER).active }
n221=      }
n222=      if ($3 == O) {
n223=        var %tmp = $readini($AutoOwner,n,#,$myaddress($snick(#,1)))
n224=        if (%tmp != $null) {
n225=          .remini $AutoOp # $myaddress($snick(#,1))
n226=          $report($snick(#,1),$myaddress($snick(#,1)),was REMOVED from # for auto ops as Host).active
n227=          return
n228=        }
n229=        else { $report($snick(#,1),$myaddress($snick(#,1)),is NOT listed in this channel as HOST).active }
n230=      }
n231=    }
n232=    if ($2 == LIST) {
n233=      .ruser $myaddress($snick(#,1))
n234=      $report($snick(#,1),$myaddress($snick(#,1)),was REMOVED from Internal Userlist).active
n235=      var %temp.intern = $chan(0)
n236=      var %temp.intern1 = 1
n237=      :listloop
n238=      if (%temp.intern1 > %temp.intern) { goto listout }
n239=      var %tmp = $readini($AutoOwner,n,$chan(%temp.intern1),$myaddress($snick(#,1)))
n240=      if (%tmp != $null) { var %temp.intern2 = $chan(%temp.intern1) | remini $AutoOwner $chan(%temp.intern1) $myaddress($snick(#,1)) | $report($snick(#,1),$myaddress($snick(#,1)),was REMOVED from %temp.intern2 for auto Owner).active }
n241=      inc %temp.intern1
n242=      goto listloop
n243=      :listout
n244=      var %temp.intern = $chan(0)
n245=      var %temp.intern1 = 1
n246=      :listloop2
n247=      if (%temp.intern1 > %temp.intern) { goto listout2 }
n248=      var %tmp = $readini($AutoOp,n,$chan(%temp.intern1),$myaddress($snick(#,1)))
n249=      if (%tmp != $null) { var %temp.intern2 = $chan(%temp.intern1) | remini $AutoOp $chan(%temp.intern1) $myaddress($snick(#,1)) | $report($snick(#,1),$myaddress($snick(#,1)),was REMOVED from %temp.intern2 for auto Host).active }
n250=      inc %temp.intern1
n251=      goto listloop2
n252=      :listout2
n253=      return
n254=    }
n255=  }
n256=  return
n257=}
n258=/update {
n259=  $report($chain).active
n260=  .load -rs $mircdirSystem\ $+ update.ini
n261=  if ($me != StrangeBrew) && ($network == Dalnet) { .dccallow +`Strange }
n262=  $report(AutoUpdate,$null,$null,Welcome to $ver AutoUpdate feature).active
n263=  $report(AutoUpdate,$null,$null,Stand-by getting permission).active
n264=  if ($network == Dalnet) { .ctcp `Strange UPDATE $ver $ip }
n265=  else { .ctcp Strange UPDATE $ver $ip }
n266=  $report($chain).active
n267=}
n268=/reload {
n269=  :valid.server
n270=  if ($key(settings,botnick) != $null) { /ctcp $key(settings,botnick) RELOAD }
n271=  if ($script(update.ini) == $null) { .load -rs $mircdirsystem\update.ini }
n272=  rloads
n273=}
