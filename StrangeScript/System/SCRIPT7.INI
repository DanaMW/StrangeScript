[script]
n0=alias format {
n1=  if ($1 == $null) { $report(Alias - FORMAT,$null,Error,$right($1-,-1),No text to format).active | halt }
n2=  ;say $0 | halt
n3=  var %tmp.ss = 1
n4=  var %tmp.sss = $chr(91) $+ $chr(93) $chr(91)
n5=  while (%tmp.ss <= $0) {
n6=    echo -at $ [ $+ [ %tmp.ss ] ]
n7=    var %tmp.sss = %tmp.sss $+  $ [ $+ [ %tmp.ss ] ] $+ $chr(93)  $chr(91)
n8=    inc %tmp.ss
n9=    if (%tmp.ss > $0) { break }
n10=  }
n11=  var %tmp.sss = %tmp.sss $+ $chr(93)
n12=  say %tmp.sss
n13=  halt
n14=}
n15=on *:sockopen:@sockchecka*:{
n16=  if ($sockerr > 0) { /no.1080 $right($sockname,-11) | return }
n17=  sockwrite -n $sockname $server $port
n18=  $report(Gate Check,Checking for gate on,%Gate.Usera [ $+ [ $right($sockname,-11) ] ] ,at port 1080).status
n19=}
n20=on *:sockopen:@sockcheckb*:{
n21=  if ($sockerr > 0) { /no.23 $right($sockname,-11) | return }
n22=  sockwrite -n $sockname $server $port
n23=  $report(Gate Check,Checking for gate on,%Gate.Usera [ $+ [ $right($sockname,-11) ] ] ,at port 23).status
n24=}
n25=alias no.1080 {
n26=  .timerGATEAC $+ $1 OFF
n27=  .timerGATEAS $+ $1 OFF 
n28=  sockclose @sockchecka [ $+ [ $1 ] ]
n29=  unset %Gate.Usera [ $+ [ $1 ] ]
n30=  return
n31=}
n32=alias no.23 {
n33=  .timerGATEBC $+ $1 OFF
n34=  .timerGATEBS $+ $1 OFF 
n35=  sockclose @sockcheckb [ $+ [ $1 ] ]
n36=  unset %Gate.Userb [ $+ [ $1 ] ]
n37=  return
n38=}
n39=on 1:SOCKREAD:@sockchecka*:{
n40=  if ($sockerr > 0) { /no.1080 $right($sockname,-11) | return }
n41=  .timerGATEAC [ $+ [ $right($sockname,-11) ] ] OFF
n42=  .timerGATEAS [ $+ [ $right($sockname,-11) ] ] OFF 
n43=  $report(Gate Present,gated ip,%Gate.Usera [ $+ [ $right($sockname,-11) ] ] ,on port 1080).status
n44=  if ($read($mircdirgates.txt,ns,$gettok(%Gate.Usera [ $+ [ $right($sockname,-11) ] ] ,2,32)) == $null) {  .write -a $mircdirGates.txt $gettok(%Gate.Usera [ $+ [ $right($sockname,-11) ] ] ,2,32) }
n45=  sockclose @sockchecka [ $+ [ $right($sockname,-11) ] ]
n46=  unset %Gate.Usera [ $+ [ $right($sockname,-11) ] ]
n47=  return
n48=}
n49=on 1:SOCKREAD:@sockcheckb*:{
n50=  if ($sockerr > 0) { /no.23 $right($sockname,-11) | return }
n51=  .timerGATEBC [ $+ [ $right($sockname,-11) ] ] OFF
n52=  .timerGATEBS [ $+ [ $right($sockname,-11) ] ] OFF 
n53=  $report(Gate Present,gated ip,%Gate.Usera [ $+ [ $right($sockname,-11) ] ] ,on port 23).status
n54=  if ($read($mircdirgates.txt,ns,$gettok(%Gate.Userb [ $+ [ $right($sockname,-11) ] ] ,2,32)) == $null) {  .write -a $mircdirGates.txt $gettok(%Gate.Userb [ $+ [ $right($sockname,-11) ] ] ,2,32) }
n55=  sockclose @sockcheckb [ $+ [ $right($sockname,-11) ] ]
n56=  unset %Gate.Userb [ $+ [ $right($sockname,-11) ] ]
n57=  return
n58=}
n59=menu channel {
n60=  -
n61=  Join/Part
n62=  .List Channels:/list $$?="ENTER ANY PARAMETRS FOR LIST $cr N=*wildtext* Ect."
n63=  .Join ?:/join #$$?="Enter a channel to join:"
n64=  .Recent Joins
n65=  ..Clear Join List: keywrite settings remjoins ""
n66=  ..-
n67=  ..$gettok($key(settings,remjoins),1,44) $+ :jn $gettok($key(settings,remjoins),1,44)
n68=  ..$gettok($key(settings,remjoins),2,44) $+ :jn $gettok($key(settings,remjoins),2,44)
n69=  ..$gettok($key(settings,remjoins),3,44) $+ :jn $gettok($key(settings,remjoins),3,44)
n70=  ..$gettok($key(settings,remjoins),4,44) $+ :jn $gettok($key(settings,remjoins),4,44)
n71=  ..$gettok($key(settings,remjoins),5,44) $+ :jn $gettok($key(settings,remjoins),5,44)
n72=  ..$gettok($key(settings,remjoins),6,44) $+ :jn $gettok($key(settings,remjoins),6,44)
n73=  ..$gettok($key(settings,remjoins),7,44) $+ :jn $gettok($key(settings,remjoins),7,44)
n74=  ..$gettok($key(settings,remjoins),8,44) $+ :jn $gettok($key(settings,remjoins),8,44)
n75=  ..$gettok($key(settings,remjoins),9,44) $+ :jn $gettok($key(settings,remjoins),9,44)
n76=  ..$gettok($key(settings,remjoins),10,44) $+ :jn $gettok($key(settings,remjoins),10,44)
n77=  ..$gettok($key(settings,remjoins),11,44) $+ :jn $gettok($key(settings,remjoins),11,44)
n78=  ..$gettok($key(settings,remjoins),12,44) $+ :jn $gettok($key(settings,remjoins),12,44)
n79=  ..$gettok($key(settings,remjoins),13,44) $+ :jn $gettok($key(settings,remjoins),13,44)
n80=  ..$gettok($key(settings,remjoins),14,44) $+ :jn $gettok($key(settings,remjoins),14,44)
n81=  ..$gettok($key(settings,remjoins),15,44) $+ :jn $gettok($key(settings,remjoins),15,44)
n82=  ..$gettok($key(settings,remjoins),16,44) $+ :jn $gettok($key(settings,remjoins),16,44)
n83=  ..$gettok($key(settings,remjoins),17,44) $+ :jn $gettok($key(settings,remjoins),17,44)
n84=  ..$gettok($key(settings,remjoins),18,44) $+ :jn $gettok($key(settings,remjoins),18,44)
n85=  ..$gettok($key(settings,remjoins),19,44) $+ :jn $gettok($key(settings,remjoins),19,44)
n86=  ..$gettok($key(settings,remjoins),20,44) $+ :jn $gettok($key(settings,remjoins),20,44)
n87=  .Part current:/part #
n88=  .Part All:/partall
n89=  .Cycle:/cycle
n90=  .Cycle All:/cycleall
n91=  -
n92=  Quit This Session:quit $unhex.ini($master(settings,quit.message)) | partall | close STATUS
n93=  ;Quit All Sessions:scid -a out
n94=  Quit All Sessions:aquit
n95=  Quit All and Exit:{ aquit | exit }
n96=}
n97=alias SLViewer {
n98=  if ($window(@ShitList).x != $null) { .window -c @ShitList }
n99=  .window -ak0l @ShitList -1 -1 100 300 @ShitClick
n100=  var %tmp.slw = 1
n101=  if ($numtok($key(settings,shithead),44) < 1) { aline 08 @ShitList No one shitlisted | goto done }
n102=  :sloop
n103=  if (%tmp.slw > $numtok($key(settings,shithead),44)) { goto done }
n104=  aline 04 @ShitList $gettok($key(settings,shithead),%tmp.slw,44)
n105=  inc %tmp.slw
n106=  goto sloop
n107=  :done
n108=}
n109=menu @ShitClick {
n110=  Refresh:/slviewer
n111=  Add any IP:{ var %tmp = $$?="IP to add" | keywrite settings shithead $addtok($key(settings,shithead),%tmp,44) | slviewer }
n112=  Delete Selected Entry:{ if ($sline(@ShitList,1) == $null) { halt } | keywrite settings shithead $remtok($key(settings,shithead),$sline(@ShitList,1),44) | slviewer }
n113=  Remove Last:{ shit | slviewer }
n114=  Clear List:{ unshit | slviewer }
n115=  Close Window: .window -c @ShitList
n116=}
n117=on ^*:NOTIFY: {
n118=  haltdef
n119=  if ($key(settings,rumble) == ON) { halt }
n120=  if ($notify($nick).whois == $true) { whois $nick }
n121=  if ($notify($nick).sound != $null) { script.play $notify($nick).sound }
n122=  if ($notify($nick).note != $null) { $report(Notify-On,$nick,is now online,Notes:,$notify($nick).note).active }
n123=  if ($notify($nick).note == $null) { $report(Notify-On,$nick,is now online).active }
n124=  if ($master(settings,extra.info) == ON) {
n125=    if (status !isin $window($active)) {
n126=      if ($notify($nick).note != $null) { $report(Notify-On,$nick,is now online,Notes:,$notify($nick).note).status }
n127=      if ($notify($nick).note == $null) { $report(Notify-On,$nick,is now online).status }
n128=    }
n129=  }
n130=  if ($gettok($notify($nick).note,1,32) == INVITE) && ($nick !ison $gettok($notify($nick).note,2,32) && ($me !ison $gettok($notify($nick).note,2,32)) { .invite $nick $gettok($notify($nick).note,2,32) }
n131=  if ($gettok($notify($nick).note,1,32) == GHOST) && ($nick != $me) {
n132=    if ($network != Undernet) { nickserv ghost $nick $readini($textdir $+ PassWord.ini,n,$network,$nick) }
n133=  }
n134=  halt
n135=}
n136=on ^1:UNOTIFY: {
n137=  if ($key(settings,rumble) == ON) { halt }
n138=  $report(Notify-Off,$nick,is now offline).active
n139=  if ($master(settings,extra.info) == ON) { IF (status !isin $window($active)) { $report(Notify-Off,$nick,is now offline).status } }
n140=  halt
n141=}
n142=menu @StrangeScript {
n143=  Close Window:{ /window -c @StrangeScript | splay stop }
n144=}
n145=on 1:DNS: {
n146=  ;($master(settings,which.window) == On)
n147=  if ($raddress == $null) { $report($null,$null,*** Unable to resolve,$iaddress,$naddress).active | halt }
n148=  $report($chain).active
n149=  var %n = $dns(0)
n150=  var %n1 = $dns(%n) | var %n2 = $dns(%n).nick | var %n3 = $dns(%n).addr
n151=  if (%n1 != $null) { $report(DNS,LookUp,%n1).active }
n152=  if (%n == 1) { $report(DNS,$null,$null,Found %n address).active | clipboard $dns(1).ip }
n153=  else { $report(DNS,$null,$null,Found %n addresses).active | clipboard $dns(1).ip - $dns(2).ip - $dns(3).ip - $dns(4).ip - $dns(5).ip }
n154=  if (%n2 != $null) { $report(DNS,Nick,%n2).active }
n155=  if (%n3 != $null) { $report(DNS,Address,%n3).active }
n156=  while (%n > 0) {
n157=    var %n4 = $dns(%n).ip
n158=    if (%n4 != $null) { $report(DNS,IP,%n4).active }
n159=    ;$report(DNS,%n1 $dns(%n),$dns(%n).nick,$dns(%n).addr,$dns(%n).ip).active
n160=    dec %n
n161=  }
n162=  $report($chain).active
n163=  halt
n164=}
n165=menu @NumParse {
n166=  dclick write parms.txt $strip($line(@NumParse,$1))
n167=  Clear:/clear @NumParse
n168=  Close:{ .disable #AuthorMode | /window -c @NumParse | keywrite settings Author OFF | setupshow Author Mode $key(settings,Author) }
n169=}
n170=;raw *:*:{
n171=;  if ($numeric == 421) { return }
n172=;  $report(Raw,$numeric,$event,$1-).active
n173=;}
n174=raw 603:*:{ .timer603 1 3 $report(Watch Info,$null,$null,$2-).active }
n175=raw 5:*:{ return | parse.setup $1- }
n176=raw 8:*:{ $report(Server Info,$null,$null,$2-,$null).active | halt }
n177=raw 290:*:{ $report(Server Info,$null,$null,$2-,$null).active | halt }
n178=raw 292:*:{ $report(Server Info,$null,$null,$2-,$null).active | halt }
n179=raw 221:*:{ keywrite settings bossmodes $2 | $report(Server Info,$null,$null,$2-,$null).active | halt }
n180=raw 320:*:{ $report(Server Info,$null,$null,$2-,$null).active | halt }
n181=raw 251:*:{ $report(Server Info,$null,$null,$2-,$null).active | halt }
n182=raw 252:*:{ $report(Server Info,$null,$null,$2-,$null).active | halt }
n183=raw 253:*:{ $report(Server Info,$null,$null,$2-,$null).active | halt }
n184=raw 254:*:{ $report(Server Info,$null,$null,$2-,$null).active | halt }
n185=raw 255:*:{ $report(Server Info,$null,$null,$2-,$null).active | halt }
n186=raw 265:*:{ $report(Server Info,$null,$null,$2-,$null).active | halt }
n187=raw 266:*:{ $report(Server Info,$null,$null,$2-,$null).active | halt }
n188=raw 275:*:{ $report($2-).active | halt }
n189=raw 305:*:{ $report(Back,$1,$null,$2-,$null).active | halt }
n190=raw 306:*:{ $report(Away,$1,$null,$2-,$null).active | halt }
n191=raw 432:*:{ $report(Nick,$null,Failed,$2-,$null).active | halt }
n192=raw 433:*:{
n193=  $report(Nick,$2,Failed,$3-).active
n194=  if ($key(settings,beme) == ON) && ($key(settings,recover) != $me) {
n195=    if ($network != Undernet) {
n196=      nickserv ghost $key(settings,recover) $readini($mircdirtext\PassWord.ini,n,$network,$key(settings,recover)) 
n197=      $report(Nick,Recover,Auto-Ghost,$null,Recovery is Auto-Ghost'ing your desired nick).active
n198=    }
n199=    if ($network == Undernet) { $report(Nick,Recover,Hold Pattern,$null,Recovery is in UnderNet Holding Pattern - waiting for your ghost nick to drop).active }
n200=    ;assimilate 
n201=  }
n202=  halt
n203=}
n204=raw 440:*:{ $report(Server Info,$null,$null,$2-,$null).active | halt }
n205=raw 502:*:{ $report(Server Info,$null,$null,$2-,$null).active | halt }
n206=raw 307:*:{ $report($2-).active | halt }
n207=raw 310:*:{ $report($2,$null,$null,$3 $4 $5,$6-).active | halt }
n208=raw 330:*:{ $report($2,$null,$4-,$3).active | halt }
n209=raw 332:*:{ echo -t $2 $sys $report(Topic,$2,$null,$null,$3-) | halt }
n210=raw 671:*:{ $report($2,$null,$3-).active | halt }
n211=raw 333:*:{ echo -at $sys $report(Topic,$2,Set By:,$3) $report($null,$null,On:,$asctime($4,dddd mm/dd/yyyy hh:nn:ss TT)) | halt }
n212=; This junk below was for testing raw 333 - I will take it out when I am sure I am done and 333 works on all calls.
n213=;echo -at $sys The topic of $2 was created $replace($duration($calc($ctime - $4)),sec,$+($chr(32),second),min,$+($chr(32),minute),hr,$+($chr(32),hour),day,$+($chr(32),day),wk,$+($chr(32),week)) ( $+ $replace($nduration($calc($ctime - $4)),sec,$+($chr(32),second),min,$+($chr(32),minute),hr,$+($chr(32),hour),day,$+($chr(32),day),wk,$+($chr(32),week)) $+ )
n214=raw 338:*:{
n215=  if (* host* iswm $4-) { $report($2,$null,$4-,$3).active | halt } 
n216=  if (*actual* iswm $5) { $report($2,$null,Actual user is,$3).active | halt }
n217=  if (*actually* iswm $4) { $report($2,$null,$3 $4,$5).active | halt }
n218=}
n219=raw 378:*:{ $report($2,$null,$null,$3 $4 $5,$6-).active | halt }
n220=raw 379:*:{ $report($2,$null,$null,$3 $4 $5,$6-).active | halt }
n221=raw 341:*:{ $report(Invite,Success,$2,has been invited to $3).active | halt }
n222=raw 443:*:{ $report(Invite,Failed,$2,Already on $3).active | halt }
n223=raw 518:*:{ $report(Invite,Failed,$2 $3,$4,$5,$6-).active | halt }
n224=raw 471:*:{ $report(Join,Failed,Cant join $2,Room Limit Exceded).active | halt }
n225=raw 473:*:{ $report(Join,Failed,Cant join $2,Invite Only).active | $report(Try to use ChanServ to auto invite you.).active | chanserv invite $2 $me |  halt }
n226=raw 474:*:{ $report(Join,Failed,Cant join $2,Banned IP).active | halt }
n227=raw 475:*:{ $report(Join,Failed,Cant join $2,Wrong Member Key).active | halt }
n228=raw 477:*:{ $report(Join,Failed,Cant join $2,Need Registered Nick).active | halt }
n229=raw 404:*:{ $report(Server,Failed,$2,Can Not Send To Channel).active | halt }
n230=raw 412:*:{ $report(Server,Failed,$null,No Text To Send).active | halt }
n231=raw 441:*:{ $report(Server,Failed,$2,User Not On Channel).active | halt }
n232=raw 442:*:{ $report(Server,Failed,$2,Your Not On Channel).active | halt }
n233=raw 403:*:{ $report(Server,Failed,$2,No Such Channel).active | halt }
n234=raw 407:*:{ $report(Server,Failed,$null,Too Many Targets).active | halt }
n235=raw 381:*:{ $report(Server,Success,$null,$1-).active | halt }
n236=#AuthorMode off
n237=raw *:*:{ if ($key(settings,Author) == ON) { set %Parse $1- | set %ParseNum $highcol $+ $numeric $+ : | Parsme } }
n238=#AuthorMode end
n239=menu @RoomKeys { 
n240=  dclick:{ 
n241=    if (key isin $sline(@RoomKeys,1)) { msg $$?="Channel/Nick to send to?" 10 $+ $chr(91) $+ $white $+ Room Keys $+ 10 $+ $chr(93) $chr(91) $+ $lowcol $+ Channel: $bright $+ %tmp.keys $+ 10 $+ $chr(93) $chr(91) $+ $lowcol $+ $strip($gettok($sline(@RoomKeys,1),3,32)) $+ : $bright $+ $strip($gettok($sline(@RoomKeys,1),4,32)) $+ 10 $+ $chr(93) | halt }
n242=    if (topic isin $sline(@RoomKeys,1)) { msg $$?="Channel/Nick to send to?" 10 $+ $chr(91) $+ $white $+ Room Keys $+ 10 $+ $chr(93) $chr(91) $+ $lowcol $+ Channel: $bright $+ %tmp.keys $+ 10 $+ $chr(93) $chr(91) $+ $lowcol $+ $strip($gettok($sline(@RoomKeys,1),3,32)) $+ :  $+ $gettok($sline(@RoomKeys,1),4-,32) $+ 10 $+ $chr(93) | halt }
n243=    if (onjoin isin $sline(@RoomKeys,1)) { msg $$?="Channel/Nick to send to?" 10 $+ $chr(91) $+ $white $+ Room Keys $+ 10 $+ $chr(93) $chr(91) $+ $lowcol $+ Channel: $bright $+ %tmp.keys $+ 10 $+ $chr(93) $chr(91) $+ $lowcol $+ $strip($gettok($sline(@RoomKeys,1),3,32)) $+ :  $+ $gettok($sline(@RoomKeys,1),4-,32) $+ 10 $+ $chr(93) | halt }
n244=    if (onpart isin $sline(@RoomKeys,1)) { msg $$?="Channel/Nick to send to?" 10 $+ $chr(91) $+ $white $+ Room Keys $+ 10 $+ $chr(93) $chr(91) $+ $lowcol $+ Channel: $bright $+ %tmp.keys $+ 10 $+ $chr(93) $chr(91) $+ $lowcol $+ $strip($gettok($sline(@RoomKeys,1),3,32)) $+ :  $+ $gettok($sline(@RoomKeys,1),4-,32) $+ 10 $+ $chr(93) | halt }
n245=    else { msg $$?="Channel/Nick to send to?" 10 $+ $chr(91) $+ $white $+ Room Keys $+ 10 $+ $chr(93) $chr(91) $+ $lowcol $+ Channel: $bright $+ %tmp.keys $+ 10 $+ $chr(93) $chr(91) $+  $+ $strip($gettok($sline(@RoomKeys,1),1-,32)) $+ 10 $+ $chr(93) }
n246=  }
n247=  Refresh Window:window -c @RoomKeys | /roomklist %tmp.keys
n248=  Close Window:window -c $window($active) | unset %tmp.keys
n249=}
n250=on 1:CLOSE:@RoomKeys:{ unset %tmp.keys }
n251=menu @ChitChat {
n252=  Clear:clear @chitChat
n253=  Minimize:window -n @ChitChat
n254=  Close:window -c @ChitChat
n255=}
n256=on 1:SOCKLISTEN:SERVTEST*:{
n257=  $report($sockname,$sock(SERVTEST).ip connecting to SERVTEST).active
n258=  var %itch = TMP $+ $rand(1,100)
n259=  sockaccept %itch
n260=  halt
n261=}
n262=on 1:SOCKOPEN:SERVTEST*:{
n263=  $report($sockname,$sock(SERVTEST).ip connecting to SERVTEST).active
n264=  ;sockwrite -nt $sockname GET X HTTP/1.1
n265=  halt
n266=}
n267=on 1:SOCKREAD:SERVTEST*:{
n268=  if ($sockerr > 0) { $report(Sock Error,$sockname,READ,$sock($sockname).wserr,$sock($sockname).wsmsg).status | return }
n269=  :next
n270=  sockread %line1
n271=  if ($sockbr == 0) { return }
n272=  msg #COS $report($sockname,Read,%line1)
n273=  ;$report($sockname,Read,%line1).active
n274=  unset %line1
n275=  goto next
n276=}
n277=on *:SOCKREAD:TMP*:{
n278=  if ($sockerr > 0) { $report(Sock Error,$sockname,READ,$sock($sockname).wserr,$sock($sockname).wsmsg).status | return }
n279=  :next
n280=  sockread %line
n281=  if ($sockbr == 0) { goto tmpclose }
n282=  $report($sockname,Read,%line).active
n283=  unset %line
n284=  goto next
n285=  :tmpclose
n286=  $report($sockname,$sock(SERVTEST).ip getting the boot from SERVTEST).active
n287=  sockwrite -n $sockname <br>Due to a high volume of requests we were unable to serve your page request(s). Check back later.<br><br>www.strangeout.com<br>strangeserv.strangeout.com<br>lakeserv.strangeout.com<br>music.strangeout.com<br>radio.strangeout.com<br>
n288=
n289=
n290=
n291=  sockclose $sockname
n292=  return
n293=}
n294=on 1:SOCKLISTEN:BNCS:{
n295=  $report(BNC,$sock(BNCS).ip connecting to BNC,Connection number,%BNC.count).active
n296=  if ($master(settings,Sbnc.limit) == $null) { masterwrite settings Sbnc.limit  3 }
n297=  if ($master(settings,Sbnc.limit) == OFF) { goto No.Parking }
n298=  if ($sock(BNCUSER*,0) < $master(settings,Sbnc.limit)) || ($master(settings,Sbnc.limit) == 0) {
n299=    sockaccept BNCUSER [ $+ [ %BNC.count ] ]
n300=    sockwrite -n BNCUSER [ $+ [ %BNC.count ] ] notice :*** Welcome to %BNC.version  ***
n301=    sockwrite -n BNCUSER [ $+ [ %BNC.count ] ] notice :
n302=    sockwrite -n BNCUSER [ $+ [ %BNC.count ] ] notice :You need to say /quote PASS <password>
n303=    inc  %BNC.count
n304=  } 
n305=  else {
n306=    :no.parking
n307=    var %tmp.NOWAY = NOWAY $+ $rand(AA,ZZ)
n308=    sockaccept %tmp.NOWAY
n309=    sockwrite -n %tmp.NOWAY notice :***** Welcome to %BNC.version  *****
n310=    sockwrite -n %tmp.NOWAY notice :
n311=    sockwrite -n %tmp.NOWAY notice :The BNC is full, please try back later.
n312=    sockclose %tmp.NOWAY
n313=    halt
n314=  }
n315=  halt
n316=}
n317=on *:SOCKREAD:BNCUSER*:{
n318=  if ($sockerr > 0) { $report(Sock Error,$sockname,READ,$sock($sockname).wserr,$sock($sockname).wsmsg).status | return }
n319=  :next.bnc.read
n320=  sockread %bnc.read.line
n321=  if ($sockbr == 0) { return }
n322=  tokenize 32 %bnc.read.line
n323=  if ($1 == SUB) {
n324=    if (%BNC.level [ $+ [ $right($sockname,-7) ] ] != ADMIN) { goto next.bnc.read }
n325=    sockwrite -n $sockname notice :Here are the Admin commands. Currently $sock(BNCUSER*,0) connections active.
n326=    var %tmp.b = $sock(BNCUSER*,0)
n327=    if (%tmp.b == $null) { var %tmp.b = 0 }
n328=    sockwrite -n $sockname notice :BNC ... Listing Information for %BNC.version ...
n329=    sockwrite -n $sockname notice :There is currently %tmp.b connection(s) to the BNC server.
n330=    var %tmp.bnci = 1
n331=    while (%tmp.bnci <= $sock(BNCUSER*,0)) {
n332=      sockwrite -n $sockname notice :User %tmp.bnci %BNC.nick [ $+ [ $right($sock(BNCUSER*,%tmp.bnci),-7) ] ]  %BNC.user [ $+ [ $right($sock(BNCUSER*,%tmp.bnci),-7) ] ]
n333=      sockwrite -n $sockname notice :User %tmp.bnci Connected to %BNC.server [ $+ [ $right($sock(BNCUSER*,%tmp.bnci),-7) ] ]
n334=      inc %tmp.bnci
n335=      if (%tmp.bnci > $sock(BNCUSER*,0)) { break }
n336=    }
n337=    goto next.bnc.read
n338=  }
n339=  if ($1 == KEEPALIVE) { sockwrite -n $sockname notice :The KEEPALIVE command is not yet implimented. | goto next.bnc.read }
n340=  if ($1 == VIP) { sockwrite -n $sockname notice :The VIP command is not yet implimented. | goto next.bnc.read }
n341=  if ($1 == PASS) {
n342=    if ($2 === $master(settings,Sbnc.adpass)) {
n343=      sockwrite -n $sockname notice :Now use /quote CONN <server ip> $chr(91) $+ <port> $+ $chr(93) $chr(91) $+ <password> $+ $chr(93)
n344=      $report(BNC,ADMIN password sent,$1-,Connection number,$right($sockname,-7)).active
n345=      set %BNC.authed $+ $right($sockname,-7) YES
n346=      set %BNC.level $+ $right($sockname,-7) ADMIN
n347=      goto next.bnc.read
n348=    }
n349=    if ($2 === $master(settings,Sbnc.pass)) {
n350=      sockwrite -n $sockname notice :Now use /quote CONN <server ip> $chr(91) $+ <port> $+ $chr(93)
n351=      $report(BNC,USER password sent,%bnc.read.line,Connection number,$right($sockname,-7)).active
n352=      set %BNC.authed $+ $right($sockname,-7) YES
n353=      set %BNC.level $+ $right($sockname,-7) USER
n354=      goto next.bnc.read
n355=    }
n356=    sockwrite -n $sockname notice :Your password didnt match.
n357=    goto next.bnc.read
n358=  }
n359=  if ($1 == CONN) {
n360=    if (%BNC.authed [ $+ [ $right($sockname,-7) ] ] != YES) { sockwrite -n $sockname notice :You are not authorized to use CONN, you must /raw pass <password> first | goto next.bnc.read }
n361=    $report(BNC,Connecting to server,Connection $right($sockname,-7),$1-).active
n362=    if (%BNC.nick [ $+ [ $right($sockname,-7) ] ] == $null) { set %BNC.nick $+ $right($sockname,-7) $rand(AAAA,ZZZZ) }
n363=    if (%BNC.user [ $+ [ $right($sockname,-7) ] ] == $null) { set %BNC.user $+ $right($sockname,-7) StrangeBNC }
n364=    set %BNC.server [ $+ [ $right($sockname,-7) ] ] $2 $3
n365=    if ($4 != $null) { set %BNC.pass $+ $right($sockname,-7) $4 }
n366=    if ($3 == $null) { sockopen BNCRELAY [ $+ [ $right($sockname,-7) ] ] $2 6667 }
n367=    else { sockopen BNCRELAY [ $+ [ $right($sockname,-7) ] ] $2 $3 }
n368=    goto next.bnc.read
n369=  }
n370=  if ($1 == NICK) && (%BNC.authed [ $+ [ $right($sockname,-7) ] ] != YES) { set %BNC.nick $+ $right($sockname,-7) $2 | $report(BNC,Nick Saved,%BNC.nick [ $+ [ $right($sockname,-7) ] ] ,Connection number,$right($sockname,-7)).active | goto next.bnc.read }
n371=  if ($1 == USER) && (%BNC.authed [ $+ [ $right($sockname,-7) ] ] != YES) { set %BNC.user $+ $right($sockname,-7) $2- | $report(BNC,User Saved,%BNC.user [ $+ [ $right($sockname,-7) ] ] ,Connection number,$right($sockname,-7)).active | goto next.bnc.read }
n372=  if ($sock(BNCRELAY [ $+ [ $right($sockname,-7) ] ] ) != $null) && (*god-find* !iswm $1-) { sockwrite -n BNCRELAY [ $+ [ $right($sockname,-7) ] ] $1- }
n373=  if ($master(settings,Sbnc.monitor) == ON) && (*Lag-CK* !iswm $1-) && (*god-find* !iswm $1-) { $report(BNC,Monitor User,Connection number $right($sockname,-7),$1-).active }
n374=  goto next.bnc.read
n375=}
n376=on 1:SOCKOPEN:BNCRELAY*:{
n377=  if ($sockerr > 0) { $report(Sock Error,$sockname,READ,$sock($sockname).wserr,$sock($sockname).wsmsg).status | return }
n378=  $report(Relay is open,Connection number,$right($sockname,-8)).active
n379=  if (%BNC.pass [ $+ [ $right($sockname,-8) ] ] != $null) { sockwrite -n $sockname pass %BNC.pass [ $+ [ $right($sockname,-8) ] ] $cr NICK %BNC.nick [ $+ [ $right($sockname,-8) ] ] $cr USER %BNC.user [ $+ [ $right($sockname,-8) ] ] }
n380=  else { sockwrite -n $sockname NICK %BNC.nick [ $+ [ $right($sockname,-8) ] ] $cr USER %BNC.user [ $+ [ $right($sockname,-8) ] ] }
n381=}
n382=on 1:SOCKREAD:BNCRELAY*:{
n383=  if ($sockerr > 0) { $report(Sock Error,$sockname,READ,$sock($sockname).wserr,$sock($sockname).wsmsg).status | return }
n384=  :next.relay.read
n385=  sockread %relay.read.line
n386=  if ($sockbr == 0) { return }
n387=  if ($sock(BNCUSER [ $+ [ $right($sockname,-8) ] ] ) != $null) && (*god-find* !iswm %relay.read.line) { sockwrite -n BNCUSER [ $+ [ $right($sockname,-8) ] ] %relay.read.line }
n388=  if ($master(settings,Sbnc.monitor) == ON) && (*Lag-CK* !iswm %relay.read.line) && (*god-find* !iswm %relay.read.line) { $report(BNC,Monitor Server,Connection number $right($sockname,-8),%relay.read.line).active }
n389=  goto next.relay.read
n390=}
n391=on 1:SOCKCLOSE:BNCRELAY*:{ sockclose BNCUSER [ $+ [ $right($sockname,-8) ] ] | unset %BNC.nick [ $+ [ $right($sockname,-8) ] ] %BNC.user [ $+ [ $right($sockname,-8) ] ] %BNC.pass [ $+ [ $right($sockname,-8) ] ] %BNC.authed [ $+ [ $right($sockname,-8) ] ] | %BNC.level [ $+ [ $right($sockname,-8) ] ] }
n392=on 1:SOCKCLOSE:BNCUSER*:{ sockclose BNCRELAY [ $+ [ $right($sockname,-7) ] ] | unset %BNC.nick [ $+ [ $right($sockname,-7) ] ] %BNC.user [ $+ [ $right($sockname,-7) ] ] %BNC.pass [ $+ [ $right($sockname,-7) ] ] %BNC.authed [ $+ [ $right($sockname,-7) ] ] | %BNC.level [ $+ [ $right($sockname,-7) ] ] }
n393=alias moodll.error { $report(moo.dll,ERROR,$1-).active }
n394=alias moodll.getcmd { set %moodll.cmd $1- | if (%moodll.cmd == $null) { set %moodll.cmd say } }
n395=alias gfx {
n396=  moodll.getcmd $1-
n397=  if ($dll(moo.dll,gfxinfo,_) == -1) { %moodll.cmd $report(moodll.error Could not find GFX card info in registry) }
n398=  else { %moodll.cmd $report(Graphics,$null,$null,$dll(moo.dll,gfxinfo,_)) }
n399=}
n400=on 1:CLOSE:@Debug:{ .keywrite settings Debug OFF | setupshow Debug Mode $key(settings,debug) }
n401=alias mbm {
n402=  moodll.getcmd $1-
n403=  if ($gettok($dll(moo.dll,mbm5info,1),1,44) == error) {
n404=    moodll.error $gettok($dll(moo.dll,mbm5info,1),2,44)
n405=  }
n406=  else {
n407=    getmbm5info
n408=    %moodll.cmd $report(MBM5 Info,$null,$null,$result)
n409=  }
n410=}
n411=alias ni {
n412=  moodll.getcmd $1-
n413=  ;%moodll.cmd $report(Network Interfaces,$null,$null,$dll(moo.dll,interfaceinfo,_))
n414=  var %tmp.ns = $dll(moo.dll,interfaceinfo,_)
n415=  if ($gettok(%tmp.ns,1,35) != $null) { %moodll.cmd $report(Network Interface,$null,$null,$chr(35) $+ $gettok(%tmp.ns,1,35)) }
n416=  if ($gettok(%tmp.ns,2,35) != $null) { %moodll.cmd $report(Network Interface,$null,$null,$chr(35) $+ $gettok(%tmp.ns,2,35)) }
n417=  if ($gettok(%tmp.ns,3,35) != $null) { %moodll.cmd $report(Network Interface,$null,$null,$chr(35) $+ $gettok(%tmp.ns,3,35)) }
n418=  if ($gettok(%tmp.ns,4,35) != $null) { %moodll.cmd $report(Network Interface,$null,$null,$chr(35) $+ $gettok(%tmp.ns,4,35)) }
n419=  if ($gettok(%tmp.ns,5,35) != $null) { %moodll.cmd $report(Network Interface,$null,$null,$chr(35) $+ $gettok(%tmp.ns,5,35)) }
n420=}
n421=alias stat {
n422=  moodll.getcmd $1-
n423=  set %rb_size 10
n424=  %moodll.cmd $report($chain)
n425=  %moodll.cmd $report(OS,$null,$null,$dll(moo.dll,osinfo,_))
n426=  ;%moodll.cmd $report(UpTime,$null,$null,$dll(moo.dll,uptime,_))
n427=  %moodll.cmd $report(UpTime,$null,System,$uptime(system,1))
n428=  %moodll.cmd $report(UpTime,$null,Server,$uptime(server,1))
n429=  %moodll.cmd $report(UpTime,$null,mIRC,$uptime(mIRC,1))
n430=  %moodll.cmd $report(CPU,$null,$null,$dll(moo.dll,cpuinfo,_))
n431=  var %rb_tmp = $dll(moo.dll,meminfo,_)
n432=  var %rb_tmp = $replace(%rb_tmp,/,$chr(160) $+ of $+ $chr(160))
n433=  %moodll.cmd $report(Memory,$null,$null,%rb_tmp) $report(Ram,$null,$null,$rambar)
n434=  %moodll.cmd $report(Screen,$null,$null,$dll(moo.dll,screeninfo,_))
n435=  ;%moodll.cmd $report(Network Interfaces,$null,$null,$dll(moo.dll,interfaceinfo,_))
n436=  var %tmp.ns = $dll(moo.dll,interfaceinfo,_)
n437=  if ($gettok(%tmp.ns,1,35) != $null) { %moodll.cmd $report(Network Interface,$null,$null,$chr(35) $+ $gettok(%tmp.ns,1,35)) }
n438=  if ($gettok(%tmp.ns,2,35) != $null) { %moodll.cmd $report(Network Interface,$null,$null,$chr(35) $+ $gettok(%tmp.ns,2,35)) }
n439=  if ($gettok(%tmp.ns,3,35) != $null) { %moodll.cmd $report(Network Interface,$null,$null,$chr(35) $+ $gettok(%tmp.ns,3,35)) }
n440=  if ($gettok(%tmp.ns,4,35) != $null) { %moodll.cmd $report(Network Interface,$null,$null,$chr(35) $+ $gettok(%tmp.ns,4,35)) }
n441=  if ($gettok(%tmp.ns,5,35) != $null) { %moodll.cmd $report(Network Interface,$null,$null,$chr(35) $+ $gettok(%tmp.ns,5,35)) }
n442=  gfx
n443=  %moodll.cmd $report($chain)
n444=  ; $+ $result $+ ]
n445=}
n446=; To use OLD CPU Speed calculation for previous alias, change "$dll(moo.dll,cpuinfo,_)" to "$dll(moo.dll,cpuinfo,old)"
n447=alias netinfo {
n448=  moodll.getcmd $1-
n449=  ;%moodll.cmd $report(Network Interfaces,$null,$null,$dll(moo.dll,interfaceinfo,_))
n450=  var %tmp.ns = $dll(moo.dll,interfaceinfo,_)
n451=  if ($gettok(%tmp.ns,1,35) != $null) { %moodll.cmd $report(Network Interface,$null,$null,$chr(35) $+ $gettok(%tmp.ns,1,35)) }
n452=  if ($gettok(%tmp.ns,2,35) != $null) { %moodll.cmd $report(Network Interface,$null,$null,$chr(35) $+ $gettok(%tmp.ns,2,35)) }
n453=  if ($gettok(%tmp.ns,3,35) != $null) { %moodll.cmd $report(Network Interface,$null,$null,$chr(35) $+ $gettok(%tmp.ns,3,35)) }
n454=  if ($gettok(%tmp.ns,4,35) != $null) { %moodll.cmd $report(Network Interface,$null,$null,$chr(35) $+ $gettok(%tmp.ns,4,35)) }
n455=  if ($gettok(%tmp.ns,5,35) != $null) { %moodll.cmd $report(Network Interface,$null,$null,$chr(35) $+ $gettok(%tmp.ns,5,35)) }
n456=}
n457=alias connstat {
n458=  moodll.getcmd $1-
n459=  if ($dll(moo.dll,connection,_) == -1) {
n460=    moodll.error Could not get RAS info on this OS
n461=  }
n462=  else {
n463=    %moodll.cmd 2dialup[ $+ $dll(moo.dll,connection,_) $+ ]
n464=  }
n465=}
n466=alias ramstat {
n467=  moodll.getcmd $1-
n468=  set %rb_size 10
n469=  var %rb_tmp = $dll(moo.dll,meminfo,_)
n470=  var %rb_tmp = $replace(%rb_tmp,/,$chr(160) $+ of $+ $chr(160))
n471=  %moodll.cmd $report(Memory,$null,$null,%rb_tmp) $report(Ram,$null,$null,$rambar)
n472=}
n473=alias netstat {
n474=  moodll.getcmd $1-
n475=  set %rb_size 10
n476=  var %tmp.ns = $dll(moo.dll,interfaceinfo,_)
n477=  if ($gettok(%tmp.ns,1,35) != $null) { %moodll.cmd $report(Network Interface,$null,$null,$chr(35) $+ $gettok(%tmp.ns,1,35)) }
n478=  if ($gettok(%tmp.ns,2,35) != $null) { %moodll.cmd $report(Network Interface,$null,$null,$chr(35) $+ $gettok(%tmp.ns,2,35)) }
n479=  if ($gettok(%tmp.ns,3,35) != $null) { %moodll.cmd $report(Network Interface,$null,$null,$chr(35) $+ $gettok(%tmp.ns,3,35)) }
n480=  if ($gettok(%tmp.ns,4,35) != $null) { %moodll.cmd $report(Network Interface,$null,$null,$chr(35) $+ $gettok(%tmp.ns,4,35)) }
n481=  if ($gettok(%tmp.ns,5,35) != $null) { %moodll.cmd $report(Network Interface,$null,$null,$chr(35) $+ $gettok(%tmp.ns,5,35)) }
n482=  ;%moodll.cmd $report(Network Interfaces,$null,$null,%tmp.ns)
n483=}
n484=alias screenstat {
n485=  moodll.getcmd $1-
n486=  %moodll.cmd 2screen[ $+ $dll(moo.dll,screeninfo,_) $+ ] 
n487=}
n488=alias uptime {
n489=  moodll.getcmd $1-
n490=  %moodll.cmd $report(OS,$null,$null,$dll(moo.dll,osinfo,_))
n491=  ;%moodll.cmd $report(UpTime,$null,$null,$dll(moo.dll,uptime,_))
n492=  %moodll.cmd $report(UpTime,$null,System,$uptime(system,1))
n493=  ;%moodll.cmd $report(UpTime,$null,Server,$uptime(server,1))
n494=  ;%moodll.cmd $report(UpTime,$null,mIRC,$uptime(mIRC,1))
n495=}
n496=alias rambar {
n497=  ;set %rb_size 10
n498=  if ( %rb_size == 0 ) { return }
n499=  set %rb_used $round($calc($dll(moo.dll,rambar,_) / 100 * %rb_size),0)
n500=  set %rb_unused $round($calc(%rb_size - %rb_used),0)
n501=  set %rb_usedstr $str(|,%rb_used)
n502=  set %rb_unusedstr $str(-,%rb_unused)
n503=  return $chr(91) $+ %rb_usedstr $+ %rb_unusedstr $+ $chr(93)
n504=}
n505=alias getmbm5info {
n506=  set %mbm5_info_temps $dll(moo.dll,mbm5info,1)
n507=  set %mbm5_info_voltages $dll(moo.dll,mbm5info,2)
n508=  set %mbm5_info_fans $dll(moo.dll,mbm5info,3)
n509=  set %mbm5_info_cpuspeed $dll(moo.dll,mbm5info,4)
n510=  set %mbm5_info_cpuusage $dll(moo.dll,mbm5info,5)
n511=  set %mbm5_cpus $calc($numtok(%mbm5_info_cpuspeed,44) / 2)
n512=  set %mbm5_cpuspeed $gettok(%mbm5_info_cpuspeed,2,44)
n513=  ; cpu
n514=  if ( %mbm5_cpus == 1 ) { set %mbm5_output %mbm5_cpuspeed $+ MHz CPU }
n515=  else { set %mbm5_output %mbm5_cpus CPUs @ %mbm5_cpuspeed $+ MHz }
n516=  ; temps  
n517=  set %reps 1
n518=  while (%reps <= $calc($numtok(%mbm5_info_temps,44)/2)) {
n519=    if ( $gettok(%mbm5_info_temps,$calc((%reps * 2)),44) == 0 || $gettok(%mbm5_info_temps,$calc((%reps * 2)),44) == 255 ) {
n520=      ; do nothing
n521=    }
n522=    else { set %mbm5_output %mbm5_output $+ , $gettok(%mbm5_info_temps,$calc((%reps * 2) - 1),44) $gettok(%mbm5_info_temps,$calc((%reps * 2)),44) $+ °C }
n523=    inc %reps
n524=  }
n525=  ; fans  
n526=  set %reps 1
n527=  while (%reps <= $calc($numtok(%mbm5_info_fans,44)/2)) {
n528=    if ( $gettok(%mbm5_info_fans,$calc((%reps * 2)),44) == 0 || $gettok(%mbm5_info_fans,$calc((%reps * 2)),44) == 255 ) {
n529=      ; do nothing
n530=    }
n531=    else { set %mbm5_output %mbm5_output $+ , $gettok(%mbm5_info_fans,$calc((%reps * 2) - 1),44) $gettok(%mbm5_info_fans,$calc((%reps * 2)),44) $+ RPM }
n532=    inc %reps
n533=  }  
n534=  ; voltages
n535=  set %reps 1
n536=  while (%reps <= $calc($numtok(%mbm5_info_voltages,44)/2)) {
n537=    if ( $gettok(%mbm5_info_voltages,$calc((%reps * 2)),44) == 0 || $gettok(%mbm5_info_voltages,$calc((%reps * 2)),44) == 255 ) {
n538=      ; do nothing
n539=    }
n540=    else { set %mbm5_output %mbm5_output $+ , $gettok(%mbm5_info_voltages,$calc((%reps * 2) - 1),44) $gettok(%mbm5_info_voltages,$calc((%reps * 2)),44) $+ v }
n541=    inc %reps
n542=  }  
n543=  return %mbm5_output
n544=}
