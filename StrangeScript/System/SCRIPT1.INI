[script]
n0=;on 1:PING: { msg #COS $time I've been pinged by the server again | return }
n1=on ^1:PONG: { haltdef | $report(Server,$1,PONG,with message,$2-).status | halt }
n2=on ^*:KICK:#: {
n3=  haltdef
n4=  $report(Kick,$nick,$chan,$knick,$1-).chan
n5=  if ($master(settings,extra.info) == ON) { $report(Kick,$nick,$chan,$knick,$1-).status }
n6=  if ($nick == $me) {  kick.T | kick.Y | .timerMyKick. $+ $network 1 2 /say.kicka $chan(#) }
n7=  else { kick.T | .timerSKick. $+ $network 1 2 /say.kickb $chan(#) }
n8=  if ($knick == $nick) { halt }
n9=  if ($knick == $me) { 
n10=    if ($nick == $server) { if ($key(settings,ircx) == ON) { .raw join $chan $key($chan,ownerkey) | halt } | else { halt } }
n11=    if ($nick == System) && ($key(settings,ircx) == ON) { .raw join $chan $key($chan,ownerkey) | halt }
n12=    if ($nick == ChanServ) && ($key(settings,ircx) == OFF) { halt }
n13=    if ($nick == ChanServ@services.dal.net) && ($network == Dalnet) { halt }
n14=    if ($key(settings,deop.protect) == OFF) { .raw join # $key(#,ownerkey) |  halt }
n15=    if ($sock(*) == $null) { keywrite settings boom.sock.chan # | keywrite settings boom.sock.nick $nick | Boom }
n16=    if ($sock(*) != $null) { sw ALL join $chan $key(#,ownerkey) }
n17=    rumble on
n18=    if ($key(settings,ircx) == ON) { sw all access # clear }
n19=    if ($address($nick,4) != $address($me,4)) { sw all mode # -o-o-o-o-o-o $ial($address($nick,4),1).nick $ial($address($nick,4),2).nick $ial($address($nick,4),3).nick $ial($address($nick,4),4).nick $ial($address($nick,4),5).nick $ial($address($nick,4),6).nick | sw all mode # -o-o-o-o-o-o $ial($address($nick,4),7).nick $ial($address($nick,4),8).nick $ial($address($nick,4),9).nick $ial($address($nick,4),10).nick $ial($address($nick,4),11).nick $ial($address($nick,4),12).nick }
n20=    if ($key(settings,ircx) == ON) { sw all access # add owner $address($me,4) }
n21=    .raw join # $key(#,ownerkey)
n22=    sw all mode # +q $me
n23=    sw all join # $key(#,ownerkey)
n24=    if ($address($nick,2) != $address($me,2)) { .raw mode # -o-o-o-o-o-o $ial($address($nick,2),1).nick $ial($address($nick,2),2).nick $ial($address($nick,2),3).nick $ial($address($nick,2),4).nick $ial($address($nick,2),5).nick $ial($address($nick,2),6).nick | .raw mode # -o-o-o-o-o-o $ial($address($nick,2),7).nick $ial($address($nick,2),8).nick $ial($address($nick,2),9).nick $ial($address($nick,2),10).nick $ial($address($nick,2),11).nick $ial($address($nick,2),12).nick }
n25=    .kick # $nick Big mistake
n26=    keywrite settings killonops.nick $nick | keywrite settings killonops.chan #
n27=    if ($key(#,deop) != PROTECT) { keywrite # ownerkey $newkey }
n28=    if ($key(settings,ircx) == ON) { .prop # ownerkey $key(#,ownerkey) }
n29=    if ($address($nick,2) != $address($me,2)) { keywrite settings shithead $addtok($key(settings,shithead),$address($nick,4),44) | keywrite settings shitheadlast $address($nick,4) }
n30=    .flood on
n31=    .timerMFlud. $+ $network 1 30 .flood off
n32=    ;unset $chan(#)
n33=    halt
n34=  }
n35=  else {
n36=    if ($knick == $sock(@boom [ $+ [ $remove($gettok($knick,2,91),$chr(93)) ] ] ).mark) {
n37=      if ($sock(@boom [ $+ [ $remove($gettok($knick,2,91),$chr(93)) ] ] ) != $null) {
n38=        sw $remove($gettok($knick,2,91),$chr(93)) part # $crlf join #  $key(#,ownerkey)
n39=        if ($istok($key(settings,botnick),$nick,44) == $true) { sw $remove($gettok($knick,2,91),$chr(93)) privmsg # :Fucking Bot | halt }
n40=        elseif ($nick == $me) { sw $remove($gettok($knick,2,91),$chr(93)) privmsg # : $+ $master(settings,socksay) | halt }
n41=        else { if ($address($nick,4) != $address($me,4)) { sw all access # add host $address($nick,4) | sw $remove($gettok($knick,2,91),$chr(93)) mode # -o $nick | halt } }
n42=      }
n43=    }
n44=    if ($nick isowner $chan(#)) { HALT } 
n45=    if ($key(#,kicklock) != ON) { HALT }
n46=    if ($key(#,kicklock) == ON) {
n47=      .raw mode # -o $nick
n48=      .invite $knick #
n49=      .msg # $lowcol $+ NO KICKING ALLOWED 
n50=      halt
n51=    }
n52=  }
n53=}
n54=raw prop:*: {
n55=  ;if ($nick == $chr(42)) { halt }
n56=  echo -t $1 $sys $report(Prop,$nick,$1,$2,$3-)
n57=  if ($master(settings,extra.info) == ON) { IF (status !isin $window($active)) { $report(Prop,$nick,$1,$2,$3-).status } }
n58=  if ($key($1,deop) == $null) { keywrite $1 deop OFF }
n59=  if ($key($1,modemaster) == $null) { keywrite $1 modemaster OFF }
n60=  if ($2 == OWNERKEY) {
n61=    if ($nick == $chr(42)) { halt }
n62=    if ($nick == $me) && ($key($1,ownerkey) == $3) { halt }
n63=    if ($nick == $me) && ($key($1,ownerkey) != $3) { keywrite $1 ownerkey $3 | halt }
n64=    if ($nick != $me) {
n65=      if ($key($1,ownerkey) == $null) { keywrite $1 ownerkey $3 | halt }
n66=      if ($key($1,ownerkey) != $null) && ($key($1,ownerkey) == $3) { halt }
n67=      if ($key($1,ownerkey) != $null) && ($key($1,ownerkey) != $3) {
n68=        if ($key($1,deop) == OFF) {
n69=          if ($3 != $null) { keywrite $1 ownerkey $3 }
n70=          if ($3 == $null) { .timerNULPROP. $+ $network 1 1 prop $1 $2 $key($1,ownerkey) | $report(Key Watch,$nick,$1,$2,Null key reverted).status }
n71=        }
n72=        if ($key($1,deop) == PROTECT) {
n73=          ;if ($3 != $null) { keywrite $1 ownerkey $3 }
n74=          ;if ($3 == $null) { .timerNULPROP. $+ $network 1 1 prop $1 $2 $key($1,ownerkey) | $report(Key Watch,$nick,$1,$2,Null key reverted).status }
n75=        }
n76=        if ($key($1,deop) == ON) { 
n77=          if ($key($1,modemaster) == OFF) { .timerFIXPROP. $+ $network 1 1 prop $1 $2 $key($1,ownerkey) | halt }
n78=          if ($key($1,modemaster) == ON) {
n79=            .raw mode $1 -o $nick
n80=            .timerFIXPROP. $+ $network 1 1 .prop $1 $2 $key($1,ownerkey)
n81=            echo -t $1 $sys 10 $+ $chr(91) $+ $bright $+ System  Warning $+ 10 $+ $chr(93) $+ : $lowcol $+ The $highcol $+ $2 $lowcol $+ for $highcol $+ $1 $lowcol $+ has been changed to $highcol $+ $3 $lowcol $+ by $highcol $+ $nick $bright $+ CORRECTING
n82=            if ($sock(*) == $null) { keywrite settings boom.sock.chan $1 | keywrite settings boom.sock.nick $nick | boom | .timerFIREC3. $+ $network 1 1 /sw ALL prop $1 OWNERKEY $key($1,ownerkey) }
n83=            if ($sock(*) != $null) { sockwrite -n * join $1 $key($1,ownerkey) $+ $cr $+ mode $1 -o $nick | .timerDOME. $+ $network 1 1  sockwrite -n * mode # +o+q $me $me  $+ $cr $+ prop $1 OWNERKEY $key($1,ownerkey) }
n84=            keywrite settings rumble ON
n85=            .access $1 clear
n86=            .timerRUMBLE. $+ $network 1 30 keywrite settings rumble OFF
n87=            .timerRUMSAY. $+ $network 1 30 $report(Rumble Mode,$null,$null,Reset,OFF).status
n88=          }
n89=        }
n90=      }
n91=    }
n92=    halt
n93=  }
n94=  if ($2 == HOSTKEY) {
n95=    if ($nick == $chr(42)) { halt }
n96=    if ($nick == $me) && ($key($1,hostkey) == $3) { halt }
n97=    if ($nick == $me) && ($key($1,hostkey) != $3) { keywrite $1 hostkey $3 | halt }
n98=    if ($nick != $me) {
n99=      if ($key($1,ownerkey) == $null) { keywrite $1 ownerkey $3 | halt }
n100=      if ($key($1,ownerkey) != $null) && ($key($1,hostkey) == $null) { keywrite $1 hostkey $3 | halt }
n101=      if ($key($1,ownerkey) != $null) && ($key($1,hostkey) != $null) && ($key($1,hostkey) == $3) { halt }
n102=      if ($key($1,ownerkey) != $null) && ($key($1,hostkey) != $null) && ($key($1,hostkey) != $3) { keywrite $1 hostkey $3 }
n103=      halt
n104=    }
n105=  }
n106=  if ($2 == ONJOIN) && ($me isowner $chan($1)) {
n107=    if ($nick == $chr(42)) { halt }
n108=    if ($nick == $me) && ($key($1,onjoin) == $3-) { halt }
n109=    if ($nick == $me) && ($key($1,onjoin) != $3-) { keywrite $1 onjoin $hex.ini($3-) | halt }
n110=    if ($nick isowner $chan($1)) { keywrite $1 onjoin $hex.ini($3-) | halt }
n111=    if ($nick != $me) && ($key($1,onjoin) == $3-) { halt }
n112=    if ($nick != $me) && ($key($1,onjoin) == $null) { var %tmp = $key($1,onjoin) | .prop $1 $2 : $+ $unhex.ini(%tmp) | halt }
n113=    if ($nick != $me) && ($key($1,onjoin) != $null) { 
n114=      $report(System  Warning,$2,$1,has been changed to $3- by $nick,CORRECTING).active
n115=      .mode $1 -o $nick
n116=      var %tmp = $key($1,onjoin)
n117=      .prop $1 $2 : $+ $unhex.ini(%tmp)
n118=      halt
n119=    }
n120=  }
n121=  if ($2 == ONPART) && ($me isowner $chan($1)) {
n122=    if ($nick == $chr(42)) { halt }
n123=    if ($nick == $me) && ($key($1,onpart) == $3-) { halt }
n124=    if ($nick == $me) && ($key($1,onpart) != $3-) { keywrite $1 onpart $hex.ini($3-) | halt }
n125=    if ($nick isowner $chan($1)) { keywrite $1 onpart $hex.ini($3-) | halt }
n126=    if ($nick != $me) && ($key($1,onpart) == $3-) { halt }
n127=    if ($nick != $me) && ($key($1,onpart) == $null) { var %tmp = $key($1,onpart) | .prop $1 $2 : $+ $unhex.ini(%tmp) | halt }
n128=    if ($nick != $me) && ($key($1,onpart) != $null) { 
n129=      $report(System  Warning,$2,$1,has been changed to $3- by $nick,CORRECTING).active
n130=      .mode $1 -o $nick
n131=      var %tmp = $key($1,onpart)
n132=      .prop $1 $2 : $+ $unhex.ini(%tmp)
n133=      halt
n134=    }
n135=  }
n136=  halt
n137=}
n138=on 1:ACTION:*:#: {
n139=  if (went away isin $1-) && ($istok(%away.users.nick,$nick,46) == $false) {
n140=    set %away.users.nick $addtok(%away.users.nick,$nick,46)
n141=    .timerlogcolor. $+ $network 1 10 login.color.nick
n142=    echo -t $comchan($nick,1) $sys $report(Away,$comchan($nick,1),$nick,has been set as being,AWAY)
n143=    if ($master(settings,extra.info) == ON) { IF (status !isin $window($active)) { $report(Away,$comchan($nick,%tmp.aw),$nick,has been set as being,AWAY).status } }
n144=    halt
n145=  }
n146=  if (still away isin $1-) && ($istok(%away.users.nick,$nick,46) == $false) {
n147=    set %away.users.nick $addtok(%away.users.nick,$nick,46)
n148=    .timerlogcolor. $+ $network 1 10 login.color.nick
n149=    echo -t $comchan($nick,1) $sys $report(Away,$comchan($nick,1),$nick,has been set as being,AWAY)
n150=    if ($master(settings,extra.info) == ON) { IF (status !isin $window($active)) { $report(Away,$comchan($nick,%tmp.aw),$nick,has been set as being,AWAY).status } }
n151=    halt
n152=  }
n153=  if (sets away isin $1-) && ($istok(%away.users.nick,$nick,46) == $false) {
n154=    set %away.users.nick $addtok(%away.users.nick,$nick,46)
n155=    .timerlogcolor. $+ $network 1 10 login.color.nick
n156=    echo -t $comchan($nick,1) $sys $report(Away,$comchan($nick,1),$nick,has been set as being,AWAY)
n157=    if ($master(settings,extra.info) == ON) { IF (status !isin $window($active)) { $report(Away,$comchan($nick,%tmp.aw),$nick,has been set as being,AWAY).status } }
n158=    halt
n159=  }
n160=  if (is away isin $1-) && ($istok(%away.users.nick,$nick,46) == $false) {
n161=    set %away.users.nick $addtok(%away.users.nick,$nick,46)
n162=    .timerlogcolor. $+ $network 1 10 login.color.nick
n163=    echo -t $comchan($nick,1) $sys $report(Away,$comchan($nick,1),$nick,has been set as being,AWAY)
n164=    if ($master(settings,extra.info) == ON) { IF (status !isin $window($active)) { $report(Away,$comchan($nick,1),$nick,has been set as being,AWAY).status } }
n165=    halt
n166=  }
n167=  if (is now away isin $1-) && ($istok(%away.users.nick,$nick,46) == $false) {
n168=    set %away.users.nick $addtok(%away.users.nick,$nick,46)
n169=    .timerlogcolor. $+ $network 1 10 login.color.nick
n170=    echo -t $comchan($nick,1) $sys $report(Away,$comchan($nick,1),$nick,has been set as being,AWAY)
n171=    if ($master(settings,extra.info) == ON) { IF (status !isin $window($active)) { $report(Away,$comchan($nick,1),$nick,has been set as being,AWAY).status } }
n172=    halt
n173=  }
n174=  if (has gone away isin $1-) && ($istok(%away.users.nick,$nick,46) == $false) {
n175=    set %away.users.nick $addtok(%away.users.nick,$nick,46)
n176=    .timerlogcolor. $+ $network 1 10 login.color.nick
n177=    echo -t $comchan($nick,1) $sys $report(Away,$comchan($nick,1),$nick,has been set as being,AWAY)
n178=    if ($master(settings,extra.info) == ON) { IF (status !isin $window($active)) { $report(Away,$comchan($nick,1),$nick,has been set as being,AWAY).status } }
n179=    halt
n180=  }
n181=  if (is back isin $1-) && ($istok(%away.users.nick,$nick,46) == $true) {
n182=    set %away.users.nick $remtok(%away.users.nick,$nick,1,46)
n183=    .timerlogcolor. $+ $network 1 10 login.color.nick
n184=    echo -t $comchan($nick,1) $sys $report(Away,$comchan($nick,1),$nick,has been set as being,BACK)
n185=    if ($master(settings,extra.info) == ON) { IF (status !isin $window($active)) { $report(Away,$comchan($nick,1),$nick,has returned,BACK).status } }
n186=    halt
n187=  }
n188=  if (is now back isin $1-) && ($istok(%away.users.nick,$nick,46) == $true) {
n189=    set %away.users.nick $remtok(%away.users.nick,$nick,1,46)
n190=    .timerlogcolor. $+ $network 1 10 login.color.nick
n191=    echo -t $comchan($nick,1) $sys $report(Away,$comchan($nick,1),$nick,has been set as being,BACK)
n192=    if ($master(settings,extra.info) == ON) { IF (status !isin $window($active)) { $report(Away,$comchan($nick,1),$nick,has returned,BACK).status } }
n193=    halt
n194=  }
n195=  if (has returned isin $1-) && ($istok(%away.users.nick,$nick,46) == $true) {
n196=    set %away.users.nick $remtok(%away.users.nick,$nick,1,46)
n197=    .timerlogcolor. $+ $network 1 10 login.color.nick
n198=    echo -t $comchan($nick,1) $sys $report(Away,$comchan($nick,1),$nick,has been set as being,BACK)
n199=    if ($master(settings,extra.info) == ON) { IF (status !isin $window($active)) { $report(Away,$comchan($nick,1),$nick,has returned,BACK).status } }
n200=    halt
n201=  }
n202=  if (might be back isin $1-) && ($istok(%away.users.nick,$nick,46) == $true) {
n203=    set %away.users.nick $remtok(%away.users.nick,$nick,1,46)
n204=    .timerlogcolor. $+ $network 1 10 login.color.nick
n205=    echo -t $comchan($nick,1) $sys $report(Away,$comchan($nick,1),$nick,has been set as being,BACK)
n206=    if ($master(settings,extra.info) == ON) { IF (status !isin $window($active)) { $report(Away,$comchan($nick,1),$nick,has returned,BACK).status } }
n207=    halt
n208=  }
n209=}
n210=#clonecheck off
n211=raw 352:*: {
n212=  if ($read(Clone_Check.txt, s, $4) == $null) {
n213=    ;if ($4 !isin %address) {
n214=    .write -a Clone_Check.txt $addtok(%address,$4,32)
n215=    ;set %address $addtok(%address,$4,32)
n216=  }
n217=  if (%addr [ $+ [ $4 ] ] != $null) { 
n218=    if (%clone [ $+ [ $4 ] ] == $null) { set %clone [ $+ [ $4 ] ] %addr [ $+ [ $4 ] ] $+ , $+ $6 }
n219=    else { set %clone [ $+ [ $4 ] ] %clone [ $+ [ $4 ] ] $+ , $+ $6 }
n220=  }
n221=  else { set %addr [ $+ [ $4 ] ] $6 }
n222=  halt
n223=}
n224=raw 315:*: {
n225=  updatenl
n226=  .disable #clonecheck
n227=  set %a 1
n228=  :loop
n229=  set %token $read(Clone_Check.txt, n, %a)
n230=  if (%token == $null) { goto end } 
n231=  else { 
n232=    if (%clone [ $+ [ %token ] ]  != $null) {
n233=      inc %total
n234=      inc %a
n235=      $report(Clones,%clone [ $+ [ %token ] ],$null,found at,*!*@ $+ %token).active
n236=      unset %clone [ $+ [ %token ] ]
n237=      unset %addr [ $+ [ %token ] ]
n238=      goto loop 
n239=    }
n240=    else { 
n241=      unset %addr [ $+ [ %token ] ]
n242=      inc %a
n243=      goto loop 
n244=    }
n245=  }
n246=  :end
n247=  $report($null,$null,Done).active
n248=  $report($chain).active
n249=  unset %a %addr* %clone* %token %total
n250=  .remove Clone_Check.txt
n251=  .disable #clonecheck
n252=  halt
n253=}
n254=#clonecheck end
n255=#serverclonecheck off
n256=raw 352:*: {
n257=  if ($read(Clone_Check.txt, s, $4) == $null) {
n258=    ;if ($4 !isin %address) {
n259=    .write -a Clone_Check.txt $addtok(%address,$4,32)
n260=    ;set %address $addtok(%address,$4,32)
n261=  }
n262=  if (%addr [ $+ [ $4 ] ] != $null) { 
n263=    if (%clone [ $+ [ $4 ] ] == $null) { set %clone [ $+ [ $4 ] ] %addr [ $+ [ $4 ] ] $+ , $+ $6 }
n264=    else { set %clone [ $+ [ $4 ] ] %clone [ $+ [ $4 ] ] $+ , $+ $6 }
n265=  }
n266=  else { set %addr [ $+ [ $4 ] ] $6 }
n267=  halt
n268=}
n269=raw 315:*: {
n270=  updatenl
n271=  .disable #serverclonecheck
n272=  set %a 1
n273=  :loop
n274=  set %token $read(Clone_Check.txt, n, %a)
n275=  if (%token == $null) { goto end } 
n276=  else { 
n277=    if (%clone [ $+ [ %token ] ]  != $null) {
n278=      inc %total
n279=      inc %a
n280=      $report(Clones,%clone [ $+ [ %token ] ],$null,found at,*!*@ $+ %token).active
n281=      unset %clone [ $+ [ %token ] ]
n282=      unset %addr [ $+ [ %token ] ]
n283=      goto loop 
n284=    }
n285=    else { 
n286=      unset %addr [ $+ [ %token ] ]
n287=      inc %a
n288=      goto loop 
n289=    }
n290=  }
n291=  :end
n292=  $report($null,$null,Done).active
n293=  $report($chain).active
n294=  unset %a %addr* %clone* %token %total
n295=  .remove Clone_Check.txt
n296=  .disable #serverclonecheck
n297=  halt
n298=}
n299=#serverclonecheck end
n300=#propscan off
n301=raw 818:*: {
n302=  if $3 == Lag {
n303=    %propdisplay $sys $report($null,$3,$null,$4 secs)
n304=    halt
n305=  }
n306=  if $3 == OID && $4 == 0 {
n307=    %propdisplay $sys $report($null,$3,$null,Object Identifier not supported)
n308=    halt
n309=  }
n310=  if $3 == Creation {
n311=    %propdisplay $sys $report($null,$3,$null,$asctime($4))
n312=    halt
n313=  }
n314=  if (\n isin $4-) {
n315=    set %n 1
n316=    :loop
n317=    set %num.of.tokens $gettok($4-,0,92)
n318=    if (%n > %num.of.tokens) { halt }
n319=    if (%n == 1) { %propdisplay $sys $report($null,$3,$null,$gettok($4-,%n,92)) }
n320=    if (%n > 1) { %propdisplay $sys $report($null,$3,$null,$mid($gettok($4-,%n,92),2,$mid($gettok($4-,%n,92),2,0))) }
n321=    inc %n
n322=    goto loop
n323=  }
n324=  else { %propdisplay $sys $report($null,$3,$null,$4-) | halt }
n325=}
n326=raw 819:*: {
n327=  %propdisplay $sys $report(Done)
n328=  %propdisplay $sys $report($chain)
n329=  unset %propdisplay
n330=  .disable #propscan
n331=  halt
n332=}
n333=#propscan end
n334=alias list {
n335=  if ($key(settings,ircx) == OFF) { .raw list $1- }
n336=  if ($key(settings,ircx) == ON) {
n337=    if ($1 != $null) {
n338=      if (> isin $1) && ($2 == $null) { listx $1 | halt }
n339=      if (> isin $1) && (< isin $2) { listx $1 $2 | halt }
n340=      if (< isin $1) && ($2 == $null) { listx $1 | halt }
n341=      if (< isin $1) && (> isin $2) { listx $2 $1 | halt }
n342=      if (-min isin $1) && ($3 == $null) { listx > $+ $calc($2 - 1) | halt }
n343=      if (-min isin $1) && (-max isin $3) { listx > $+ $calc($2 - 1) < $+ $calc($4 + 1) | halt }
n344=      if (-max isin $1) && ($3 == $null) { listx < $+ $calc($2 + 1) | halt }
n345=      if (-max isin $1) && (-min isin $3) { listx > $+ $calc($4 - 1) < $+ $calc($2 + 1) | halt }
n346=      if ($chr(35) isin $1) { listx N=* $+ $1 $+ * | halt }
n347=      if (N= isin $1) { listx N=* $+ $remove($1,N=) $+ * | halt }
n348=      if (T= isin $1) { listx T=* $+ $remove($1,T=) $+ * | halt }
n349=      if (S= isin $1) { listx S=* $+ $remove($1,S=) $+ * | halt }
n350=      if (L= isin $1) { listx L=* $+ $remove($1,L=) $+ * | halt }
n351=      if (R= isin $1) { listx $1 | halt }
n352=      if ($2 != $null) { listx $1- | halt }
n353=      else { listx N=* $+ $1 $+ * }
n354=    }
n355=    else { 
n356=      $report(List,$null,Help,/list #/#,more than/less than NUM members).active
n357=      $report(List,$null,Help,/list N=?/T=?/S=?/L=?,name/topic/subject/language text search).active
n358=      listx
n359=    }
n360=  }
n361=}
n362=#cycleforops off
n363=on !1:PART:#: {
n364=  .names #
n365=  if ($nick($chan,0) <= 2) {
n366=    if ($key(settings,ircx) == ON) && ($me !isowner $chan(#)) { 
n367=      cycle
n368=      $report(Auto-Cycle,$chan,is empty,Auto-Cycle to get Ops).status
n369=      beep
n370=    }
n371=    if ($key(settings,ircx) == OFF) && ($me !isop $chan(#)) {
n372=      cycle
n373=      $report(Auto-Cycle,$chan,is empty,Auto-Cycle to get Ops).status
n374=      beep
n375=    }
n376=  }
n377=}
n378=#cycleforops end
n379=on ^*:ERROR:*:{ $report(Server Error,$null,$null,reported as follows,$1-).active | halt }
n380=on ^*:QUIT: {
n381=  haltdef
n382=  var %tmp.quit = 1
n383=  while (%tmp.quit <= $comchan($nick,0)) { 
n384=    if ($master(settings,bnote) == ON) { echo -t $comchan($nick,%tmp.quit) $sys $report(Quit,$null,$nick,$null,$1-) }
n385=    inc %tmp.quit
n386=    if (%tmp.quit > $comchan($nick,0)) { break } 
n387=  }
n388=  if ($master(settings,extra.info) == ON) { IF (status !isin $window($active)) { $report(Quit,$null,$nick,$null,$1-).status } }
n389=  if ($nick == $me) && ($server != $null) { cycleall }
n390=  .timerADJUST. $+ $network 1 30 adjust
n391=  if ($istok(%away.users.nick,$nick,46) == $true) {
n392=    .set %away.users.nick $remtok(%away.users.nick,$nick,1,46)
n393=    .timerlogcolor. $+ $network 1 10 login.color.nick
n394=  }  
n395=  if ($key(settings,botnick) != $null) && ($istok($key(settings,botnick),$nick,44) == $true) {
n396=    keywrite settings botnick $remtok($key(settings,botnick),$nick,1,44)
n397=    $report(Bot Quit,Removed registered Bot,$null,$nick).active
n398=    if ($master(settings,extra.info) == ON) { IF (status !isin $window($active)) { $report(Bot Quit,Removed registered Bot,$null,$nick).status } }
n399=  }
n400=}
n401=on ^*:PART:#: {
n402=  haltdef
n403=  if ($key(settings,attempt.PART) <= 5) {
n404=    ssflood PART $nick
n405=    if ($master(settings,bnote) == ON) { $report(Part,$null,$nick,$address,$1-).chan }
n406=    if ($master(settings,extra.info) == ON) { IF (status !isin $window($active)) { $report(Part,$chan,$nick,$address,$1-).status } }
n407=  }
n408=  ;.timerADJUST. $+ $network 1 30 adjust
n409=  if ($key(#,lastin) == $nick) { keywrite # lastin "" | keywrite # lastinIP "" }
n410=  if ($istok(%away.users.nick,$nick,46) == $true) { set %away.users.nick $remtok(%away.users.nick,$nick,1,46) | .timerlogcolor. $+ $network 1 10 login.color.nick | halt }  
n411=  return
n412=}
n413=on ^*:BAN:#: { 
n414=  /fixban # +b
n415=  return
n416=}
n417=on ^*:UNBAN:#:{
n418=  /fixban # -b
n419=  return
n420=}
n421=on ^1:TOPIC:#: {
n422=  haltdef
n423=  if ($1- == $null) { var %tmp.tp1 = Topic has been cleared }
n424=  else { var %tmp.tp1 = Topic changed to | var %tmp.tp2 = $1- }
n425=  $report(Topic,$nick,$chan,%tmp.tp1,%tmp.tp2).chan
n426=  if ($master(settings,extra.info) == ON) { IF (status !isin $window($active)) { $report(Topic,$nick,$chan,%tmp.tp1,%tmp.tp2).status } }
n427=  if ($nick == $me) { keywrite # topic $hex.ini($1-) | if ($key(#,topiclock) == $null) { keywrite # topiclock OFF } | halt }
n428=  if ($key(#,topiclock) == $null) { keywrite # topiclock OFF | halt }
n429=  if ($key(#,topiclock) == PROTECT) { halt }
n430=  if ($key(#,topiclock) == OFF) && ($nick(#,$me,q) != $null) { keywrite # topic $hex.ini($1-) | halt }
n431=  if ($key(#,topiclock) == OFF) && ($nick(#,$me,o) != $null) { keywrite # topic $hex.ini($1-) | halt }
n432=  if ($key(#,topiclock) == ON) {
n433=    if ($unhex.ini($key(#,topic)) == $1-) { halt }
n434=    if ($key(#,modemaster) == ON) { .raw mode # -o $nick | msg # $report($null,$null,System  Warning,If you change the topic you will be deop'd) }
n435=    .timerTOPLOCa. $+ $network 1 1 $report(Topic Lock,#,Active,Correcting topic).active
n436=    if ($master(settings,extra.info) == on) { IF (status !isin $window($active)) { .timerTOPLOCb. $+ $network 1 1 $report(Topic Lock,#,Active,Correcting topic).status } }
n437=    .timerTOPLOCc. $+ $network 1 1 .raw topic # : $+ $unhex.ini($key(#,topic))
n438=    halt
n439=  }
n440=  halt
n441=}
n442=on ^*:NICK: {
n443=  haltdef
n444=  var %tmp.nick = 1
n445=  while (%tmp.nick <= $comchan($newnick,0)) {
n446=    echo -t $comchan($newnick,%tmp.nick) $sys $report(Nick,$nick,$comchan($newnick,%tmp.nick),Will now be known as,$newnick)
n447=    inc %tmp.nick
n448=    if (%tmp.nick > $comchan($newnick,0))  { break }
n449=  }
n450=  if ($master(settings,extra.info) == ON) { IF (status !isin $window($active)) { $report(Nick,$nick,$null,Will now be known as,$newnick).status } }
n451=  .timerlogcolor. $+ $network 1 10 login.color.nick
n452=  if ($nick == $me) {
n453=    keywrite settings boss $me
n454=    remnick $newnick
n455=    if ($key(settings,recover) != $null) { recover $key(settings,recover) }
n456=    else { recover $newnick }
n457=    if ($key(settings,botnick) != $null) { .ctcp $key(settings,botnick) DO /set % $+ boss $newnick }
n458=  }
n459=  var %temp.nick.change = $chan(0)
n460=  var %temp.nick.change1 = 1
n461=  :nick.change.loop
n462=  if (%temp.nick.change1 > %temp.nick.change) { goto nick.change.out }
n463=  if ($key($chan(%temp.nick.change1),lastin) == $nick) { 
n464=    keywrite $chan(%temp.nick.change1) lastin $newnick
n465=    echo -t $chan(%temp.nick.change1) $sys $report(Last In,$nick,$chan(%temp.nick.change1),changed nicks to,$newnick, Updating.)
n466=  }
n467=  if ($istok(%away.users.nick,$nick,46) == $true) { 
n468=    set %away.users.nick $remtok(%away.users.nick,$nick,1,46)
n469=    set %away.users.nick $addtok(%away.users.nick,$newnick,46)
n470=    .timerlogcolor. $+ $network 1 10 login.color.nick
n471=    $report(Away User,$nick,#,Changed nicks to,$newnick,Updating Away colors).chan
n472=  }
n473=  inc %temp.nick.change1 
n474=  goto nick.change.loop
n475=  :nick.change.out
n476=  if ($istok($key(settings,botnick),$nick,44) == $true) { 
n477=    keywrite settings botnick $remtok($key(settings,botnick),$nick,1,44) 
n478=    keywrite settings botnick $addtok($key(settings,botnick),$newnick,44)
n479=    $report(Bot Nick,$nick,#,Registering Bot,$newnick, and dropping ,$nick).active
n480=  }
n481=}
