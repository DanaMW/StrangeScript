[aliases]
n0=;--------------------------------------
n1=fullver return $report($ver,$null,$null,$null,04 $+ $chr(169) $+ 1999-2024 Dana L. Meli-Wischman)
n2=ver return 10S04trange10S04cript10[v158.67.02.20.202410]
n3=brag say This system gets to pick from a collection of $findfile($songs,*.*,0) Songs
n4=/shortver return 10S04trange10S04cript
n5=/myver say $fullver
n6=/smile /say };-}
n7=/mytopic topic #StrangeScript 4,0Ã¦0,4Ã¦5,4Ã¦4,5Ã¦1,5Ã¦5,1Ã¦4,1 $fullver 5,1Ã¦1,5Ã¦4,5Ã¦5,4Ã¦0,4Ã¦4,0Ã¦
n8=/cls {
n9=  if ($1 == $null) { clear # }
n10=  else {
n11=    if ($chr(35) !isin $1) { return }
n12=    clear $1
n13=  }
n14=}
n15=clr cls
n16=/saytime {
n17=  ;##saytime (Sends the time in my format to the channel)
n18=  var %temp = $lowcol $+ $date(dddd) $+ $bright $+ , $+ $chr(160) $+ $lowcol $+ $date(mmmm)
n19=  var %temp = %temp $+ $chr(160) $+ the $lowcol $+ $ord($date(dd)) $+ $bright $+ , $+ $chr(160) $+ $lowcol $+ $date(yyyy)
n20=  var %temp = %temp $+ $chr(160) $+ at $lowcol $+  $time(h) $+ $bright $+ : $+ $lowcol $+ $time(nn)
n21=  var %temp = %temp $+ $chr(160) $+ $lower($time(tt)) $+ $chr(160) $+ $bright $+ ( $+ $lowcol $+ $right($time(zzz),-1) $+ $bright $+ )
n22=  /notice # $report(%temp)
n23=  ;if ($1 == $null) {
n24=  ;  var %temp = $date(dddd) $+ , $date(mmmm)
n25=  ;  var %temp = %temp the $ord($date(dd)) $+ , $date(yyyy)
n26=  ;  var %temp = %temp at $time(h) $+ : $+ $time(nn)
n27=  ;  var %temp = %temp $lower($time(tt)) ( $+ $right($time(zzz),-1) $+ )
n28=  ;  /notice # %temp#
n29=  ;  return
n30=  ;}
n31=}
n32=all scid -a $1-
n33=aj autojoin
n34=ca cycleall
n35=sysdir return $mircdirsystem\
n36=botdir return $mircdirMBot\
n37=textdir return $mircdirtext\
n38=myecho if (@.* !isin $active) { return echo $color(normal text) -at < $+ $me $+ > }
n39=long { set %long ** | return }
n40=lowcol { if (%sc1 == $null) { return 04 } | else { if (%sc.bold == ON) { return  $+ %sc1 } | else { return  $+ %sc1 } } }
n41=highcol { if (%sc2 == $null) { return 11 } | else { if (%sc.bold == ON) { return  $+ %sc2 } | else { return  $+ %sc2 } } }
n42=bright { if (%sc3 == $null) { return 08 } | else { if (%sc.bold == ON) { return  $+ %sc3 } | else { return  $+ %sc3 } } }
n43=white { if (%sc4 == $null) { return 00 } | else { if (%sc.bold == ON) { return  $+ %sc4 } | else { return  $+ %sc4 } } }
n44=sep { if (%sc.seperater == $null) { return 10 } | else { if (%sc.bold == ON) { return  $+ %sc.seperater } | else { return  $+ %sc.seperater } } }
n45=space return $chr(160)
n46=spcm return $chr(44) $+ $chr(160)
n47=output return 11,11 
n48=sys return 4,4 
n49=;lll return $chr(124) $+ $chr(91)
n50=;rrr return $chr(93) $+ $chr(124)
n51=lll return $chr(186) $+ (
n52=rrr return ) $+ $chr(186)
n53=;chain return 04 $+ Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤
n54=chain {
n55=  if ($1 != $null) { return $lowcol $+  $+ $str(Â¤,$1) $+  }
n56=  else { return $lowcol $+ Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤ }
n57=}
n58=net return  $+ %sc.seperater $+ ( $+ 15 $+ $network $+  $+ %sc.seperater $+ ) $+ 
n59=mybar {
n60=  set %mybar. $+ $cid $chr(91) Nick: $me $chr(93) $+ $chr(124) $+ $chr(91) Net: $network $chr(93) $+ $chr(124) $+ $chr(91) Lag: $key(settings,lagmrc) $chr(93) $+ $chr(124) $+ $chr(91) ircX: $key(settings,ircx) $chr(93) $+ $chr(124) $+ $chr(91) Server: $server $chr(93) $+ $chr(124)
n61=  if (%mybar.temp == $null) { titlebar $chr(124) $+ $chr(91) Servers: $scid(0) $chr(93) $+ $chr(124) $+ $chr(91) socks . $+ $sock(*,0) $+ . $+ $chr(160) $+ . $+ $sock(BNC*,0) $+ . $+ $sock(@Boom*,0) $+ . $+ $sock(@Gate*,0) $+ . $+ $sock(@Split*,0) $+ . $+ $sock(Spy*,0) $+ . $chr(93) $+ $chr(124) $+ %mybar. [ $+ [ $activecid ] ] }
n62=  if (%mybar.temp != $null) { titlebar $chr(124) $+ $chr(91) Servers: $scid(0) $chr(93) $+ $chr(124) $+ $chr(91) socks . $+ $sock(*,0) $+ . $+ $chr(160) $+ . $+ $sock(BNC*,0) $+ . $+ $sock(@Boom*,0) $+ . $+ $sock(@Gate*,0) $+ . $+ $sock(@Split*,0) $+ . $+ $sock(Spy*,0) $+ . $chr(93) $+ $chr(124) $+ $chr(91) mp $+ $chr(179) %mybar.temp $chr(93) $+ $chr(124) $+ %mybar. [ $+ [ $activecid ] ] }
n63=  return
n64=}
n65=/cs chanserv $1-
n66=/setupshow { $report(System Setting,$null,SET,$null,$1-).active | script.play Notify.wav }
n67=/lag msg # $titlebar
n68=/1 return
n69=/doda /col ?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿
n70=/sm { .say $smile }
n71=/lu lusers
n72=/l if ($1 != $null) { col Laugh Out Loud $+ @ $+ $1- } | else { col Laugh Out Loud }
n73=/la if ($1 != $null) { twist Laughing My Ass Off $+ @ $+ $1- } | else { twist Laughing My Ass Off }
n74=/p /part #
n75=/n /names #$$1
n76=/w /swho $1-
n77=/k { if ($1 == ?) { kick # $key(#,lastin) You were Slapped by $me $+  | return } | else { kick # $1 } }
n78=/hop {
n79=  if ($1 == $null) { cycle | return }
n80=  else { cycle $1- }
n81=}
n82=;n82=/old.hop { if ($1 == $null) { cycle | return } | else { .raw part # | .raw join $1 $key($1,ownerkey) | return } }
n83=/send /dcc send $snick(#,1)
n84=/chat /dcc chat $1
n85=/ping { if ($1 == $null) { .ctcp # ping } | else { .ctcp $$1 ping } }
n86=/kill.ping {
n87=  $report(Running Ping Food,$null,$null,on,$1).active
n88=  sw ALL privmsg $1 : $+ $chr(1) $+ PING $+ $chr(1) | sw ALL privmsg $1 : $+ $chr(1) $+ PING $+ $chr(1) | sw ALL privmsg $1 : $+ $chr(1) $+ PING $+ $chr(1) | sw ALL privmsg $1 : $+ $chr(1) $+ PING $+ $chr(1) | sw ALL privmsg $1 : $+ $chr(1) $+ PING $+ $chr(1) | sw ALL privmsg $1 : $+ $chr(1) $+ PING $+ $chr(1)
n89=}
n90=/kill.whisper {
n91=  $report(Running Whisper Flood,$null,$null,on,$1).active
n92=  sw ALL privmsg $1 :Stupid ass bitch | sw ALL privmsg $1 :Stupid ass bitch | sw ALL privmsg $1 :Stupid ass bitch | sw ALL privmsg $1 :Stupid ass bitch | sw ALL privmsg $1 :Stupid ass bitch | sw ALL privmsg $1 :Stupid ass bitch
n93=}
n94=/auto.ident {
n95=  if ($key(settings,autoident) != ON) { return }
n96=  if ($readini($mircdirtext\PassWord.ini,n,$network,$me) == $null) { $report(Auto-Ident,FAILED,$null,You have no saved password for your current nick).active | return }
n97=  else {
n98=    $report(Auto-Identify,$null,$key(settings,autoident),You are being Auto-Identified using,$readini($mircdirtext\PassWord.ini,n,$network,$me)).active
n99=    .nickserv IDENTIFY $readini($mircdirtext\PassWord.ini,n,$network,$me)
n100=    return
n101=  }
n102=}
n103=/auto.room.ident {
n104=  if ($key(settings,autoident) != ON) { return }
n105=  if ($readini($mircdirtext\PassWord.ini,n,$network,$4) == $null) { $report(Auto-Ident,FAILED,$null,You have no saved password for $4).active | return }
n106=  else {
n107=    $report(Auto-Identify,$null,$key(settings,autoident),You are being Auto-Identified to $4 using,$readini($mircdirtext\PassWord.ini,n,$network,$4)).active
n108=    .chanserv IDENTIFY $4 $readini($mircdirtext\PassWord.ini,n,$network,$4)
n109=    return 
n110=  }
n111=}
n112=/server.joins.count {
n113=  if ($exists($mircdirtext\ScriptInfo.ini) == $false) { .writeini -n $mircdirtext\ScriptInfo.ini StrangeScript n0 Registered }
n114=  set %tmp $readini($mircdirtext\ScriptInfo.ini,n,serverjoins,n0)
n115=  if (%tmp == $null) { if (%times.joined.server == $null) { set %times.joined.server 0 } | goto skippy }
n116=  if (%tmp != $null) { set %times.joined.server %tmp }
n117=  :skippy 
n118=  inc %times.joined.server
n119=  .writeini -n $mircdirtext\ScriptInfo.ini serverjoins n0 %times.joined.server
n120=  $report(Server Connect Count,%times.joined.server,$null,Using:,$ver).active
n121=  unset %tmp %times.joined.server
n122=  return
n123=}
n124=/connect.setup {
n125=  $report(Welcome to,$ver,Running on $network).status
n126=  .flood on
n127=  .timerMFlud. $+ $network 1 180 .flood off
n128=  unset %mass* %count.* %temp* %tmp* %ban.read.in %unmask* %nuke*
n129=  unset %awaiting.dns.* %Gate.User* %away.users.nick %hex.* %n
n130=  set %setup.temp 0
n131=  set %setup.count 0
n132=  set %logmaster.version v2.4
n133=  set %logmaster.about run
n134=  masterwrite settings clone.echo OFF
n135=  masterwrite settings boom.echo OFF
n136=  if (%sc.split == $null) { set %sc.split 09 }
n137=  if (%sc.socket == $null) { set %sc.socket 09 }
n138=  if ($master(settings,socksay) == $null) { masterwrite settings socksay Ouch Boss }
n139=  if ($key(settings,mode.default)  == $null) { keywrite settings mode.default -im+nt }
n140=  if ($key(settings,version) == $null) { keywrite settings version I got StrangeScript but havent set a version yet. }
n141=  if ($key(settings,whisper.hear) == $null) { keywrite settings whisper.hear ON }
n142=  if ($key(settings,notice.hear) == $null) { keywrite settings notice.hear ON }
n143=  if ($key(settings,invite.hear) == $null) { keywrite settings invite.hear ON }
n144=  if ($key(settings,action.hear) == $null) { keywrite settings action.hear ON }
n145=  if ($key(settings,Lagmrcsecs) == $null) { keywrite settings Lagmrcsecs 15 }  
n146=  if ($key(settings,Author) == $null) { .keywrite settings Author OFF | .disable #AuthorMode }
n147=  if ($key(settings,Debug) == $null) { .keywrite settings Debug OFF | .debug -c off }
n148=  if ($key(settings,beme) == on) { .timerBME. $+ $network 1 30 recover $key(settings,savednick1) }
n149=  keywrite settings bossmodes ""
n150=  keywrite settings boss $me
n151=  keywrite settings cycle.counter 0
n152=  keywrite settings attempt.ACTION 0
n153=  keywrite settings attempt.CTCP 0
n154=  keywrite settings attempt.NOTICE 0
n155=  keywrite settings attempt.WHISPER 0
n156=  keywrite settings attempt.KNOCK 0
n157=  keywrite settings attempt.MODE 0
n158=  keywrite settings attempt.RAWMODE 0
n159=  keywrite settings attempt.JOIN 0
n160=  keywrite settings attempt.PART 0
n161=  keywrite settings rumble OFF
n162=  ;set %mybar.temp ""
n163=  masterwrite settings remotecontrol.send OFF
n164=  keywrite settings secret.nick ""
n165=  .ignore -r *!*@*
n166=  .timerAM. $+ $network 1 60 /auto.master
n167=  .timerALIVE. $+ $network 0 45 /sw all god-find
n168=  .timerADJUST. $+ $network 1 60 /adjust
n169=  reset
n170=  if ($ial != $true) { ial on }
n171=  if (%slots.timer != $null) { unset %slots.timer }
n172=  if ($timer(away. [ $+ [ $network ] ] ).com != $null) { .timeraway. $+ $network off }
n173=  if ($key(settings,away.iam) == ON) { .timerIM. $+ $network 1 60 away RETURN }
n174=  if ($master(settings,Query.Windows) == $null) { masterwrite settings Query.Windows ON }
n175=  if ($exists($textdir $+ massinvite.txt) == $true) { .remove $textdir $+ massinvite.txt }
n176=  ;if ($exists($mircdirtext\Boom.Socket.Nick.txt) == $false) || ($exists($mircdirtext\Clone.Socket.Nick.txt) == $false) { msn }
n177=  /fix.kick.count
n178=  BNC.Server
n179=  return
n180=}
n181=/join { jn $1 $2 $3 $4 $5 $6- }
n182=/jn {
n183=  if ($2 != $null) { .raw join $1 $2- }
n184=  if ($2 == $null) && ($key($1,ownerkey) != $null) { .raw join $1 $key($1,ownerkey) }
n185=  else { .raw join $1 }
n186=}
n187=/ajs { .raw join $replace(%split.chan,$chr(32),$chr(160)) }
n188=/rumble {
n189=  if ($1 != $null) {
n190=    if ($1 == OFF) {
n191=      keywrite settings rumble OFF
n192=      if ($timer(RUMBLE. [ $+ [ $network ] ] ) != $null) { .timerRUMBLE. $+ $network off }
n193=      if ($timer(RUMBLESAY. [ $+ [ $network ] ] ) != $null) { .timerRUMBLESAY. $+ $network off }
n194=      $report(Rumble Mode,$null,OFF).status
n195=      return
n196=    }
n197=    if ($1 == ON) {
n198=      keywrite settings rumble ON
n199=      $report(Rumble Mode,$null,ON).active
n200=      .timerRUMBLE. $+ $network 1 30 keywrite settings rumble OFF
n201=      .timerRUMSAY. $+ $network 1 30 $report(Rumble Mode,Auto,Off,$null,$null).status
n202=      return
n203=    }
n204=  }
n205=  if ($1 == $null) {
n206=    if ($key(settings,rumble) == ON) {
n207=      keywrite settings rumble OFF
n208=      if ($timer(RUMBLE. [ $+ [ $network ] ] ) != $null) { .timerRUMBLE. $+ $network off }
n209=      if ($timer(RUMBLESAY. [ $+ [ $network ] ] ) != $null) { .timerRUMBLESAY. $+ $network off }
n210=      $report(Rumble Mode,$null,OFF).status
n211=      return
n212=    }
n213=    if ($key(settings,rumble) == OFF) {
n214=      keywrite settings rumble ON
n215=      $report(Rumble Mode,$null,ON).active
n216=      .timerRUMBLE. $+ $network 1 30 keywrite settings rumble OFF
n217=      .timerRUMSAY. $+ $network 1 30 $report(Rumble Mode,Auto,Off,$null,$null).status
n218=      return
n219=    }
n220=  }
n221=  return
n222=}
n223=ss.pop.serverDalChanAcs { return AOP/SOP/AKICK }
n224=ss.pop.serverCyChanAcs { return Access Levels }
n225=/q {
n226=  if ($1 == ?) && ($key(#,lastin) ison $chan) { .raw mode # +q $key(#,lastin) | return }
n227=  if ($1 != ?) && ($1 != $null) { .raw mode # +q $1 $2 $3 }
n228=  if ($1 != ?) && ($1 == $null) {
n229=    if ($modespl == $null) { var %tmp.num = 1 }
n230=    else { var %tmp.num = $modespl }
n231=    var %tmp.count = 1
n232=    var %tmp.total = 1
n233=    while (%tmp.count <= $numtok($snicks,44)) {
n234=      var %tmp.user = $addtok(%tmp.user,$snick(#,%tmp.count),44)
n235=      if (%tmp.total == %tmp.num) {
n236=        .raw mode # $str(+q,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32))
n237=        unset %tmp.user
n238=        var %tmp.total = 0
n239=      }
n240=      inc %tmp.total
n241=      inc %tmp.count
n242=      if (%tmp.count > $snick(#,0)) { break }
n243=    }
n244=    .raw mode # $str(+q,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32))
n245=    return
n246=
n247=  }
n248=}
n249=/deq {
n250=  if ($1 == ?) && ($key(#,lastin) ison $chan) { .raw mode # -q $key(#,lastin) | return }
n251=  if ($1 != ?) && ($1 != $null) { .raw mode # -q $1 $2 $3 }
n252=  if ($1 != ?) && ($1 == $null) {
n253=    if ($modespl == $null) { var %tmp.num = 1 }
n254=    else { var %tmp.num = $modespl }
n255=    var %tmp.count = 1
n256=    var %tmp.total = 1
n257=    while (%tmp.count <= $numtok($snicks,44)) {
n258=      var %tmp.user = $addtok(%tmp.user,$snick(#,%tmp.count),44)
n259=      if (%tmp.total == %tmp.num) {
n260=        .raw mode # $str(-q,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32))
n261=        unset %tmp.user
n262=        var %tmp.total = 0
n263=      }
n264=      inc %tmp.total
n265=      inc %tmp.count
n266=      if (%tmp.count > $snick(#,0)) { break }
n267=    }
n268=    .raw mode # $str(-q,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32))
n269=    return
n270=
n271=  }
n272=}
n273=/op { 
n274=  if ($1 == ?) && ($key(#,lastin) ison $chan) { .raw mode # +o $key(#,lastin) | return }
n275=  if ($1 != ?) {
n276=    if ($1 != $null) { .raw mode # +o $1 | return }
n277=    else {
n278=      if ($modespl == $null) { var %tmp.num = 1 }
n279=      else { var %tmp.num = $modespl }
n280=      var %tmp.count = 1
n281=      var %tmp.total = 1
n282=      while (%tmp.count <= $numtok($snicks,44)) {
n283=        var %tmp.user = $addtok(%tmp.user,$snick(#,%tmp.count),44)
n284=        if (%tmp.total == %tmp.num) {
n285=          if ($network == Dalnet) { .raw mode # $str(+o,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32)) }
n286=          else { .raw mode # + $+ $str(o,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32)) }
n287=          unset %tmp.user
n288=          var %tmp.total = 0
n289=        }
n290=        inc %tmp.total
n291=        inc %tmp.count
n292=        if (%tmp.count > $snick(#,0)) { break }
n293=      }
n294=      if ($network == Dalnet) { .raw mode # $str(+o,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32)) }
n295=      else { .raw mode # + $+ $str(o,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32)) }
n296=      return
n297=    }
n298=  }
n299=}
n300=/dop {
n301=  if ($1 == ?) && ($key(#,lastin) ison $chan) {
n302=    if ($key(settings,ircx) == ON) { .raw access # clear owner }
n303=    .raw mode # -o $key(#,lastin) ]
n304=    if ($key(settings,ircx) == ON) { addkey | addme }
n305=  }
n306=  if ($1 != ?) && ($1 != $null) {
n307=    if ($key(settings,ircx) == ON) { .raw access # clear owner }
n308=    .raw mode # -ooo $1 $2 $3
n309=    if ($key(settings,ircx) == ON) { addkey | addme }
n310=  }
n311=  if ($1 != ?) && ($1 == $null) {
n312=    if ($key(settings,ircx) == ON) { .raw access # clear owner }
n313=    if ($modespl == $null) { var %tmp.num = 1 }
n314=    else { var %tmp.num = $modespl }
n315=    var %tmp.count = 1
n316=    var %tmp.total = 1
n317=    while (%tmp.count <= $numtok($snicks,44)) {
n318=      var %tmp.user = $addtok(%tmp.user,$snick(#,%tmp.count),44)
n319=      if (%tmp.total == %tmp.num) {
n320=        if ($network == Dalnet) { .raw mode # $str(-o,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32)) }
n321=        else { .raw mode # - $+ $str(o,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32)) }
n322=        unset %tmp.user
n323=        var %tmp.total = 0
n324=      }
n325=      inc %tmp.total
n326=      inc %tmp.count
n327=      if (%tmp.count > $snick(#,0)) { break }
n328=    }
n329=    if ($network == Dalnet) { .raw mode # $str(-o,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32)) }
n330=    else { .raw mode # - $+ $str(o,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32)) }
n331=    if ($key(settings,ircx) == ON) { addkey | addme }
n332=  }
n333=}
n334=/pvoice {
n335=  if ($1 == ?) && ($key(#,lastin) ison $chan) { .raw mode # +o $key(#,lastin) | return }
n336=  if ($1 != ?) && ($1 != $null) { .raw mode # +vvv $1 $2 $3 }
n337=  if ($1 != ?) && ($1 == $null) {
n338=    if ($modespl == $null) { var %tmp.num = 1 }
n339=    else { var %tmp.num = $modespl }
n340=    var %tmp.count = 1
n341=    var %tmp.total = 1
n342=    while (%tmp.count <= $numtok($snicks,44)) {
n343=      var %tmp.user = $addtok(%tmp.user,$snick(#,%tmp.count),44)
n344=      if (%tmp.total == %tmp.num) {
n345=        if ($network == Dalnet) { .raw mode # $str(+v,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32)) }
n346=        else { .raw mode # + $+ $str(v,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32)) }
n347=        unset %tmp.user
n348=        var %tmp.total = 0
n349=      }
n350=      inc %tmp.total
n351=      inc %tmp.count
n352=      if (%tmp.count > $snick(#,0)) { break }
n353=    }
n354=    if ($network == Dalnet) { .raw mode # $str(+v,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32)) }
n355=    else { .raw mode # + $+ $str(v,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32)) }
n356=    return
n357=  }
n358=}
n359=/dvoice {
n360=  if ($1 == ?) && ($key(#,lastin) ison $chan) { .raw mode # -v $key(#,lastin) | return }
n361=  if ($1 != ?) && ($1 != $null) { .raw mode # -vvv $1 $2 $3 }
n362=  if ($1 != ?) && ($1 == $null) {
n363=    if ($modespl == $null) { var %tmp.num = 1 }
n364=    else { var %tmp.num = $modespl }
n365=    var %tmp.count = 1
n366=    var %tmp.total = 1
n367=    while (%tmp.count <= $numtok($snicks,44)) {
n368=      var %tmp.user = $addtok(%tmp.user,$snick(#,%tmp.count),44)
n369=      if (%tmp.total == %tmp.num) {
n370=        if ($network == Dalnet) { .raw mode # $str(-v,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32)) }
n371=        else { .raw mode # - $+ $str(v,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32)) }
n372=        unset %tmp.user
n373=        var %tmp.total = 0
n374=      }
n375=      inc %tmp.total
n376=      inc %tmp.count
n377=      if (%tmp.count > $snick(#,0)) { break }
n378=    }
n379=    if ($network == Dalnet) { .raw mode # $str(-v,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32)) }
n380=    else { .raw mode # - $+ $str(v,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32)) }
n381=    return
n382=  }
n383=}
n384=/cycle { 
n385=  if ($key(settings,cycle.counter) >= 2) { return }
n386=  keywrite settings cycle.counter $calc($key(settings,cycle.counter) + 1)
n387=  if ($1 != $null) { .raw part $1 $cr join $1 $key($1,ownerkey) }
n388=  if ($1 == $null) { .raw part # $cr join # $key(#,ownerkey) }
n389=  .timerCYC1a. $+ $network 1 5 keywrite settings cycle.counter 0
n390=  .timerCYC1b. $+ $network 1 5 $report(Cycle Counter,Reset,$null,0).status
n391=}
n392=/hup { 
n393=  if ($1 == $null) { $report(Hup,Error,$null,You need to include the nick,/hup nick).active | return } 
n394=  $report(Sending a HUP style ping to $1).active
n395=  .raw -q privmsg $1 : $+ $chr(1) $+ PING +++ATH0 $+ $chr(1)
n396=}
n397=/autojoin {
n398=  rumble on
n399=  keywrite settings autojoinspeed ""
n400=  var %temp.aj1 = $key(settings,autojoinrooms)
n401=  var %temp.aj2 = 1
n402=  if (%temp.aj1 == $null) {
n403=    $report(No Auto-Join,creating,$null,$null,$null).status
n404=    keywrite settings autojoinrooms #StrangeScript
n405=  }
n406=  while (%temp.aj2 <= $numtok(%temp.aj1,44)) {
n407=    .raw join $gettok(%temp.aj1,%temp.aj2,44) $key($gettok(%temp.aj1,%temp.aj2,44),ownerkey) | keywrite settings autojoinspeed $addtok($key(settings,autojoinspeed),$gettok(%temp.aj1,%temp.aj2,44),44)
n408=    inc %temp.aj2
n409=    if (%temp.aj2 > $numtok(%temp.aj1,44)) { break }
n410=  }
n411=  return
n412=}
n413=/fixban {
n414=  if ($nick == $me) { return }
n415=  if ($key($1,ban.lock) == ON) {
n416=    if ($2 == +b) { .raw mode $1 -b $banmask }
n417=    if ($2 == -b) { .raw mode $1 +b $banmask }
n418=    .raw mode $chan -o $nick 
n419=    msg $chan 10 $+ $chr(91) $+ $bright $+ System  Warning $+ 10 $+ $chr(93) $+ : $lowcol $+ If you $highcol $+ Ban/Unban $lowcol $+ you will be de-op'd
n420=    return
n421=  }
n422=  return
n423=}
n424=/setgreet {
n425=  if ($1 == ON) { keywrite settings greet $upper($1) | setupshow Room entry greeting $key(settings,greet) | return }
n426=  if ($1 == OFF) { keywrite settings greet $upper($1) | setupshow Room entry greeting $key(settings,greet) | return }
n427=  else { $report(Your options are limited to ON or OFF).active | return }
n428=}
n429=/endit { return }
n430=/razz {
n431=  if ($1 == $null) { halt | return }
n432=  else { .raw mode $chan -o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 }
n433=}
n434=/qfail {
n435=  .notice %qnick That password is wrong!! get ready for a ride.
n436=  .kick %qchan %qnick Wrong password get lost loser
n437=  .unset %qchan
n438=  .unset %qnick
n439=}
n440=/setprop {
n441=  if ($key(settings,ircx) == OFF) { 
n442=    echo -t $1 $sys $report(Auto Setup,$1,$null,Skipping Props,IRCd mode)
n443=    if ($master(settings,extra.info) == ON) { IF (status !isin $window($active)) { $report(Auto Setup,$1,$null,Skipping Props,IRCd mode).status } }
n444=    if ($me isop $chan($1)) { if ($key($1,topic) != $null) { var %tmp = $key($1,topic) | topic $1 $unhex.ini(%tmp) } }
n445=    if ($me isop $chan($1)) { set.modes $1 $2 }
n446=    return
n447=  }
n448=  if ($key($1,setup.on.join) == YES) { echo -t $1 $sys $report(Auto Setup,$null,$null,$null,$1 is set up) | return }
n449=  :setpgo
n450=  var %tmp = $readini($mircdirtext\ScriptInfo.ini,n,roomset,setupcount) | inc %tmp | .writeini -n $mircdirtext\ScriptInfo.ini roomset setupcount %tmp
n451=  echo -t $1 $sys $report(Auto Setup,$null,%tmp,Setting up,$1)
n452=  if ($master(settings,extra.info) == ON) { IF (status !isin $window($active)) { $report(Auto Setup,$null,%tmp,Setting up,$1).status } }
n453=  if ($key($1,ownerkey) == $null) { echo -t $1 $sys $report(Auto Setup,$null,No OWNER key saved for,$1) }
n454=  if ($key($1,ownerkey) != $null) { .prop $1 OWNERKEY $key($1,ownerkey) }
n455=  if ($key($1,hostkey) == $null) { echo -t $1 $sys $report(Auto Setup,$null,No HOST key saved for,$1) }
n456=  if ($key($1,hostkey) != $null) { .prop $1 HOSTKEY $key($1,hostkey) }
n457=  set.modes $1 $2
n458=  if ($key($1,topic) == $null) { echo -t $1 $sys $report(Auto Setup,$null,No TOPIC key saved for,$1) }
n459=  if ($key($1,topic) != $null) && ($key($1,topic) != $chan($1).topic) { var %tmp = $key($1,topic) | .prop $1 topic : $+ $unhex.ini(%tmp) }
n460=  if ($key($1,topic) != $null) && ($key($1,topic) == $chan($1).topic) { echo -t $1 $sys $report(Auto Setup,$null,TOPIC matches for $1,Skipping topic set) }
n461=  if ($key(%tmp.keys,memberkey) == $null) { echo -t $1 $sys $report(Auto Setup,$null,No MEMBER key saved for,$1) }
n462=  if ($key(%tmp.keys,memberkey) != $null) { .prop $1 memberkey $key(%tmp.keys,memberkey) }
n463=  if ($key(#,subject) == $null) { echo -t $1 $sys $report(Auto Setup,$null,No SUBJECT key saved for,$1) }
n464=  if ($key(#,subject) != $null) { .prop $1 subject : $+ $key(#,subject) }
n465=  if ($key($1,onjoin) == $null) { echo -t $1 $sys $report(Auto Setup,$null,No ONJOIN key saved for,$1) }
n466=  if ($key($1,onjoin) != $null) { var %tmp = $key($1,onjoin) | .prop $1 onjoin : $+ $unhex.ini(%tmp) }
n467=  if ($key($1,onpart) == $null) { echo -t $1 $sys $report(Auto Setup,$null,No ONPART key saved for,$1) }
n468=  if ($key($1,onpart) != $null) { var %tmp = $key($1,onpart) | .prop $1 onpart : $+ $unhex.ini(%tmp) }
n469=  keywrite $1 setup.on.join YES
n470=  ;/set.modes $1 $2
n471=}
n472=/set.modes { 
n473=  if ($key($1,mode) == $null) && ($me isop $chan($1)) { keywrite $1 mode $key(settings,mode.default) }
n474=  if ($key($1,mode) == $chan($1).mode) { 
n475=    echo -t $1 $sys $report(Auto Setup,$null,Modes match,$null,Skipping Mode Set)
n476=    if ($master(settings,extra.info) == ON) { IF (status !isin $window($active)) { $report(Auto Setup,$null,Modes match,$null,Skipping Mode Set).status } }
n477=    return
n478=  }
n479=  if ($key($1,mode) != $chan($1).mode) {
n480=    echo -t $1 $sys $report(Auto Setup,$null,MODES DONT MATCH,$null,Check for proper adjustment)
n481=    if ($master(settings,extra.info) == ON) { IF (status !isin $window($active)) { $report(Auto Setup,$null,MODES DONT MATCH,$null,Check for proper adjustment).status } }
n482=    if ($key($1,mode) != $chan($1).mode) { .raw mode $1 $replace($remove($chan($1).mode,r),+,-) }
n483=    if (k isin $chan($1).mode) { .raw mode $1 $replace($chan($1).mode,+,-) }
n484=    .raw mode $1 $remove($key($1,mode) ,r,x)
n485=  }
n486=  return
n487=}
n488=/fix.modes {
n489=  if ($key(settings,rumble) == ON) { return }
n490=  ;Add lines two below
n491=  if ($key($1,modelock) == $null) && ($me isop $chan($1)) { keywrite $1 modelock OFF }
n492=  if ($key($1,mode) == $null) && ($me isop $chan($1)) { keywrite $1 mode $chan($1).mode | $report(Mode Save,$1,Save,Saving mode's of,$key($1,mode)).active }
n493=  if ($2 == $me) {
n494=    .timer. $+ $network $+ $1 $+ 1 1 10 keywrite $1 mode $chan($1).mode
n495=    .timer. $+ $network $+ $1 $+ 2 1 10 $report(Mode Save,$chan($1),Save,Saving mode's of,$chan($1).mode).active
n496=    return  
n497=  }
n498=  ;Add lines one below
n499=  if ($me !isop $chan($1)) && ($me !isowner $chan($1)) { return }
n500=  if ($key($1,modelock) == OFF) { return }
n501=  if ($key($1,mode) == $chan($1).mode) { echo -t $1 $sys $report(Auto Setup,$null,Modes match,$null,Skipping Mode Set) | return }
n502=  if ($key($1,mode) != $chan($1).mode) { 
n503=    echo -t $1 $sys $report(Auto Setup,$null,MODES DONT MATCH,$null,Check for proper adjustment)
n504=    if ($key($1,modemaster) == ON) && ($2 != $me) { .raw mode $1 -o $2 }
n505=    .raw mode $1 $replace($remove($chan($1).mode,r),$chr(43),$chr(45))
n506=    ;if (l isin $chan($1).mode) { .raw mode $1 -l }
n507=    if (k isin $chan($1).mode) { .raw mode $1 -k $4 }
n508=    .raw mode $1 $remove($key($1,mode),r,x)
n509=    unset %temp
n510=    return
n511=  }
n512=}
n513=/modesave {
n514=  $report(Mode Save,$1,$null,Saving current modes,$chan($1).mode).active
n515=  keywrite $1 mode $chan($1).mode
n516=  return  
n517=}
n518=/out { saveini | clearall | if ($server != $null) { quit $unhex.ini($master(settings,quit.message)) } | exit }
n519=/repeat {
n520=  if (%repeat == 0) { goto outty }
n521=  if (%count. [ $+ [ $1 ] ] == $null) { set %count. [ $+ [ $1 ] ] 0 }
n522=  if (%count. [ $+ [ $1 ] ] == 0) { .timer 1 %kickthem //set %count. [ $+ [ $1 ] ] 0 }
n523=  if (%count. [ $+ [ $1 ] ] == $calc(%repeat - 1)) { msg $2 10 $+ $chr(91) $+ $white $+ Auto Kick $+ 10 $+ $chr(93) $+ : $bright $+ WARNING $highcol $1 $+ ,  $lowcol $+ you are about to be kicked for repeating }
n524=  if (%count. [ $+ [ $1 ] ] >= %repeat) { 
n525=    ignore -u $+ $master(settings,ignore.length) $1
n526=    .kick $2 $1 Big mistake
n527=    set %count. [ $+ [ $1 ] ] 0
n528=    return
n529=  }
n530=  .timer2. $+ $network 1 60 /unset %count. [ $+ [ $1 ] ]
n531=  /inc  %count. [ $+ [ $1 ] ] 1  
n532=  :outty
n533=  return
n534=}
n535=/recover {
n536=  if ($1 == OFF) { keywrite settings recover "" | .timernick. $+ $network off | $report(Auto Nick Recover,Set,Off).active | return }
n537=  if ($1 == $null) {
n538=    var %tmp.recover = $input(Enter the nick to recover,egi,StrangeScript needs input,NewUser)
n539=    if (%tmp.recover == %null) { return }
n540=    if ($key(settings,savednick1) == $null) { keywrite settings savednick1 %tmp.recover }
n541=    keywrite settings recover %tmp.recover
n542=    .timerRECOV. $+ $network 0 15 assimilate $key(settings,recover)
n543=    $report(Auto Nick Recover,$key(settings,recover),On,Recovering Nickname).active
n544=    assimilate $key(settings,recover)
n545=    return
n546=  }
n547=  if ($1 != $null) { 
n548=    keywrite settings recover $1
n549=    ;.timerNICK. $+ $network 0 15 assimilate $key(settings,recover)
n550=    .timerRECOV. $+ $network 0 15 assimilate $key(settings,recover)
n551=    ;$report(Auto Nick Recover,$key(settings,recover),On,Recovering Nickname).active
n552=    assimilate $key(settings,recover)
n553=    return
n554=  }
n555=}
n556=/assimilate {
n557=  if (guest* iswm $me) && ($key(settings,beme) == ON) { keywrite settings recover $key(settings,savednick1) }
n558=  if ($key(settings,recover) == $null) {
n559=    if (timer(RECOV. [ $+ [ $network ] ] ) != $null) { .timerRECOV. $+ $network off }
n560=    return
n561=  } 
n562=  if ($me == $key(settings,recover)) {
n563=    $report(Auto Nick Recover,$key(settings,recover),Done,Recover Complete).active
n564=    .timerRECOV. $+ $network off
n565=    if ($readini($textdir $+ PassWord.ini,n,$network,$me) != $null) { nickserv identify $key(settings,recover) $readini($textdir $+ PassWord.ini,n,$network,$me) }
n566=    keywrite settings recover ""
n567=    mode $me
n568=    return
n569=  }
n570=  if ($key(settings,recover) != $me) {
n571=    keywrite settings nicktime.active ON
n572=    .timer 1 15 keywrite settings nicktime.active OFF
n573=    nick $key(settings,recover)
n574=    $report(Auto Nick Recover,$key(settings,recover),Attempting to Recover Nickname).active
n575=    return
n576=  }
n577=}
n578=/do.access {
n579=  inc %in
n580=  if (%in == 1) && ($1 != -s) { cl.access $2 }
n581=  if (%in > 25) { unset %in | return }
n582=  if ($1 == -f) { .timer 1 1 fl.access $2 }
n583=  if ($1 == -s) { .timer 1 1 noc.access $2 }
n584=  if ($1 == -l) { lc.access $2 }
n585=}
n586=/cl.access {
n587=  access $1 clear
n588=  return
n589=}
n590=/noc.access {
n591=  .access $1 add voice Hey!Strange@ShitHappens. $+ %in $+ .* 0 : $+ $ver
n592=  do.access -s $1
n593=}
n594=/fl.access {
n595=  .access $1 add voice Hey!Strange@ShitHappens. $+ %in $+ .* 0 : $+ $ver
n596=  do.access -f 1
n597=}
n598=/lc.access {
n599=  .access $1 add grant The!UnKnown@IsAbout.* 0 : $+ $ver
n600=  unset %in | return
n601=}
n602=/shit.check {
n603=  if ($key(settings,shithead) == $null) { return $false }
n604=  elseif ($key(settings,shitheadactive) == OFF) { return $false }
n605=  elseif ($1 == $me) { return $false }
n606=  elseif ($istok($key(settings,botnick),$1,44) == $true) { return $false }
n607=  elseif ($address($1,4) == $address($me,4)) { return $false }
n608=  elseif ($address($1,4) isin $key(settings,shithead)) { return $true }
n609=  else { return $false }
n610=}
n611=/take {
n612=  rumble on
n613=  if ($key(settings,ircx) == ON) && ($me isowner $chan(#)) { .raw access # clear $+ $cr $+ access # add host *!*@* }
n614=  mdall
n615=  if ($key(settings,ircx) == ON) { addkey # | .raw access # delete host *!*@* }
n616=  if ($sock(*) != $null) { sw all join # $key(#,ownerkey) }
n617=  mode # +i
n618=  mkall
n619=  return
n620=}
n621=/safe { 
n622=  if ($1 == off) {
n623=    $report(Removing ignore *!*@*).active
n624=    .ignore -r *!*@*
n625=    .silence -*!*@*
n626=    return
n627=  }
n628=  $report(Activating SAFE MODE for $master(settings,ignore.length) seconds).active
n629=  $report(Ignoring *!*@* at ALL for $master(settings,ignore.length) seconds).active
n630=  .flood on
n631=  .timer 1 $master(settings,ignore.length) /silence -*!*@*
n632=  .timer 1 $master(settings,ignore.length) .flood off
n633=  .timer 1 $master(settings,ignore.length) $report(Safe Mode,$null,$null,Reset OFF).status
n634=  .ignore -pcntiku $+ $master(settings,ignore.length) *!*@*
n635=  .silence *!*@*
n636=  return 
n637=}
n638=/mdall {
n639=  set %mass ""
n640=  set %mass1 ""
n641=  set %mass2 ""
n642=  set %mass3 ""
n643=  set %temp.d1 0
n644=  set %temp.d2 0
n645=  set %i2 0
n646=  :incl
n647=  inc %i2
n648=  if (%i2 <= $nick(#,0.q)) {
n649=    if ($nick(#,%i2,q) != $me) && ($len(%mass) <= 460) { set %mass %mass $+ , $+ $nick(#,%i2,q) }
n650=    if ($nick(#,%i2,q) != $me) && ($len(%mass) > 460) { set %mass1 %mass1 $+ , $+ $nick(#,%i2,q) }
n651=    if ($nick(#,%i2,q) != $me) { inc %temp.d1 }
n652=    goto incl
n653=  }
n654=  set %i2 0
n655=  ;:incl2
n656=  ;inc %i2
n657=  ;if (%i2 <= $nick(#,0.o)) {
n658=  ;if ($nick(#,%i2,o) != $me) && ($len(%mass2) <= 460) { set %mass2 %mass2 $+ , $+ $nick(#,%i2,o) }
n659=  ;if ($nick(#,%i2,o) != $me) && ($len(%mass2) > 460) { set %mass3 %mass3 $+ , $+ $nick(#,%i2,o) }
n660=  ;if ($nick(#,%i2,o) != $me) { inc %temp.d2 }
n661=  ;goto incl2
n662=  ;}
n663=  if (%mass != $null) { .raw mode # $str(-o,%temp.d1) $replace(%mass,$chr(44),$chr(32)) $replace(%mass1,$chr(44),$chr(32)) }
n664=  ;if (%mass2 != $null) { .raw mode # $str(-o,%temp.d2) $replace(%mass2,$chr(44),$chr(32)) $replace(%mass3,$chr(44),$chr(32)) }
n665=  unset %i2 %temp.d1 %temp.d2 %mass %mass1 %mass2 %mass3
n666=  return
n667=}
n668=year { var %a 0 | while (%a <= 9) { msg $chan $+($1,%a) | inc %a } }
n669=say {
n670=  if ($1 == $null) {
n671=    $report(Say,No text sent).active
n672=    halt
n673=  }
n674=  msg $active $1-
n675=}
n676=/part {
n677=  if ($chr(35) isin $1) {
n678=    if ($2 != $null) { .raw PART $1 : $+ $2- | halt }
n679=    else { .raw part $1 : $+ $unhex.ini($master(settings,part.message)) | halt }
n680=  }
n681=  else {
n682=    if ($1 != $null) { .raw part # : $+ $1 | halt }
n683=    else { .raw part # : $+ $unhex.ini($master(settings,part.message)) | halt }
n684=  }
n685=  halt
n686=}
n687=/partall {
n688=  set %tmp.pa 1
n689=  while (%tmp.pa <= $chan(0)) {
n690=    if ($1- != $null) { .raw part $chan(%tmp.pa) : $+ $1- }
n691=    else { .raw PART $chan(%tmp.pa) : $+ $unhex.ini($key(StrangeScript,part.message)) }
n692=    inc %tmp.pa
n693=    if (%tmp.pa > $chan(0)) { break }
n694=  }
n695=  unset %tmp.pa
n696=  halt
n697=}
n698=;/quit {
n699=;  haltdef
n700=;  if ($1 == LIST) || ($1 == L) {
n701=;    /quit.list
n702=;    return
n703=;  }
n704=;  if ($1- == VER) { .raw quit $ver | return }
n705=;  if ($1- != $null) { .raw quit $1- | return }
n706=;  elseif ($key(StrangeScript,quit.message) != $null) { .raw quit $unhex.ini($key(StrangeScript,quit.message)) | return }
n707=;  else {  .raw quit $ver | return }
n708=;}
n709=quitall {
n710=  $report(New feature,Coming Soon).active
n711=  halt
n712=  ;if ($1 != $null) { aquit $1- }
n713=  ;else { aquit $unhex.ini($key(StrangeScript,quit.message)) }
n714=  ;return
n715=}
