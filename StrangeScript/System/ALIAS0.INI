[aliases]
n0=;--------------------------------------
n1=fullver return $report($ver,$null,$null,$null,04 $+ $chr(169) $+ 1999-2024 Dana L. Meli-Wischman)
n2=ver return 10S04trange10S04cript10[v158.22.02.04.202410]
n3=brag say This system gets to pick from a collection of $findfile($songs,*.*,0) Songs
n4=/shortver return 10S04trange10S04cript
n5=/myver say $fullver
n6=/smile /say };-}
n7=/mytopic topic #StrangeScript 4,0Ã¦0,4Ã¦5,4Ã¦4,5Ã¦1,5Ã¦5,1Ã¦4,1 $fullver 5,1Ã¦1,5Ã¦4,5Ã¦5,4Ã¦0,4Ã¦4,0Ã¦
n8=/cls {
n9=  if ($1 == $null) { clear # }
n10=  else {
n11=    if ($chr(35) !isin $1) { return }
n12=    clear $1
n13=  }
n14=}
n15=/saytime {
n16=  ;##saytime (Sends the time in my format to the channel)
n17=  var %temp = $lowcol $+ $date(dddd) $+ $bright $+ , $+ $chr(160) $+ $lowcol $+ $date(mmmm)
n18=  var %temp = %temp $+ $chr(160) $+ the $lowcol $+ $ord($date(dd)) $+ $bright $+ , $+ $chr(160) $+ $lowcol $+ $date(yyyy)
n19=  var %temp = %temp $+ $chr(160) $+ at $lowcol $+  $time(h) $+ $bright $+ : $+ $lowcol $+ $time(nn)
n20=  var %temp = %temp $+ $chr(160) $+ $lower($time(tt)) $+ $chr(160) $+ $bright $+ ( $+ $lowcol $+ $right($time(zzz),-1) $+ $bright $+ )
n21=  /notice # $report(%temp)
n22=  ;if ($1 == $null) {
n23=  ;  var %temp = $date(dddd) $+ , $date(mmmm)
n24=  ;  var %temp = %temp the $ord($date(dd)) $+ , $date(yyyy)
n25=  ;  var %temp = %temp at $time(h) $+ : $+ $time(nn)
n26=  ;  var %temp = %temp $lower($time(tt)) ( $+ $right($time(zzz),-1) $+ )
n27=  ;  /notice # %temp#
n28=  ;  return
n29=  ;}
n30=}
n31=all scid -a $1-
n32=aj autojoin
n33=ca cycleall
n34=sysdir return $mircdirsystem\
n35=botdir return $mircdirMBot\
n36=textdir return $mircdirtext\
n37=myecho if (@.* !isin $active) { return echo $color(normal text) -at < $+ $me $+ > }
n38=long { set %long ** | return }
n39=lowcol { if (%sc1 == $null) { return 04 } | else { if (%sc.bold == ON) { return  $+ %sc1 } | else { return  $+ %sc1 } } }
n40=highcol { if (%sc2 == $null) { return 11 } | else { if (%sc.bold == ON) { return  $+ %sc2 } | else { return  $+ %sc2 } } }
n41=bright { if (%sc3 == $null) { return 08 } | else { if (%sc.bold == ON) { return  $+ %sc3 } | else { return  $+ %sc3 } } }
n42=white { if (%sc4 == $null) { return 00 } | else { if (%sc.bold == ON) { return  $+ %sc4 } | else { return  $+ %sc4 } } }
n43=sep { if (%sc.seperater == $null) { return 10 } | else { if (%sc.bold == ON) { return  $+ %sc.seperater } | else { return  $+ %sc.seperater } } }
n44=space return $chr(160)
n45=spcm return $chr(44) $+ $chr(160)
n46=output return 11,11 
n47=sys return 4,4 
n48=;lll return $chr(124) $+ $chr(91)
n49=;rrr return $chr(93) $+ $chr(124)
n50=lll return $chr(186) $+ (
n51=rrr return ) $+ $chr(186)
n52=;chain return 04 $+ Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤
n53=chain {
n54=  if ($1 != $null) { return $lowcol $+  $+ $str(Â¤,$1) $+  }
n55=  else { return $lowcol $+ Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤Â¤ }
n56=}
n57=net return  $+ %sc.seperater $+ ( $+ 15 $+ $network $+  $+ %sc.seperater $+ ) $+ 
n58=mybar {
n59=  set %mybar. $+ $cid $chr(91) Nick: $me $chr(93) $+ $chr(124) $+ $chr(91) Net: $network $chr(93) $+ $chr(124) $+ $chr(91) Lag: $key(settings,lagmrc) $chr(93) $+ $chr(124) $+ $chr(91) ircX: $key(settings,ircx) $chr(93) $+ $chr(124) $+ $chr(91) Server: $server $chr(93) $+ $chr(124)
n60=  if (%mybar.temp == $null) { titlebar $chr(124) $+ $chr(91) Servers: $scid(0) $chr(93) $+ $chr(124) $+ $chr(91) socks . $+ $sock(*,0) $+ . $+ $chr(160) $+ . $+ $sock(BNC*,0) $+ . $+ $sock(@Boom*,0) $+ . $+ $sock(@Gate*,0) $+ . $+ $sock(@Split*,0) $+ . $+ $sock(Spy*,0) $+ . $chr(93) $+ $chr(124) $+ %mybar. [ $+ [ $activecid ] ] }
n61=  if (%mybar.temp != $null) { titlebar $chr(124) $+ $chr(91) Servers: $scid(0) $chr(93) $+ $chr(124) $+ $chr(91) socks . $+ $sock(*,0) $+ . $+ $chr(160) $+ . $+ $sock(BNC*,0) $+ . $+ $sock(@Boom*,0) $+ . $+ $sock(@Gate*,0) $+ . $+ $sock(@Split*,0) $+ . $+ $sock(Spy*,0) $+ . $chr(93) $+ $chr(124) $+ $chr(91) mp $+ $chr(179) %mybar.temp $chr(93) $+ $chr(124) $+ %mybar. [ $+ [ $activecid ] ] }
n62=  return
n63=}
n64=/cs chanserv $1-
n65=/setupshow { $report(System Setting,$null,SET,$null,$1-).active | script.play Notify.wav }
n66=/lag msg # $titlebar
n67=/1 return
n68=/doda /col ?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿?Â¿
n69=/sm { .say $smile }
n70=/lu lusers
n71=/l if ($1 != $null) { col Laugh Out Loud $+ @ $+ $1- } | else { col Laugh Out Loud }
n72=/la if ($1 != $null) { twist Laughing My Ass Off $+ @ $+ $1- } | else { twist Laughing My Ass Off }
n73=/p /part #
n74=/n /names #$$1
n75=/w /swho $1-
n76=/k { if ($1 == ?) { kick # $key(#,lastin) You were Slapped by $me $+  | return } | else { kick # $1 } }
n77=/hop {
n78=  if ($1 == $null) { cycle | return }
n79=  else { cycle $1- }
n80=}
n81=;n82=/old.hop { if ($1 == $null) { cycle | return } | else { .raw part # | .raw join $1 $key($1,ownerkey) | return } }
n82=/send /dcc send $snick(#,1)
n83=/chat /dcc chat $1
n84=/ping { if ($1 == $null) { .ctcp # ping } | else { .ctcp $$1 ping } }
n85=/kill.ping {
n86=  $report(Running Ping Food,$null,$null,on,$1).active
n87=  sw ALL privmsg $1 : $+ $chr(1) $+ PING $+ $chr(1) | sw ALL privmsg $1 : $+ $chr(1) $+ PING $+ $chr(1) | sw ALL privmsg $1 : $+ $chr(1) $+ PING $+ $chr(1) | sw ALL privmsg $1 : $+ $chr(1) $+ PING $+ $chr(1) | sw ALL privmsg $1 : $+ $chr(1) $+ PING $+ $chr(1) | sw ALL privmsg $1 : $+ $chr(1) $+ PING $+ $chr(1)
n88=}
n89=/kill.whisper {
n90=  $report(Running Whisper Flood,$null,$null,on,$1).active
n91=  sw ALL privmsg $1 :Stupid ass bitch | sw ALL privmsg $1 :Stupid ass bitch | sw ALL privmsg $1 :Stupid ass bitch | sw ALL privmsg $1 :Stupid ass bitch | sw ALL privmsg $1 :Stupid ass bitch | sw ALL privmsg $1 :Stupid ass bitch
n92=}
n93=/auto.ident {
n94=  if ($key(settings,autoident) != ON) { return }
n95=  if ($readini($mircdirtext\PassWord.ini,n,$network,$me) == $null) { $report(Auto-Ident,FAILED,$null,You have no saved password for your current nick).active | return }
n96=  else {
n97=    $report(Auto-Identify,$null,$key(settings,autoident),You are being Auto-Identified using,$readini($mircdirtext\PassWord.ini,n,$network,$me)).active
n98=    .nickserv IDENTIFY $readini($mircdirtext\PassWord.ini,n,$network,$me)
n99=    return
n100=  }
n101=}
n102=/auto.room.ident {
n103=  if ($key(settings,autoident) != ON) { return }
n104=  if ($readini($mircdirtext\PassWord.ini,n,$network,$4) == $null) { $report(Auto-Ident,FAILED,$null,You have no saved password for $4).active | return }
n105=  else {
n106=    $report(Auto-Identify,$null,$key(settings,autoident),You are being Auto-Identified to $4 using,$readini($mircdirtext\PassWord.ini,n,$network,$4)).active
n107=    .chanserv IDENTIFY $4 $readini($mircdirtext\PassWord.ini,n,$network,$4)
n108=    return 
n109=  }
n110=}
n111=/server.joins.count {
n112=  if ($exists($mircdirtext\ScriptInfo.ini) == $false) { .writeini -n $mircdirtext\ScriptInfo.ini StrangeScript n0 Registered }
n113=  set %tmp $readini($mircdirtext\ScriptInfo.ini,n,serverjoins,n0)
n114=  if (%tmp == $null) { if (%times.joined.server == $null) { set %times.joined.server 0 } | goto skippy }
n115=  if (%tmp != $null) { set %times.joined.server %tmp }
n116=  :skippy 
n117=  inc %times.joined.server
n118=  .writeini -n $mircdirtext\ScriptInfo.ini serverjoins n0 %times.joined.server
n119=  $report(Server Connect Count,%times.joined.server,$null,Using:,$ver).active
n120=  unset %tmp %times.joined.server
n121=  return
n122=}
n123=/connect.setup {
n124=  $report(Welcome to,$ver,Running on $network).status
n125=  .flood on
n126=  .timerMFlud. $+ $network 1 180 .flood off
n127=  unset %mass* %count.* %temp* %tmp* %ban.read.in %unmask* %nuke*
n128=  unset %awaiting.dns.* %Gate.User* %away.users.nick %hex.* %n
n129=  set %setup.temp 0
n130=  set %setup.count 0
n131=  set %logmaster.version v2.4
n132=  set %logmaster.about run
n133=  masterwrite settings clone.echo OFF
n134=  masterwrite settings boom.echo OFF
n135=  if (%sc.split == $null) { set %sc.split 09 }
n136=  if (%sc.socket == $null) { set %sc.socket 09 }
n137=  if ($master(settings,socksay) == $null) { masterwrite settings socksay Ouch Boss }
n138=  if ($key(settings,mode.default)  == $null) { keywrite settings mode.default -im+nt }
n139=  if ($key(settings,version) == $null) { keywrite settings version I got StrangeScript but havent set a version yet. }
n140=  if ($key(settings,whisper.hear) == $null) { keywrite settings whisper.hear ON }
n141=  if ($key(settings,notice.hear) == $null) { keywrite settings notice.hear ON }
n142=  if ($key(settings,invite.hear) == $null) { keywrite settings invite.hear ON }
n143=  if ($key(settings,action.hear) == $null) { keywrite settings action.hear ON }
n144=  if ($key(settings,Lagmrcsecs) == $null) { keywrite settings Lagmrcsecs 15 }  
n145=  if ($key(settings,Author) == $null) { .keywrite settings Author OFF | .disable #AuthorMode }
n146=  if ($key(settings,Debug) == $null) { .keywrite settings Debug OFF | .debug -c off }
n147=  if ($key(settings,beme) == on) { .timerBME. $+ $network 1 30 recover $key(settings,savednick1) }
n148=  keywrite settings bossmodes ""
n149=  keywrite settings boss $me
n150=  keywrite settings cycle.counter 0
n151=  keywrite settings attempt.ACTION 0
n152=  keywrite settings attempt.CTCP 0
n153=  keywrite settings attempt.NOTICE 0
n154=  keywrite settings attempt.WHISPER 0
n155=  keywrite settings attempt.KNOCK 0
n156=  keywrite settings attempt.MODE 0
n157=  keywrite settings attempt.RAWMODE 0
n158=  keywrite settings attempt.JOIN 0
n159=  keywrite settings attempt.PART 0
n160=  keywrite settings rumble OFF
n161=  ;set %mybar.temp ""
n162=  masterwrite settings remotecontrol.send OFF
n163=  keywrite settings secret.nick ""
n164=  .ignore -r *!*@*
n165=  .timerAM. $+ $network 1 60 /auto.master
n166=  .timerALIVE. $+ $network 0 45 /sw all god-find
n167=  .timerADJUST. $+ $network 1 60 /adjust
n168=  reset
n169=  if ($ial != $true) { ial on }
n170=  if (%slots.timer != $null) { unset %slots.timer }
n171=  if ($timer(away. [ $+ [ $network ] ] ).com != $null) { .timeraway. $+ $network off }
n172=  if ($key(settings,away.iam) == ON) { .timerIM. $+ $network 1 60 away RETURN }
n173=  if ($master(settings,Query.Windows) == $null) { masterwrite settings Query.Windows ON }
n174=  if ($exists($textdir $+ massinvite.txt) == $true) { .remove $textdir $+ massinvite.txt }
n175=  ;if ($exists($mircdirtext\Boom.Socket.Nick.txt) == $false) || ($exists($mircdirtext\Clone.Socket.Nick.txt) == $false) { msn }
n176=  /fix.kick.count
n177=  BNC.Server
n178=  return
n179=}
n180=/join { jn $1 $2 $3 $4 $5 $6- }
n181=/jn {
n182=  if ($2 != $null) { .raw join $1 $2- }
n183=  if ($2 == $null) && ($key($1,ownerkey) != $null) { .raw join $1 $key($1,ownerkey) }
n184=  else { .raw join $1 }
n185=}
n186=/ajs { .raw join $replace(%split.chan,$chr(32),$chr(160)) }
n187=/rumble {
n188=  if ($1 != $null) {
n189=    if ($1 == OFF) {
n190=      keywrite settings rumble OFF
n191=      if ($timer(RUMBLE. [ $+ [ $network ] ] ) != $null) { .timerRUMBLE. $+ $network off }
n192=      if ($timer(RUMBLESAY. [ $+ [ $network ] ] ) != $null) { .timerRUMBLESAY. $+ $network off }
n193=      $report(Rumble Mode,$null,OFF).status
n194=      return
n195=    }
n196=    if ($1 == ON) {
n197=      keywrite settings rumble ON
n198=      $report(Rumble Mode,$null,ON).active
n199=      .timerRUMBLE. $+ $network 1 30 keywrite settings rumble OFF
n200=      .timerRUMSAY. $+ $network 1 30 $report(Rumble Mode,Auto,Off,$null,$null).status
n201=      return
n202=    }
n203=  }
n204=  if ($1 == $null) {
n205=    if ($key(settings,rumble) == ON) {
n206=      keywrite settings rumble OFF
n207=      if ($timer(RUMBLE. [ $+ [ $network ] ] ) != $null) { .timerRUMBLE. $+ $network off }
n208=      if ($timer(RUMBLESAY. [ $+ [ $network ] ] ) != $null) { .timerRUMBLESAY. $+ $network off }
n209=      $report(Rumble Mode,$null,OFF).status
n210=      return
n211=    }
n212=    if ($key(settings,rumble) == OFF) {
n213=      keywrite settings rumble ON
n214=      $report(Rumble Mode,$null,ON).active
n215=      .timerRUMBLE. $+ $network 1 30 keywrite settings rumble OFF
n216=      .timerRUMSAY. $+ $network 1 30 $report(Rumble Mode,Auto,Off,$null,$null).status
n217=      return
n218=    }
n219=  }
n220=  return
n221=}
n222=ss.pop.serverDalChanAcs { return AOP/SOP/AKICK }
n223=ss.pop.serverCyChanAcs { return Access Levels }
n224=/q {
n225=  if ($1 == ?) && ($key(#,lastin) ison $chan) { .raw mode # +q $key(#,lastin) | return }
n226=  if ($1 != ?) && ($1 != $null) { .raw mode # +q $1 $2 $3 }
n227=  if ($1 != ?) && ($1 == $null) {
n228=    if ($modespl == $null) { var %tmp.num = 1 }
n229=    else { var %tmp.num = $modespl }
n230=    var %tmp.count = 1
n231=    var %tmp.total = 1
n232=    while (%tmp.count <= $numtok($snicks,44)) {
n233=      var %tmp.user = $addtok(%tmp.user,$snick(#,%tmp.count),44)
n234=      if (%tmp.total == %tmp.num) {
n235=        .raw mode # $str(+q,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32))
n236=        unset %tmp.user
n237=        var %tmp.total = 0
n238=      }
n239=      inc %tmp.total
n240=      inc %tmp.count
n241=      if (%tmp.count > $snick(#,0)) { break }
n242=    }
n243=    .raw mode # $str(+q,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32))
n244=    return
n245=
n246=  }
n247=}
n248=/deq {
n249=  if ($1 == ?) && ($key(#,lastin) ison $chan) { .raw mode # -q $key(#,lastin) | return }
n250=  if ($1 != ?) && ($1 != $null) { .raw mode # -q $1 $2 $3 }
n251=  if ($1 != ?) && ($1 == $null) {
n252=    if ($modespl == $null) { var %tmp.num = 1 }
n253=    else { var %tmp.num = $modespl }
n254=    var %tmp.count = 1
n255=    var %tmp.total = 1
n256=    while (%tmp.count <= $numtok($snicks,44)) {
n257=      var %tmp.user = $addtok(%tmp.user,$snick(#,%tmp.count),44)
n258=      if (%tmp.total == %tmp.num) {
n259=        .raw mode # $str(-q,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32))
n260=        unset %tmp.user
n261=        var %tmp.total = 0
n262=      }
n263=      inc %tmp.total
n264=      inc %tmp.count
n265=      if (%tmp.count > $snick(#,0)) { break }
n266=    }
n267=    .raw mode # $str(-q,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32))
n268=    return
n269=
n270=  }
n271=}
n272=/op { 
n273=  if ($1 == ?) && ($key(#,lastin) ison $chan) { .raw mode # +o $key(#,lastin) | return }
n274=  if ($1 != ?) {
n275=    if ($1 != $null) { .raw mode # +o $1 | return }
n276=    else {
n277=      if ($modespl == $null) { var %tmp.num = 1 }
n278=      else { var %tmp.num = $modespl }
n279=      var %tmp.count = 1
n280=      var %tmp.total = 1
n281=      while (%tmp.count <= $numtok($snicks,44)) {
n282=        var %tmp.user = $addtok(%tmp.user,$snick(#,%tmp.count),44)
n283=        if (%tmp.total == %tmp.num) {
n284=          if ($network == Dalnet) { .raw mode # $str(+o,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32)) }
n285=          else { .raw mode # + $+ $str(o,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32)) }
n286=          unset %tmp.user
n287=          var %tmp.total = 0
n288=        }
n289=        inc %tmp.total
n290=        inc %tmp.count
n291=        if (%tmp.count > $snick(#,0)) { break }
n292=      }
n293=      if ($network == Dalnet) { .raw mode # $str(+o,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32)) }
n294=      else { .raw mode # + $+ $str(o,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32)) }
n295=      return
n296=    }
n297=  }
n298=}
n299=/dop {
n300=  if ($1 == ?) && ($key(#,lastin) ison $chan) {
n301=    if ($key(settings,ircx) == ON) { .raw access # clear owner }
n302=    .raw mode # -o $key(#,lastin) ]
n303=    if ($key(settings,ircx) == ON) { addkey | addme }
n304=  }
n305=  if ($1 != ?) && ($1 != $null) {
n306=    if ($key(settings,ircx) == ON) { .raw access # clear owner }
n307=    .raw mode # -ooo $1 $2 $3
n308=    if ($key(settings,ircx) == ON) { addkey | addme }
n309=  }
n310=  if ($1 != ?) && ($1 == $null) {
n311=    if ($key(settings,ircx) == ON) { .raw access # clear owner }
n312=    if ($modespl == $null) { var %tmp.num = 1 }
n313=    else { var %tmp.num = $modespl }
n314=    var %tmp.count = 1
n315=    var %tmp.total = 1
n316=    while (%tmp.count <= $numtok($snicks,44)) {
n317=      var %tmp.user = $addtok(%tmp.user,$snick(#,%tmp.count),44)
n318=      if (%tmp.total == %tmp.num) {
n319=        if ($network == Dalnet) { .raw mode # $str(-o,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32)) }
n320=        else { .raw mode # - $+ $str(o,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32)) }
n321=        unset %tmp.user
n322=        var %tmp.total = 0
n323=      }
n324=      inc %tmp.total
n325=      inc %tmp.count
n326=      if (%tmp.count > $snick(#,0)) { break }
n327=    }
n328=    if ($network == Dalnet) { .raw mode # $str(-o,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32)) }
n329=    else { .raw mode # - $+ $str(o,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32)) }
n330=    if ($key(settings,ircx) == ON) { addkey | addme }
n331=  }
n332=}
n333=/pvoice {
n334=  if ($1 == ?) && ($key(#,lastin) ison $chan) { .raw mode # +o $key(#,lastin) | return }
n335=  if ($1 != ?) && ($1 != $null) { .raw mode # +vvv $1 $2 $3 }
n336=  if ($1 != ?) && ($1 == $null) {
n337=    if ($modespl == $null) { var %tmp.num = 1 }
n338=    else { var %tmp.num = $modespl }
n339=    var %tmp.count = 1
n340=    var %tmp.total = 1
n341=    while (%tmp.count <= $numtok($snicks,44)) {
n342=      var %tmp.user = $addtok(%tmp.user,$snick(#,%tmp.count),44)
n343=      if (%tmp.total == %tmp.num) {
n344=        if ($network == Dalnet) { .raw mode # $str(+v,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32)) }
n345=        else { .raw mode # + $+ $str(v,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32)) }
n346=        unset %tmp.user
n347=        var %tmp.total = 0
n348=      }
n349=      inc %tmp.total
n350=      inc %tmp.count
n351=      if (%tmp.count > $snick(#,0)) { break }
n352=    }
n353=    if ($network == Dalnet) { .raw mode # $str(+v,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32)) }
n354=    else { .raw mode # + $+ $str(v,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32)) }
n355=    return
n356=  }
n357=}
n358=/dvoice {
n359=  if ($1 == ?) && ($key(#,lastin) ison $chan) { .raw mode # -v $key(#,lastin) | return }
n360=  if ($1 != ?) && ($1 != $null) { .raw mode # -vvv $1 $2 $3 }
n361=  if ($1 != ?) && ($1 == $null) {
n362=    if ($modespl == $null) { var %tmp.num = 1 }
n363=    else { var %tmp.num = $modespl }
n364=    var %tmp.count = 1
n365=    var %tmp.total = 1
n366=    while (%tmp.count <= $numtok($snicks,44)) {
n367=      var %tmp.user = $addtok(%tmp.user,$snick(#,%tmp.count),44)
n368=      if (%tmp.total == %tmp.num) {
n369=        if ($network == Dalnet) { .raw mode # $str(-v,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32)) }
n370=        else { .raw mode # - $+ $str(v,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32)) }
n371=        unset %tmp.user
n372=        var %tmp.total = 0
n373=      }
n374=      inc %tmp.total
n375=      inc %tmp.count
n376=      if (%tmp.count > $snick(#,0)) { break }
n377=    }
n378=    if ($network == Dalnet) { .raw mode # $str(-v,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32)) }
n379=    else { .raw mode # - $+ $str(v,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32)) }
n380=    return
n381=  }
n382=}
n383=/cycle { 
n384=  if ($key(settings,cycle.counter) >= 2) { return }
n385=  keywrite settings cycle.counter $calc($key(settings,cycle.counter) + 1)
n386=  if ($1 != $null) { .raw part $1 $cr join $1 $key($1,ownerkey) }
n387=  if ($1 == $null) { .raw part # $cr join # $key(#,ownerkey) }
n388=  .timerCYC1a. $+ $network 1 5 keywrite settings cycle.counter 0
n389=  .timerCYC1b. $+ $network 1 5 $report(Cycle Counter,Reset,$null,0).status
n390=}
n391=/hup { 
n392=  if ($1 == $null) { $report(Hup,Error,$null,You need to include the nick,/hup nick).active | return } 
n393=  $report(Sending a HUP style ping to $1).active
n394=  .raw -q privmsg $1 : $+ $chr(1) $+ PING +++ATH0 $+ $chr(1)
n395=}
n396=/autojoin {
n397=  rumble on
n398=  keywrite settings autojoinspeed ""
n399=  var %temp.aj1 = $key(settings,autojoinrooms)
n400=  var %temp.aj2 = 1
n401=  if (%temp.aj1 == $null) {
n402=    $report(No Auto-Join,creating,$null,$null,$null).status
n403=    keywrite settings autojoinrooms #StrangeScript
n404=  }
n405=  while (%temp.aj2 <= $numtok(%temp.aj1,44)) {
n406=    .raw join $gettok(%temp.aj1,%temp.aj2,44) $key($gettok(%temp.aj1,%temp.aj2,44),ownerkey) | keywrite settings autojoinspeed $addtok($key(settings,autojoinspeed),$gettok(%temp.aj1,%temp.aj2,44),44)
n407=    inc %temp.aj2
n408=    if (%temp.aj2 > $numtok(%temp.aj1,44)) { break }
n409=  }
n410=  return
n411=}
n412=/fixban {
n413=  if ($nick == $me) { return }
n414=  if ($key($1,ban.lock) == ON) {
n415=    if ($2 == +b) { .raw mode $1 -b $banmask }
n416=    if ($2 == -b) { .raw mode $1 +b $banmask }
n417=    .raw mode $chan -o $nick 
n418=    msg $chan 10 $+ $chr(91) $+ $bright $+ System  Warning $+ 10 $+ $chr(93) $+ : $lowcol $+ If you $highcol $+ Ban/Unban $lowcol $+ you will be de-op'd
n419=    return
n420=  }
n421=  return
n422=}
n423=/setgreet {
n424=  if ($1 == ON) { keywrite settings greet $upper($1) | setupshow Room entry greeting $key(settings,greet) | return }
n425=  if ($1 == OFF) { keywrite settings greet $upper($1) | setupshow Room entry greeting $key(settings,greet) | return }
n426=  else { $report(Your options are limited to ON or OFF).active | return }
n427=}
n428=/endit { return }
n429=/razz {
n430=  if ($1 == $null) { halt | return }
n431=  else { .raw mode $chan -o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 }
n432=}
n433=/qfail {
n434=  .notice %qnick That password is wrong!! get ready for a ride.
n435=  .kick %qchan %qnick Wrong password get lost loser
n436=  .unset %qchan
n437=  .unset %qnick
n438=}
n439=/setprop {
n440=  if ($key(settings,ircx) == OFF) { 
n441=    echo -t $1 $sys $report(Auto Setup,$1,$null,Skipping Props,IRCd mode)
n442=    if ($master(settings,extra.info) == ON) { IF (status !isin $window($active)) { $report(Auto Setup,$1,$null,Skipping Props,IRCd mode).status } }
n443=    if ($me isop $chan($1)) { if ($key($1,topic) != $null) { var %tmp = $key($1,topic) | topic $1 $unhex.ini(%tmp) } }
n444=    if ($me isop $chan($1)) { set.modes $1 $2 }
n445=    return
n446=  }
n447=  if ($key($1,setup.on.join) == YES) { echo -t $1 $sys $report(Auto Setup,$null,$null,$null,$1 is set up) | return }
n448=  :setpgo
n449=  var %tmp = $readini($mircdirtext\ScriptInfo.ini,n,roomset,setupcount) | inc %tmp | .writeini -n $mircdirtext\ScriptInfo.ini roomset setupcount %tmp
n450=  echo -t $1 $sys $report(Auto Setup,$null,%tmp,Setting up,$1)
n451=  if ($master(settings,extra.info) == ON) { IF (status !isin $window($active)) { $report(Auto Setup,$null,%tmp,Setting up,$1).status } }
n452=  if ($key($1,ownerkey) == $null) { echo -t $1 $sys $report(Auto Setup,$null,No OWNER key saved for,$1) }
n453=  if ($key($1,ownerkey) != $null) { .prop $1 OWNERKEY $key($1,ownerkey) }
n454=  if ($key($1,hostkey) == $null) { echo -t $1 $sys $report(Auto Setup,$null,No HOST key saved for,$1) }
n455=  if ($key($1,hostkey) != $null) { .prop $1 HOSTKEY $key($1,hostkey) }
n456=  set.modes $1 $2
n457=  if ($key($1,topic) == $null) { echo -t $1 $sys $report(Auto Setup,$null,No TOPIC key saved for,$1) }
n458=  if ($key($1,topic) != $null) && ($key($1,topic) != $chan($1).topic) { var %tmp = $key($1,topic) | .prop $1 topic : $+ $unhex.ini(%tmp) }
n459=  if ($key($1,topic) != $null) && ($key($1,topic) == $chan($1).topic) { echo -t $1 $sys $report(Auto Setup,$null,TOPIC matches for $1,Skipping topic set) }
n460=  if ($key(%tmp.keys,memberkey) == $null) { echo -t $1 $sys $report(Auto Setup,$null,No MEMBER key saved for,$1) }
n461=  if ($key(%tmp.keys,memberkey) != $null) { .prop $1 memberkey $key(%tmp.keys,memberkey) }
n462=  if ($key(#,subject) == $null) { echo -t $1 $sys $report(Auto Setup,$null,No SUBJECT key saved for,$1) }
n463=  if ($key(#,subject) != $null) { .prop $1 subject : $+ $key(#,subject) }
n464=  if ($key($1,onjoin) == $null) { echo -t $1 $sys $report(Auto Setup,$null,No ONJOIN key saved for,$1) }
n465=  if ($key($1,onjoin) != $null) { var %tmp = $key($1,onjoin) | .prop $1 onjoin : $+ $unhex.ini(%tmp) }
n466=  if ($key($1,onpart) == $null) { echo -t $1 $sys $report(Auto Setup,$null,No ONPART key saved for,$1) }
n467=  if ($key($1,onpart) != $null) { var %tmp = $key($1,onpart) | .prop $1 onpart : $+ $unhex.ini(%tmp) }
n468=  keywrite $1 setup.on.join YES
n469=  ;/set.modes $1 $2
n470=}
n471=/set.modes { 
n472=  if ($key($1,mode) == $null) && ($me isop $chan($1)) { keywrite $1 mode $key(settings,mode.default) }
n473=  if ($key($1,mode) == $chan($1).mode) { 
n474=    echo -t $1 $sys $report(Auto Setup,$null,Modes match,$null,Skipping Mode Set)
n475=    if ($master(settings,extra.info) == ON) { IF (status !isin $window($active)) { $report(Auto Setup,$null,Modes match,$null,Skipping Mode Set).status } }
n476=    return
n477=  }
n478=  if ($key($1,mode) != $chan($1).mode) {
n479=    echo -t $1 $sys $report(Auto Setup,$null,MODES DONT MATCH,$null,Check for proper adjustment)
n480=    if ($master(settings,extra.info) == ON) { IF (status !isin $window($active)) { $report(Auto Setup,$null,MODES DONT MATCH,$null,Check for proper adjustment).status } }
n481=    if ($key($1,mode) != $chan($1).mode) { .raw mode $1 $replace($remove($chan($1).mode,r),+,-) }
n482=    if (k isin $chan($1).mode) { .raw mode $1 $replace($chan($1).mode,+,-) }
n483=    .raw mode $1 $remove($key($1,mode) ,r,x)
n484=  }
n485=  return
n486=}
n487=/fix.modes {
n488=  if ($key(settings,rumble) == ON) { return }
n489=  ;Add lines two below
n490=  if ($key($1,modelock) == $null) && ($me isop $chan($1)) { keywrite $1 modelock OFF }
n491=  if ($key($1,mode) == $null) && ($me isop $chan($1)) { keywrite $1 mode $chan($1).mode | $report(Mode Save,$1,Save,Saving mode's of,$key($1,mode)).active }
n492=  if ($2 == $me) {
n493=    .timer. $+ $network $+ $1 $+ 1 1 10 keywrite $1 mode $chan($1).mode
n494=    .timer. $+ $network $+ $1 $+ 2 1 10 $report(Mode Save,$chan($1),Save,Saving mode's of,$chan($1).mode).active
n495=    return  
n496=  }
n497=  ;Add lines one below
n498=  if ($me !isop $chan($1)) && ($me !isowner $chan($1)) { return }
n499=  if ($key($1,modelock) == OFF) { return }
n500=  if ($key($1,mode) == $chan($1).mode) { echo -t $1 $sys $report(Auto Setup,$null,Modes match,$null,Skipping Mode Set) | return }
n501=  if ($key($1,mode) != $chan($1).mode) { 
n502=    echo -t $1 $sys $report(Auto Setup,$null,MODES DONT MATCH,$null,Check for proper adjustment)
n503=    if ($key($1,modemaster) == ON) && ($2 != $me) { .raw mode $1 -o $2 }
n504=    .raw mode $1 $replace($remove($chan($1).mode,r),$chr(43),$chr(45))
n505=    ;if (l isin $chan($1).mode) { .raw mode $1 -l }
n506=    if (k isin $chan($1).mode) { .raw mode $1 -k $4 }
n507=    .raw mode $1 $remove($key($1,mode),r,x)
n508=    unset %temp
n509=    return
n510=  }
n511=}
n512=/modesave {
n513=  $report(Mode Save,$1,$null,Saving current modes,$chan($1).mode).active
n514=  keywrite $1 mode $chan($1).mode
n515=  return  
n516=}
n517=/out { saveini | clearall | if ($server != $null) { quit $unhex.ini($master(settings,quit.message)) } | exit }
n518=/repeat {
n519=  if (%repeat == 0) { goto outty }
n520=  if (%count. [ $+ [ $1 ] ] == $null) { set %count. [ $+ [ $1 ] ] 0 }
n521=  if (%count. [ $+ [ $1 ] ] == 0) { .timer 1 %kickthem //set %count. [ $+ [ $1 ] ] 0 }
n522=  if (%count. [ $+ [ $1 ] ] == $calc(%repeat - 1)) { msg $2 10 $+ $chr(91) $+ $white $+ Auto Kick $+ 10 $+ $chr(93) $+ : $bright $+ WARNING $highcol $1 $+ ,  $lowcol $+ you are about to be kicked for repeating }
n523=  if (%count. [ $+ [ $1 ] ] >= %repeat) { 
n524=    ignore -u $+ $master(settings,ignore.length) $1
n525=    .kick $2 $1 Big mistake
n526=    set %count. [ $+ [ $1 ] ] 0
n527=    return
n528=  }
n529=  .timer2. $+ $network 1 60 /unset %count. [ $+ [ $1 ] ]
n530=  /inc  %count. [ $+ [ $1 ] ] 1  
n531=  :outty
n532=  return
n533=}
n534=/recover {
n535=  if ($1 == OFF) { keywrite settings recover "" | .timernick. $+ $network off | $report(Auto Nick Recover,Set,Off).active | return }
n536=  if ($1 == $null) {
n537=    var %tmp.recover = $input(Enter the nick to recover,egi,StrangeScript needs input,NewUser)
n538=    if (%tmp.recover == %null) { return }
n539=    if ($key(settings,savednick1) == $null) { keywrite settings savednick1 %tmp.recover }
n540=    keywrite settings recover %tmp.recover
n541=    .timerRECOV. $+ $network 0 15 assimilate $key(settings,recover)
n542=    $report(Auto Nick Recover,$key(settings,recover),On,Recovering Nickname).active
n543=    assimilate $key(settings,recover)
n544=    return
n545=  }
n546=  if ($1 != $null) { 
n547=    keywrite settings recover $1
n548=    ;.timerNICK. $+ $network 0 15 assimilate $key(settings,recover)
n549=    .timerRECOV. $+ $network 0 15 assimilate $key(settings,recover)
n550=    ;$report(Auto Nick Recover,$key(settings,recover),On,Recovering Nickname).active
n551=    assimilate $key(settings,recover)
n552=    return
n553=  }
n554=}
n555=/assimilate {
n556=  if (guest* iswm $me) && ($key(settings,beme) == ON) { keywrite settings recover $key(settings,savednick1) }
n557=  if ($key(settings,recover) == $null) {
n558=    if (timer(RECOV. [ $+ [ $network ] ] ) != $null) { .timerRECOV. $+ $network off }
n559=    return
n560=  } 
n561=  if ($me == $key(settings,recover)) {
n562=    $report(Auto Nick Recover,$key(settings,recover),Done,Recover Complete).active
n563=    .timerRECOV. $+ $network off
n564=    if ($readini($textdir $+ PassWord.ini,n,$network,$me) != $null) { nickserv identify $key(settings,recover) $readini($textdir $+ PassWord.ini,n,$network,$me) }
n565=    keywrite settings recover ""
n566=    mode $me
n567=    return
n568=  }
n569=  if ($key(settings,recover) != $me) {
n570=    keywrite settings nicktime.active ON
n571=    .timer 1 15 keywrite settings nicktime.active OFF
n572=    nick $key(settings,recover)
n573=    $report(Auto Nick Recover,$key(settings,recover),Attempting to Recover Nickname).active
n574=    return
n575=  }
n576=}
n577=/do.access {
n578=  inc %in
n579=  if (%in == 1) && ($1 != -s) { cl.access $2 }
n580=  if (%in > 25) { unset %in | return }
n581=  if ($1 == -f) { .timer 1 1 fl.access $2 }
n582=  if ($1 == -s) { .timer 1 1 noc.access $2 }
n583=  if ($1 == -l) { lc.access $2 }
n584=}
n585=/cl.access {
n586=  access $1 clear
n587=  return
n588=}
n589=/noc.access {
n590=  .access $1 add voice Hey!Strange@ShitHappens. $+ %in $+ .* 0 : $+ $ver
n591=  do.access -s $1
n592=}
n593=/fl.access {
n594=  .access $1 add voice Hey!Strange@ShitHappens. $+ %in $+ .* 0 : $+ $ver
n595=  do.access -f 1
n596=}
n597=/lc.access {
n598=  .access $1 add grant The!UnKnown@IsAbout.* 0 : $+ $ver
n599=  unset %in | return
n600=}
n601=/shit.check {
n602=  if ($key(settings,shithead) == $null) { return $false }
n603=  elseif ($key(settings,shitheadactive) == OFF) { return $false }
n604=  elseif ($1 == $me) { return $false }
n605=  elseif ($istok($key(settings,botnick),$1,44) == $true) { return $false }
n606=  elseif ($address($1,4) == $address($me,4)) { return $false }
n607=  elseif ($address($1,4) isin $key(settings,shithead)) { return $true }
n608=  else { return $false }
n609=}
n610=/take {
n611=  rumble on
n612=  if ($key(settings,ircx) == ON) && ($me isowner $chan(#)) { .raw access # clear $+ $cr $+ access # add host *!*@* }
n613=  mdall
n614=  if ($key(settings,ircx) == ON) { addkey # | .raw access # delete host *!*@* }
n615=  if ($sock(*) != $null) { sw all join # $key(#,ownerkey) }
n616=  mode # +i
n617=  mkall
n618=  return
n619=}
n620=/safe { 
n621=  if ($1 == off) {
n622=    $report(Removing ignore *!*@*).active
n623=    .ignore -r *!*@*
n624=    .silence -*!*@*
n625=    return
n626=  }
n627=  $report(Activating SAFE MODE for $master(settings,ignore.length) seconds).active
n628=  $report(Ignoring *!*@* at ALL for $master(settings,ignore.length) seconds).active
n629=  .flood on
n630=  .timer 1 $master(settings,ignore.length) /silence -*!*@*
n631=  .timer 1 $master(settings,ignore.length) .flood off
n632=  .timer 1 $master(settings,ignore.length) $report(Safe Mode,$null,$null,Reset OFF).status
n633=  .ignore -pcntiku $+ $master(settings,ignore.length) *!*@*
n634=  .silence *!*@*
n635=  return 
n636=}
n637=/mdall {
n638=  set %mass ""
n639=  set %mass1 ""
n640=  set %mass2 ""
n641=  set %mass3 ""
n642=  set %temp.d1 0
n643=  set %temp.d2 0
n644=  set %i2 0
n645=  :incl
n646=  inc %i2
n647=  if (%i2 <= $nick(#,0.q)) {
n648=    if ($nick(#,%i2,q) != $me) && ($len(%mass) <= 460) { set %mass %mass $+ , $+ $nick(#,%i2,q) }
n649=    if ($nick(#,%i2,q) != $me) && ($len(%mass) > 460) { set %mass1 %mass1 $+ , $+ $nick(#,%i2,q) }
n650=    if ($nick(#,%i2,q) != $me) { inc %temp.d1 }
n651=    goto incl
n652=  }
n653=  set %i2 0
n654=  ;:incl2
n655=  ;inc %i2
n656=  ;if (%i2 <= $nick(#,0.o)) {
n657=  ;if ($nick(#,%i2,o) != $me) && ($len(%mass2) <= 460) { set %mass2 %mass2 $+ , $+ $nick(#,%i2,o) }
n658=  ;if ($nick(#,%i2,o) != $me) && ($len(%mass2) > 460) { set %mass3 %mass3 $+ , $+ $nick(#,%i2,o) }
n659=  ;if ($nick(#,%i2,o) != $me) { inc %temp.d2 }
n660=  ;goto incl2
n661=  ;}
n662=  if (%mass != $null) { .raw mode # $str(-o,%temp.d1) $replace(%mass,$chr(44),$chr(32)) $replace(%mass1,$chr(44),$chr(32)) }
n663=  ;if (%mass2 != $null) { .raw mode # $str(-o,%temp.d2) $replace(%mass2,$chr(44),$chr(32)) $replace(%mass3,$chr(44),$chr(32)) }
n664=  unset %i2 %temp.d1 %temp.d2 %mass %mass1 %mass2 %mass3
n665=  return
n666=}
n667=year { var %a 0 | while (%a <= 9) { msg $chan $+($1,%a) | inc %a } }
