[aliases]
n0=/auto.master {
n1=  if ($chr(35) !isin $window($active)) { .timerMASTER. $+ $network 1 15 auto.master | return }
n2=  if ($ial(*,0) > 0) {
n3=    .rlevel 5
n4=    .auser 5 $address($me,3) $me
n5=  }
n6=  else { .timerMASTER. $+ $network 1 15 auto.master }
n7=  return
n8=}
n9=report {
n10=  if ($1- == $null) { return No Text Sent to Report | return }
n11=  else { var %tmp.rbuild = %tmp.rbuild $sep $+ $chr(186) }
n12=  if ($1 != $null) { var %tmp.rbuild = %tmp.rbuild $+ $sep $+ ( $+ $white $1 $sep $+ ) $+ $chr(186) }
n13=  if ($2 != $null) { var %tmp.rbuild = %tmp.rbuild $+ $sep $+ ( $+ $highcol $2 $sep $+ ) $+ $chr(186) }
n14=  if ($3 != $null) { var %tmp.rbuild = %tmp.rbuild $+ $sep $+ ( $+ $bright $3 $sep $+ ) $+ $chr(186) }
n15=  if ($4 != $null) { var %tmp.rbuild = %tmp.rbuild $+ $sep $+ ( $+ $lowcol $4 $sep $+ ) $+ $chr(186) }
n16=  if ($5- != $null) { var %tmp.rbuild = %tmp.rbuild $+ $sep $+ ( $+ $white $5- $sep $+ ) $+ $chr(186) }
n17=  if ($prop == active) { return echo -at $sys $+ $space $+ $sep $+ $chr(186) $+ $net $+ %tmp.rbuild }
n18=  if ($prop == status) { return echo -st $sys %tmp.rbuild }
n19=  if ($prop == chan) { return echo -t # $sys %tmp.rbuild }
n20=  if ($prop == $null) { return %tmp.rbuild }
n21=}
n22=deathip {
n23=  var %temp.dip = $gettok($address($snick(#,1),2),2,64))
n24=  var %temp.dip = $remove(%temp.dip,$chr(33))
n25=  ;set %temp.dip $remove(%temp.dip,$chr(64))
n26=  var %temp.dip  = $remove(%temp.dip,$chr(42))
n27=  return %temp.dip
n28=}
n29=/kick.T { var %tmpKT = $readini($mircdirtext\ScriptInfo.ini, n,kickcount,kicktotal) | .writeini -n $mircdirtext\ScriptInfo.ini kickcount kicktotal $calc(%tmpKT +1) | return }
n30=/kick.Y { var %tmpKY = $readini($mircdirtext\ScriptInfo.ini, n,kickcount,kickyou) | .writeini -n $mircdirtext\ScriptInfo.ini kickcount kickyou $calc(%tmpKY +1) | return }
n31=/say.kicka {
n32=  if ($key(settings,rumble) == ON) { return }
n33=  var %tmpKA = $readini($mircdirtext\ScriptInfo.ini, n,kickcount,kickyou)
n34=  if ($master(settings,show.kcount) == ON) { msg $1 $report(KickCount,$null,Add,This person has slapped the shit out of %tmpKA chatters with) $ver | return }
n35=  else {
n36=    echo -t $1 $sys $report(KickCount,$null,Add,You have slapped the shit out of %tmpKA chatters) 
n37=    if ($master(settings,extra.info) == ON) { IF (status !isin $window($active)) { $report(KickCount,$null,Add,You have slapped the shit out of %tmpKA chatters).status } }
n38=    return
n39=  }
n40=}
n41=/say.kickb {
n42=  if ($key(settings,rumble) == ON) { return }
n43=  var %tmpKB = $readini($mircdirtext\ScriptInfo.ini, n,kickcount,kicktotal)
n44=  if ($master(settings,show.kcount) == ON) { msg $1 $report(KickCount,$null,Add,This copy has witnessed %tmpKB kicks in its lifetime) | return }
n45=  if ($master(settings,show.kcount) != ON) {
n46=    echo -t $1 $sys $report(KickCount,$null,Add,Your copy has witnessed %tmpKB kicks in its lifetime)
n47=    if ($master(settings,extra.info) == ON) { IF (status !isin $window($active)) { $report(KickCount,$null,Add,Your copy of has witnessed %tmpKB kicks in its lifetime).status } }
n48=    return
n49=  }
n50=}
n51=/auto.op {
n52=  if ($me !isop $chan($1)) && ($3 == +o) { return }
n53=  if ($nick($1,$me,q) == $null) && ($3 == +q) { return }
n54=  if ($2 ison $chan($1)) { .raw mode $1 $3 $2 }
n55=  .notice $2 $report(Auto-Op,$null,You were Auto-Op'd,$1)
n56=  $report(Auto-Op,$1,$2,was op'd).active
n57=  return
n58=}
n59=/auto.op.not { return }
n60=/auto.op.rumble {
n61=  if ($key(settings,rumble) == ON) { $report(Auto-Op,Failed,$null,$2 was NOT Op'd in $1 due to Rumble Mode).active }
n62=  else { $report(Auto-Op,OFF,$2,Was not Op'd in $1).active }
n63=  return
n64=}
n65=/ssflood {
n66=  if ($key(settings,flood.control) == OFF) { return }
n67=  var %tmpf = $key(settings,attempt. [ $+ [ $upper($1) ] ] )
n68=  keywrite settings attempt. [ $+ [ $upper($1) ] ] $calc(%tmpf + 1)
n69=  if (%tmpf >= 5) {
n70=    if ($1 == CTCP) { .ignore -tu $+ $master(settings,ignore.length) *!*@* }
n71=    if ($1 == NOTICE) { .ignore -nu $+ $master(settings,ignore.length) *!*@* }
n72=    if ($1 == WHISPER) { .ignore -pu $+ $master(settings,ignore.length) *!*@* }
n73=    if ($1 == ACTION) { .ignore -u $+ $master(settings,ignore.length) $2 }
n74=    if ($1 == PART) { .ignore -u $+ $master(settings,ignore.length) $2 }
n75=    if ($1 == JOIN) { .ignore -u $+ $master(settings,ignore.length) $2 }
n76=    if ($1 == MODE) { .ignore -u $+ $master(settings,ignore.length) $2 }
n77=    if ($1 == RAWMODE) { .ignore -u $+ $master(settings,ignore.length) $2 }
n78=    if ($1 == KNOCK) { .ignore -u $+ $master(settings,ignore.length) $2 }
n79=    if ($1 == INVITE) { .ignore -iu $+ $master(settings,ignore.length) *!*@* }
n80=    $report(Flood Protection,$upper($1),Activated,By,$2).status
n81=    .timerFO $+ $1 1 $master(settings,ignore.length) keywrite settings attempt. $+ $upper($1) 0
n82=    .timerFO1 $+ $1 1 $master(settings,ignore.length) $report(Flood Protection,$upper($1),Reset,to 0).status
n83=    return
n84=  }
n85=  .timerFO $+ $1 1 15 keywrite settings attempt. [ $+ [ $upper($1) ] ] 0
n86=  .timerFO1 $+ $1 1 15 $report(Flood Protection,$upper($1),Reset,to 0).status
n87=  return
n88=}
n89=/ctcp {
n90=  if ($2 == PING) {
n91=    if ($show == $true) { 
n92=      $report(Sending a $upper(ping) to $1).active
n93=      .raw -q privmsg $1 : $+ $chr(1) $+ PING $ctime $ticks $+ $chr(1)
n94=      return
n95=    }
n96=    if ($show == $false) { 
n97=      .raw -q privmsg $1 : $+ $chr(1) $+ PING $ctime $ticks $+ $chr(1)
n98=      return
n99=    }
n100=  }
n101=  if ($2 != PING) { 
n102=    if ($show == $true) { 
n103=      $report(Ctcp,$1,Sending,$upper($2),$3-).active
n104=      if ($3 == $null) { .raw -q privmsg $1 : $+ $chr(1) $+ $upper($2) $+ $chr(1) }
n105=      if ($3 != $null) { .raw -q privmsg $1 : $+ $chr(1) $+ $upper($2) $3- $+ $chr(1) }
n106=      return
n107=    }
n108=    if ($show == $false) { 
n109=      if ($3 == $null) { .raw -q privmsg $1 : $+ $chr(1) $+ $upper($2) $+ $chr(1) }
n110=      if ($3 != $null) { .raw -q privmsg $1 : $+ $chr(1) $+ $upper($2) $3- $+ $chr(1) }
n111=      return
n112=    }
n113=  }
n114=}
n115=/clonescan {
n116=  set %total 0
n117=  $report($chain).active
n118=  $report($null,$null,Clone Scan,#).active
n119=  .write -c Clone_Check.txt
n120=  .enable #clonecheck | who #
n121=}
n122=/serverclonescan {
n123=  set %total 0
n124=  $report($chain).active
n125=  $report($null,$null,Server Clone Scan,*).active
n126=  .write -c Clone_Check.txt
n127=  .enable #serverclonecheck | who *
n128=}
n129=/propscan {
n130=  set %propdisplay msg #
n131=  ;set %propdisplay echo -at
n132=  .enable #propscan
n133=  %propdisplay $sys $report($chain)
n134=  %propdisplay $sys $report(Prop List,$null,$null,#)
n135=  prop # *
n136=}
n137=/spaced.room {
n138=  ;set %tmp.space $1
n139=  join $chr(35) $+ $replace($1-,$chr(32),$chr(160))
n140=  ;join $chr(35) $+ $chr(160) $+ $replace($1-,$chr(32),$chr(160))
n141=}
n142=/beg {
n143=  raw -q mode # +o-o+o-o+o-o+o-o+o-o+o-o+o-o+o-o+o-o+o-o $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 
n144=  return
n145=}
n146=/beg.sock {
n147=  sw all mode # +o-o+o-o+o-o+o-o+o-o+o-o+o-o+o-o+o-o+o-o $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 
n148=  return
n149=}
n150=/beg.q {
n151=  raw -q mode # +q-q+q-q+q-q+q-q+q-q+q-q+q-q+q-q+q-q+q-q $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 
n152=  return
n153=}
n154=/begup {
n155=  raw -q mode # +o+o+o+o+o+o+o+o+o+o+o+o+o+o+o+o+o+o+o+o $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 
n156=  return
n157=}
n158=/mix {
n159=  if ($1 == $null) {
n160=    echo "Usage: /mix <text>"
n161=    /return
n162=  }
n163=  set %count 1
n164=  set %msg ""
n165=  set %arg $1-
n166=  :m1
n167=  if (%count <= $len(%arg)) {
n168=    set %i $mid(%arg,%count,1)
n169=    if %i == $chr(160)  goto isspc
n170=    set %r $rand(0,2)
n171=    if (%r == 0) { 
n172=      /set %i  $+ %i $+ 
n173=    }
n174=    elseif (%r == 1) {
n175=      /set %i  $+ %i  $+ 
n176=    }
n177=    else {
n178=      /set %i  $+ %i $+ 
n179=    }
n180=    /set %msg  %msg $+ %i
n181=    /inc %count
n182=    goto m1
n183=    :isspc   
n184=    //set %msg %msg $+ $chr(160)
n185=    /inc %count
n186=    goto m1 
n187=  }
n188=  say %msg
n189=  unset %msg %r %i %count %arg
n190=  /return
n191=}
n192=/col {
n193=  if ($1 == $null) { echo "Usage: /col <text>" | /return }
n194=  var %count = 1
n195=  var %arg = $1-
n196=  var %msg ""
n197=  var %doo ""
n198=  while (%count <= $len(%arg)) {
n199=    var %i = $mid(%arg,%count,1)
n200=    if (%i == $chr(63)) { var %doo = $rand(3,4) }
n201=    if (%doo == 3) { var %i = $chr(63) }
n202=    if (%doo == 4) { var %i = $chr(191) }
n203=    if (%i == $chr(32)) { var %msg = %msg $+ $chr(160) |  inc %count | goto m2 }
n204=    ;if (%i == $chr(160)) { var %msg = %msg $+ $chr(160) |  inc %count | goto m2 }
n205=    var %r = $rand(0,11)
n206=    if (%r == 0) { var %i = 4 $+ %i } 
n207=    elseif (%r == 1) { var %i = 9 $+ %i }
n208=    elseif (%r == 2) { var %i = 10 $+ %i }
n209=    elseif (%r == 3) { var %i = 11 $+ %i }
n210=    elseif (%r == 4) { var %i = 12 $+ %i }
n211=    elseif (%r == "5) { var %i = 13 $+ %i }
n212=    elseif (%r == 6) {  var %i = 14 $+ %i }
n213=    elseif (%r == 7) { var %i = 15 $+ %i }
n214=    elseif (%r == 8) { var %i = 3 $+ %i }
n215=    elseif (%r == 9) { var %i = 4 $+ %i }
n216=    elseif (%r == 10) { var %i = 7 $+ %i }
n217=    else { var %i = 0 $+ %i }
n218=    var %msg = %msg $+ %i
n219=    inc %count
n220=    :m2
n221=    if (%count > $len(%arg)) { break }
n222=  }
n223=  say %msg
n224=  return
n225=}
n226=/freak {
n227=  if ($1 == $null) {
n228=    echo "Usage: /freak <text>"
n229=    /return
n230=  }
n231=  set %count 1
n232=  set %msg ""
n233=  set %arg $1-
n234=  :floop
n235=  if (%count <= $len(%arg)) {
n236=    set %i $mid(%arg,%count,1)
n237=    if (%i == $chr(63)) { set %r $rand(3,4) }
n238=    if (%i == $chr(191)) { set %r $rand(3,4) }
n239=    if (%i != $chr(63)) { set %r $rand(1,2) }
n240=    if (%r == 1) { set %i $upper(%i) }
n241=    if (%r == 2) { set %i $lower(%i) }
n242=    if (%r == 3) { set %i $chr(63) }
n243=    if (%r == 4) { set %i $chr(191) }
n244=    set %msg %msg $+ %i $+ 
n245=    inc %count
n246=    goto floop
n247=  }
n248=  :freakout
n249=  say  $+ $rand(2,15) $+ %msg
n250=  unset %msg %r %i %arg %count
n251=  return   
n252=}
n253=/twist {
n254=  if ($1 == $null) { echo "Usage: /twist <text>" | return }
n255=  var %count = 1
n256=  var %msg = ""
n257=  var %arg = $1-
n258=  :floop
n259=  if (%count <= $len(%arg)) {
n260=    var %i = $mid(%arg,%count,1)
n261=    if (%i == $chr(191)) { var %r = $rand(1,2) }
n262=    if (%i == $chr(63)) { var %r = $rand(1,2) }
n263=    if (%i != $chr(63)) { var %r = $rand(3,8) }
n264=    if (%r == 1) { var %i = $chr(63) }
n265=    if (%r == 2) { var %i = $chr(191) }
n266=    if (%r == 3) { var %i = $upper(%i) }
n267=    if (%r == 4) { var %i = $lower(%i) }
n268=    if (%r == 5) { var %i =  $+ $upper(%i) $+  }
n269=    if (%r == 6) { var %i =  $+ $lower(%i) $+  }
n270=    if (%r == 7) { var %i =  $+ $upper(%i) $+  }
n271=    if (%r == 8) { var %i =  $+ $lower(%i) $+  }
n272=    var %msg = %msg $+ %i $+ 
n273=    inc %count
n274=    goto floop
n275=  }
n276=  :freakout
n277=  say  $+ $rand(2,15) $+ %msg
n278=  return
n279=}
n280=/dana { say  04,05 $+ $chr(160) $+ $chr(160) $+ $1- $+ $chr(160) $+ $chr(160) $+  }
n281=/back {
n282=  if ($away == $false) { if ($key(settings,away.iam) == OFF) { $report(Back,Canceled,$null,You are not currently set away).active | return } }
n283=  var %temp.away.variables = $time $+ , $+ $ctime
n284=  var %temp.away1 = $calc($gettok(%temp.away.variables,2,44) - $gettok($key(settings,away.variables),2,44))
n285=  .raw away
n286=  .nick $gettok($key(settings,away.variables),3,44)
n287=  ame $report(Is Back) $report($null,$null,From:,$key(settings,away.reason)) $report($null,$null,Left:,$gettok($key(settings,away.variables),1,44)) $report($null,$null,Was Gone:,$duration(%temp.away1))
n288=  .timeraway. $+ $network OFF
n289=  .keywrite settings away.iam OFF
n290=  .timerlogcolor. $+ $network 1 10 login.color.nick
n291=  away.message.read
n292=}
n293=/away {
n294=  if ($master(settings,away.ext) == $null) { masterwrite settings away.ext -away }
n295=  if ($1 == RETURN) {
n296=    .raw away $replace($key(settings,away.reason),$chr(32),$chr(160))
n297=    .nick $remove($me,$master(settings,away.ext)) $+ $master(settings,away.ext)
n298=    .timer 1 0 away REMIND
n299=    .timeraway. $+ $network 0 $master(settings,away.remind) away REMIND
n300=    return
n301=  }
n302=  if ($1 == REMIND) {
n303=    var %temp.away.variables = $time $+ , $+ $ctime
n304=    var %temp.away1 = $calc($gettok(%temp.away.variables,2,44) - $gettok($key(settings,away.variables),2,44))
n305=    ame $report(Still Away) $report($null,$null,Reason:,$key(settings,away.reason)) $report($null,$null,Left:,$gettok($key(settings,away.variables),1,44)) $report($null,$null,So far:,$duration(%temp.away1)) $report($null,$null,Pager:,$master(settings,pager))
n306=    return
n307=  }
n308=  if ($key(settings,away.reason) == $null) { keywrite settings away.reason AFK }
n309=  if ($1- != $null) { keywrite settings away.reason $replace($1-,$chr(32),$chr(160)) }
n310=  keywrite settings away.variables $time $+ , $+ $ctime $+ , $+ $remove($me,$master(settings,away.ext))
n311=  .nick $remove($me,$master(settings,away.ext)) $+ $master(settings,away.ext)
n312=  ame $report(Went Away) $report($null,$null,Reason:,$key(settings,away.reason)) $report($null,$null,Left:,$gettok($key(settings,away.variables),1,44)) $report($null,$null,Pager:,$master(settings,pager))
n313=  .raw away : $+ $key(settings,away.reason)
n314=  .timeraway. $+ $network 0 $master(settings,away.remind) /away REMIND
n315=  keywrite settings away.iam ON
n316=  .timerlogcolor. $+ $network 1 10 login.color.nick
n317=  .write -a $logdiraway.log ****Begin Log Session:   $date(mm/dd/yyyy) $time(hh:nn:ss-TT) $network
n318=  return
n319=}
n320=/mkops {
n321=  %mass = 0
n322=  while (%mass <= $opnick(#,0)) {
n323=    if $opnick(#,%mass) != $me { var %mass1 $addtok(%mass1,$opnick(#,%mass),44) }
n324=    inc %mass 1
n325=    if (%mass > $opnick(#,0)) { break }
n326=  }
n327=  .kick # %mass1 $replace(Mass Op Kick,$chr(32),$chr(160))
n328=}
n329=/mknops {
n330=  var %mass 1
n331=  while (%mass <= $nopnick(#,0)) {
n332=    var %mass1 $addtok(%mass1,$nopnick(#,%mass),44)
n333=    inc %mass
n334=    if (%mass > $nopnick(#,0)) { break }
n335=  }
n336=  .kick # %mass1 $replace(Mass Non Op Kick,$chr(32),$chr(160))
n337=}
n338=/mkall {
n339=  set %mass 0
n340=  set %mass1 ""
n341=  set %mass2 ""
n342=  :incl
n343=  if (%mass < $nick(#,0)) {
n344=    inc %mass
n345=    if ($nick(#,%mass) != $me) && ($len(%mass2) <= 400) { set %mass2 %mass2 $+ , $+ $nick(#,%mass) }
n346=    if ($nick(#,%mass) != $me) && ($len(%mass2) > 400) { set %mass1 %mass1 $+ , $+ $nick(#,%mass) }
n347=    goto incl
n348=  }
n349=  if (%mass2 != $null) { .kick # %mass2 }
n350=  if (%mass1 != $null) { .kick # %mass1 }
n351=  unset %mass %mass1 %mass2
n352=  return
n353=}
n354=/mop {
n355=  unset %mass
n356=  %i = 0
n357=  %i2 = 0
n358=  :incl
n359=  inc %i
n360=  if ($nopnick(#,%i) = $null) {
n361=    if ($len(%mass) > 0) mode # +ooo %mass
n362=    return
n363=  }
n364=  inc %i2
n365=  %mass = %mass $nopnick(#,%i)
n366=  if (3 // %i2) {
n367=    mode # +ooo %mass
n368=    unset %mass %i2
n369=  }
n370=  goto incl
n371=}
n372=/mdop {
n373=  unset %mass
n374=  %i = 0
n375=  %i2 = 0
n376=  :incl
n377=  inc %i
n378=  if ($opnick(#,%i) = $me) { goto incl }
n379=  if ($opnick(#,%i) = $null) {
n380=    if ($len(%mass) > 0) mode # -ooo %mass
n381=    return
n382=  }
n383=  inc %i2
n384=  %mass = %mass $opnick(#,%i)
n385=  if (3 // %i2) {
n386=    mode # -ooo %mass
n387=    unset %mass %i2
n388=  }
n389=  goto incl
n390=}
n391=/mq {
n392=  unset %mass
n393=  %i = 0
n394=  %i2 = 0
n395=  :incl
n396=  inc %i
n397=  if ($nick(#,%i) = $me) { goto incl }
n398=  if ($nick(#,%i) = $null) {
n399=    if ($len(%mass) > 0) mode # +qqq %mass
n400=    return
n401=  }
n402=  inc %i2
n403=  %mass = %mass $nick(#,%i)
n404=  if (3 // %i2) {
n405=    mode # +qqq %mass
n406=    unset %mass %i2
n407=  }
n408=  goto incl
n409=}
n410=/qs {
n411=  var %notice.var 1
n412=  if ($nick(#,%notice.var) == $null) { goto done }
n413=  if ($nick(#,%notice.var) == $me) { inc %notice.var | goto next } 
n414=  if ($nick(#,%notice.var) isowner $chan(#)) {
n415=    var %notice.save = $addtok(%notice.save,$nick(#,%notice.var,q),44)
n416=    inc %notice.var 1
n417=    goto next
n418=  }
n419=  :next
n420=  if ($nick(#,%notice.var,q) == $null) { goto done }
n421=  if ($nick(#,%notice.var,q) == $me) { inc %notice.var | goto next } 
n422=  if ($nick(#,%notice.var) isowner $chan(#)) {
n423=    var %notice.save = $addtok(%notice.save,$nick(#,%notice.var,q),44)
n424=    inc %notice.var 1
n425=    goto next
n426=  }
n427=  :done
n428=  if ($numtok(%notice.save,44) > 10) {
n429=    .notice $gettok(%notice.save,1-10,44) 10 $+ $chr(91) $+ $white $+ Owner Notice $+ 10 $+ $chr(93) $+ 09 $+ @ $+ $+ 10 $+ $chr(91) $+ 13 $+ # $+ 10 $+ $chr(93) $+ :  $1-
n430=    .notice $gettok(%notice.save,11-20,44) 10 $+ $chr(91) $+ $white $+ Owner Notice $+ 10 $+ $chr(93) $+ 09 $+ @ $+ $+ 10 $+ $chr(91) $+ 13 $+ # $+ 10 $+ $chr(93) $+ :  $1-
n431=  }
n432=  else { .notice %notice.save 10 $+ $chr(91) $+ $white $+ Owner Notice $+ 10 $+ $chr(93) $+ 09 $+ @ $+ $+ 10 $+ $chr(91) $+ 13 $+ # $+ 10 $+ $chr(93) $+ :  $1- }
n433=  echo -t # 10 $+ $chr(91) $+ $white $+ Owner Notice $+ 10 $+ $chr(93) $+ 09 $+ @ $+ $+ 10 $+ $chr(91) $+ 13 $+ # $+ 10 $+ $chr(93) $+ :  $1-
n434=}
n435=/ops {
n436=  .onotice %notice.save $highcol $+ Host Notice $+ 09 $+ @ $+ 13 $+ # $+ 11 :  $1-
n437=  echo -t # $highcol $+ Host Notice $+ 09 $+ @ $+ 13 $+ # $+ 11 :  $1-
n438=}
n439=/omsg { 
n440=  set %notice.var 1
n441=  set %notice.save ""
n442=  if ($nick(#,%notice.var,o) == $null) { goto done }
n443=  if ($nick(#,%notice.var,o) == $me) { inc %notice.var | goto next } 
n444=  if ($nick(#,%notice.var,o) != $null) {
n445=    set %notice.save $addtok(%notice.save,$nick(#,%notice.var,o),44)
n446=    inc %notice.var 1
n447=    goto next
n448=  }
n449=  :next
n450=  if ($nick(#,%notice.var,o) == $null) { goto done }
n451=  if ($nick(#,%notice.var,o) == $me) { inc %notice.var | goto next } 
n452=  if ($nick(#,%notice.var,o) != $null) {
n453=    set %notice.save $addtok(%notice.save,$nick(#,%notice.var,o),44)
n454=    inc %notice.var 1
n455=    goto next
n456=  }
n457=  :done
n458=  .msg %notice.save $highcol $+ Host Message $+ 09 $+ @ $+ 13 $+ # $+ 11 :  $1-
n459=  echo -t #  $highcol $+ Host Message $+ 09 $+ @ $+ 13 $+ # $+ 11 :  $1-
n460=  unset %notice.var %notice.save
n461=}
n462=/non { 
n463=  set %notice.var 1 
n464=  :next
n465=  if ($nopnick(#,%notice.var) == $null) { goto done } 
n466=  if ($nopnick(#,%notice.var) == $me) { inc %notice.var 1 | goto next } 
n467=  .notice $nopnick(#,%notice.var) $highcol $+ Non Op Notice $+ 09 $+ @ $+ 13 $+ # $+ 11 :  $1-
n468=  inc %notice.var 1 
n469=  goto next 
n470=  :done
n471=  $myecho $highcol $+ Non Op Notice $+ 09 $+ @ $+ 13 $+ # $+ 11 :  $1-
n472=  unset %notice.var
n473=}
n474=/nom { 
n475=  set %opmsg.var 1 
n476=  :next
n477=  if ($nopnick(#,%opmsg.var) == $null) { goto done } 
n478=  if ($nopnick(#,%opmsg.var) == $me) { inc %opmsg.var 1 | goto next } 
n479=  .msg $nopnick(#,%opmsg.var) $highcol $+ Non Op Message $+ 09 $+ @ $+ 13 $+ # $+ 11 :  $1-
n480=  inc %opmsg.var 1 
n481=  goto next 
n482=  :done
n483=  $myecho $highcol $+ Non Op Message $+ 09 $+ @ $+ 13 $+ # $+ 11 :  $1-
n484=  unset %opmsg.var
n485=}
n486=/away.message.read {
n487=  if ($1 == READ) { goto read }
n488=  if ($1 == DELETE) { goto delete }
n489=  .dialog -m raway back
n490=  return
n491=  :read
n492=  window -a @AwayMessages 0 0 
n493=  aline 04 @AwayMessages $sys $report($chain)
n494=  aline 04 @AwayMessages $sys $bright $+ Away Log Read $lowcol $+ for $highcol $+ $network
n495=  .loadbuf $lines($logdiraway.log) @AwayMessages $logdiraway.log
n496=  aline 04 @AwayMessages $sys $bright Done.
n497=  aline 04 @AwayMessages $sys $report($chain)
n498=  goto amr.out
n499=  set %tmp 4
n500=  :delete
n501=  /write -c $logdiraway.log ****Begin Log Session $date $time 
n502=  goto amr.out
n503=  :multi
n504=  window -a @AwayMessages 0 0 
n505=  aline 04 @AwayMessages $sys $report($chain)
n506=  aline 04 @AwayMessages $sys $bright $+ Away Log Read $lowcol $+ for $highcol $+ $network
n507=  .loadbuf $lines($logdiraway.log) @AwayMessages $logdiraway.log
n508=  aline 04 @AwayMessages $sys $bright Done.
n509=  aline 04 @AwayMessages $sys $report($chain)
n510=  .timer 1 10 /write -c $logdiraway.log ****Begin Log Session $date $time
n511=  :amr.out
n512=  unset %temp.away.read
n513=}
n514=/mass.invite {
n515=  if ($1 == $null) { $report(ERROR,$null,$null,in the Mass Invite).active | return }
n516=  if ($2 == $null) { return }
n517=  $report(Mass Invite,$null,$null,Inviting $calc($nick(#,0) -1) people to $2).active
n518=  set %temp.inv.write 1
n519=  :invwrite.loop
n520=  if (%temp.inv.write > $nick(#,0)) { goto allwritten }
n521=  if ($nick(#,%temp.inv.write) != $me) { .write -a $textdir $+ massinvite.txt $nick(#,%temp.inv.write) }
n522=  inc %temp.inv.write
n523=  goto invwrite.loop
n524=  :allwritten
n525=  unset %temp.inv.write
n526=  set %tmp.spool1 $textdir $+ massinvite.txt
n527=  set %tmp.spool3 $lines(%tmp.spool1)
n528=  if ($timer(MASSINV. [ $+ [ $network ] ] ).con == $null) { set %tmp.spool4 1 }
n529=  /spool.invite $2
n530=  return
n531=}
n532=/spool.invite {
n533=  if (%tmp.spool4 > %tmp.spool3) {
n534=    .remove %tmp.spool1
n535=    unset %tmp.spool1 %tmp.spool2 %tmp.spool3 %tmp.spool4
n536=    $report(Mass Invite is completed).active
n537=    return
n538=  }
n539=  set %tmp.spool2 $read(%tmp.spool1,%tmp.spool4)
n540=  if (%tmp.spool2 ison $1) { goto there.already }
n541=  .invite %tmp.spool2 $1
n542=  :there.already
n543=  inc %tmp.spool4
n544=  .timerMASSINV. $+ $network 1 2 //spool.invite $1
n545=}
