[script]
n0=menu channel {
n1=  -
n2=  Mass Menu
n3=  .Mass Q (Selected):.raw mode # $str(+q,$snick(#,0)) $snick(#,1) $snick(#,2) $snick(#,3) $snick(#,4) $snick(#,5) $snick(#,6) $snick(#,7) $snick(#,8) $snick(#,9) $snick(#,10) $snick(#,11) $snick(#,12)
n4=  .Mass Q (all):/mq
n5=  .-
n6=  .Mass Op (Selected):.raw mode # $str(+o,$snick(#,0)) $snick(#,1) $snick(#,2) $snick(#,3) $snick(#,4) $snick(#,5) $snick(#,6) $snick(#,7) $snick(#,8) $snick(#,9) $snick(#,10) $snick(#,11) $snick(#,12)
n7=  .Mass Op (non ops):/mop
n8=  .-
n9=  .Mass Deop (non owners):/mdop
n10=  .Mass Deop (all):/mdall
n11=  .Mass Deop (Selected):.raw mode # $str(-o,$snick(#,0)) $snick(#,1) $snick(#,2) $snick(#,3) $snick(#,4) $snick(#,5) $snick(#,6) $snick(#,7) $snick(#,8) $snick(#,9) $snick(#,10) $snick(#,11) $snick(#,12)
n12=  .-
n13=  .Mass kick (all):/mkall
n14=  .Mass kick (ops):/mkopsl
n15=  .Mass kick (non ops):/mknops
n16=  .Mass kick (selected):.raw kick # $snicks*
n17=  .-
n18=  .Op Take this room:/optake #
n19=  .Take this room:/take #
n20=  .Change Take Key1:masterwrite settings take.key1 $input(Take Key One,egi,StrangeScript needs input) | setupshow Take Key One changed to $master(settings,take.key1)
n21=  .Change Take Key2:masterwrite settings take.key2 $input(Take Key One,egi,StrangeScript needs input) | setupshow Take Key Two changed to $master(settings,take.key2)
n22=  -
n23=  Channel Messaging
n24=  .Owner Notice:/qs $input(Owner Notice,egi,StrangeScript needs input)
n25=  .-
n26=  .Op Notice:/ops $input(Op Notice,egi,StrangeScript needs input)
n27=  .Op Message:/omsg $input(Op Message,egi,StrangeScript needs input)
n28=  .-
n29=  .Non-Op Notice:/non $input(Non-Op Notice,egi,StrangeScript needs input)
n30=  .Non-Op Message:/nom $input(Non-Op Message,egi,StrangeScript needs input)
n31=  .-
n32=  .Current Channel Notice:var %temp = $input(Channel Notice,egi,StrangeScript needs input) | notice # $report($null,Channel Message,$null,$null,%temp)
n33=  .Current Channel message:var %temp = $input(Channel Message,egi,StrangeScript needs input) | msg # $report($null,Channel Message,$null,$null,%temp)
n34=  .-
n35=  .All Channel message:set %temp $input(All Channel Message,egi,StrangeScript needs input) | amsg $highcol $+ Channel Message: 09 %temp | unset %temp
n36=  -
n37=  Channel CTCP
n38=  .Ping:.ctcp # ping
n39=  .Version:.ctcp # VERSION
n40=  .Page:.ctcp # PAGE $input(PAGE message,egi,StrangeScript needs input)
n41=  .MESSAGE:.ctcp # MESSAGE $input(Message to send,egi,StrangeScript needs input)
n42=  .Time:.ctcp # TIME
n43=  .Userinfo:.ctcp # USERINFO
n44=  .Clientinfo:.ctcp # CLIENTINFO
n45=  .Script:.ctcp # SCRIPT
n46=  .Other ?:.ctcp # $input(Ctcp to send,egi,StrangeScript needs input)
n47=  -
n48=  Away/Nick Menus
n49=  .Away Menu
n50=  ..Set Away:/away
n51=  ..Set Away new message:/away $input(Your away message,egi,StrangeScript needs input)
n52=  ..Set BRB:/away BRB
n53=  ..Set Back:/BACK
n54=  ..-
n55=  ..Read Away Messages:/away.message.read READ
n56=  ..Delete Away Messages:/away.message.read DELETE
n57=  .Nick Menu
n58=  ..Change Nick:/nick $input(Your new nickname,egi,StrangeScript needs input)
n59=  ..Recent Nicks
n60=  ... $+ $key(settings,savednick1) $+ :nick $key(settings,savednick1)
n61=  ... $+ $key(settings,savednick2) $+ :nick $key(settings,savednick2)
n62=  ...-
n63=  ... $+ $gettok($key(settings,nicklist),1,44) $+ :nick $gettok($key(settings,nicklist),1,44)
n64=  ... $+ $gettok($key(settings,nicklist),2,44) $+ :nick $gettok($key(settings,nicklist),2,44)
n65=  ... $+ $gettok($key(settings,nicklist),3,44) $+ :nick $gettok($key(settings,nicklist),3,44)
n66=  ... $+ $gettok($key(settings,nicklist),4,44) $+ :nick $gettok($key(settings,nicklist),4,44)
n67=  ... $+ $gettok($key(settings,nicklist),5,44) $+ :nick $gettok($key(settings,nicklist),5,44)
n68=  ... $+ $gettok($key(settings,nicklist),6,44) $+ :nick $gettok($key(settings,nicklist),6,44)
n69=  ... $+ $gettok($key(settings,nicklist),7,44) $+ :nick $gettok($key(settings,nicklist),7,44)
n70=  ... $+ $gettok($key(settings,nicklist),8,44) $+ :nick $gettok($key(settings,nicklist),8,44)
n71=  ... $+ $gettok($key(settings,nicklist),9,44) $+ :nick $gettok($key(settings,nicklist),9,44)
n72=  ... $+ $gettok($key(settings,nicklist),10,44) $+ :nick $gettok($key(settings,nicklist),10,44)
n73=  ..Random Nickname:rand
n74=  ..Auto Nick Changer
n75=  ...Start Nick Changer:nicktime
n76=  ...Stop Nick Changer:.timerNick. $+ $network OFF | set %nicktime.active OFF | $report(Nick Change,$null,$null,Timer has been halted).chan
n77=  ...Set Timer Method $chr(91) $key(settings,nicktime.type) $chr(93)
n78=  ....Random: keywrite settings  nicktime.type RAND | setupshow Random Nick Method $key(settings,nicktime.type)
n79=  ....List: keywrite settings  nicktime.type LIST | setupshow Random Nick Method $key(settings,nicktime.type)
n80=  ..Nick Recovery Options
n81=  ...Recover Nick:{ keywrite settings recover $input(Nick to Recover,egi,StrangeScript needs input) | recover }
n82=  ...Stop Recover: keywrite settings recover ""
n83=  ..Set Saved Nicks
n84=  ...Set Saved Nick One:keywrite settings savednick1 $input(Enter the first saved nickname,egi,StrangeScript needs input) | setupshow $key(settings,savednick1) | halt
n85=  ...Set Saved Nick Two:keywrite settings savednick2 $input(Enter the second saved nickname,egi,StrangeScript needs input) | setupshow $key(settings,savednick2) | halt
n86=  ...Set Saved Nick Three:keywrite settings savednick3 $input(Enter the second saved nickname,egi,StrangeScript needs input) | setupshow $key(settings,savednick3) | halt
n87=  ...Set Saved Nick Four:keywrite settings savednick4 $input(Enter the second saved nickname,egi,StrangeScript needs input) | setupshow $key(settings,savednick4) | halt
n88=  -
n89=  ChanServ
n90=  .ChanServ Help: chanserv help | $report(Getting help from ChanServ).active
n91=  .-
n92=  .Identify Yourself to ?:var %tmp = $input(Channel to identify to,egi,StrangeScript needs input,#) | chanserv identify %tmp $readini($textdir $+ PassWord.ini,n,$network,%tmp) | $report(Identifying to ChanServ for %tmp using $readini($textdir $+ PassWord.ini,n,$network,%tmp)).active
n93=  .Identify Yourself to # $+: { chanserv identify # $readini($textdir $+ PassWord.ini,n,$network,#) | $report(Identifying to ChanServ for # using $readini($textdir $+ PassWord.ini,n,$network,#)).active }
n94=  .Any Command
n95=  ..Any Channel: chanserv $input(Enter Command,egi,StrangeScript needs input) $input(Enter Channel,egi,StrangeScript needs input) $input(Enter Parameters,egi,StrangeScript needs input) | $report(Sending Command to ChanServ).active
n96=  ..This Channel: chanserv $input(Enter Command,egi,StrangeScript needs input,60) # $input(Enter Parameters,egi,StrangeScript needs input) | $report(Sending Command to ChanServ).active
n97=  .-
n98=  .Register Channel ?:chanserv register $input(Enter Channel,egi,StrangeScript needs input) $input(Enter Password,egi,StrangeScript needs input) $input(Enter Description) | $report(Registering Channel with to ChanServ).active
n99=  .Register Channel # $+ :chanserv register # $input(Enter Password,egi,StrangeScript needs input) $input(Enter Description,egi,StrangeScript needs input) | $report(Registering # with to ChanServ).active
n100=  .Drop Channel ?:chanserv drop $input(Enter Channel,egi,StrangeScript needs input) | $report(Dropping Channel from ChanServ).active
n101=  .Drop Channel # $+ :chanserv drop # | $report(Dropping Channel # from ChanServ).active
n102=  .-
n103=  . $+ $ss.pop.serverDalChanAcs
n104=  ..AutoKick
n105=  ...Add AutoKick ?:chanserv akick $input(Enter Channel,egi,StrangeScript needs input) add $input(Enter Nick/Hostmask,egi,StrangeScript needs input) | $report(Adding AKICK to Channel on ChanServ).active
n106=  ...Add AutoKick # $+ :chanserv akick # add $input(Enter Nick/Hostmask,egi,StrangeScript needs input) | $report(Adding AKICK to # on ChanServ).active
n107=  ...Remove Autokick ?:chanserv akick $input(Enter Channel,egi,StrangeScript needs input) del $input(Enter Nick/Hostmask,egi,StrangeScript needs input) | $report(Removing AKICK from Channel on ChanServ).active
n108=  ...Remove Autokick # $+ :chanserv akick # del $input(Enter Nick/Hostmask,egi,StrangeScript needs input) | $report(Removing AKICK from # on ChanServ).active
n109=  ...AutoKick List ?:chanserv akick $input(Enter Channel,egi,StrangeScript needs input) list | $report(Getting AKICK list for Channel from ChanServ).active
n110=  ...AutoKick List # $+ :chanserv akick # list | $report(Getting AKICK list for # from ChanServ).active
n111=  ..-
n112=  ..SOP
n113=  ...Add SuperOp ?: chanserv sop $input(Enter Channel,egi,StrangeScript needs input) add $input(Enter Nick/Hostmask,egi,StrangeScript needs input) | $report(Adding SOP to Channel on ChanServ).active
n114=  ...Add SuperOp # $+ : chanserv sop # add $input(Enter Nick/Hostmask,egi,StrangeScript needs input) | $report(Adding SOP to Channel on ChanServ).active
n115=  ...Remove SuperOp ?: chanserv sop $input(Enter Channel,egi,StrangeScript needs input) del $input(Enter Nick/Hostmask,egi,StrangeScript needs input) | $report(Removing SOP from Channel on ChanServ).active
n116=  ...Remove SuperOp # $+ : chanserv sop # del $input(Enter Nick/Hostmask,egi,StrangeScript needs input) | $report(Removing SOP from Channel on ChanServ).active
n117=  ...List of SuperOps ?: chanserv sop $input(Enter Channel,egi,StrangeScript needs input) list | $report(Getting SOP list for Channel from ChanServ).active
n118=  ...List of SuperOps # $+ : chanserv sop # list | $report(Getting SOP list for Channel # from ChanServ).active
n119=  ..AOP
n120=  ...Add AutoOp ?: chanserv aop $input(Enter Channel,egi,StrangeScript needs input) add $input(Enter Nick/Hostmask,egi,StrangeScript needs input) | $report(Adding AOP to Channel on ChanServ).active
n121=  ...Add AutoOp # $+ : chanserv aop # add $input(Enter Nick/Hostmask,egi,StrangeScript needs input) | $report(Adding AOP to Channel on ChanServ).active
n122=  ...Remove AutoOp ?: chanserv aop $input(Enter Channel,egi,StrangeScript needs input) del $input(Enter Nick/Hostmask,egi,StrangeScript needs input) | $report(Removing AOP from Channel on ChanServ).active
n123=  ...Remove AutoOp # $+ : chanserv aop # del $input(Enter Nick/Hostmask,egi,StrangeScript needs input) | $report(Removing AOP from Channel on ChanServ).active
n124=  ...List of AutoOps ?: chanserv aop $input(Enter Channel,egi,StrangeScript needs input) list | $report(Getting AOP list for Channel from ChanServ).active
n125=  ...List of AutoOps # $+ : chanserv aop # list | $report(Getting AOP list for Channel # from ChanServ).active
n126=  ..-
n127=  ..Count All ?: chanserv count $input(Enter Channel,egi,StrangeScript needs input) | $report(Getting channel count for Channel from ChanServ).active
n128=  ..Count All # $+ : chanserv count # | $report(Getting channel count for Channel # from ChanServ).active
n129=  . $+ $ss.pop.serverCyChanAcs
n130=  ..AutoKick
n131=  ...Add AutoKick: chanserv akick $input(Enter Channel,egi,StrangeScript needs input) add $input(Enter Nick/Hostmask,egi,StrangeScript needs input) | $report(Adding AKICK to Channel on ChanServ).active
n132=  ...Remove Autokick: chanserv akick $input(Enter Channel,egi,StrangeScript needs input) del $input(Enter Nick/Hostmask,egi,StrangeScript needs input) | $report(Removeing AKICK from Channel on ChanServ)
n133=  ...AutoKick List: chanserv akick $input(Enter Channel,egi,StrangeScript needs input) list | $report(Getting AKICK list for Channel from ChanServ).active
n134=  ..-
n135=  ..Add Level
n136=  ...Level -100 (Deopped): chanserv access $input(Enter Channel,egi,StrangeScript needs input) add $input(NickName,egi,StrangeScript needs input) -100 | $report(Adding Level -100 (Deopped) to Channel on ChanServ).active
n137=  ...Level 5 (Aop): chanserv access $input(Enter Channel,egi,StrangeScript needs input) add $input(NickName,egi,StrangeScript needs input) 5 | $report(Adding Level 5 (AOP) to Channel on ChanServ).active
n138=  ...Level 10 (Sop): chanserv access $input(Enter Channel,egi,StrangeScript needs input) add $input(NickName,egi,StrangeScript needs input) 10 | $report(Adding Level 10 (SOP) to Channel on ChanServ).active
n139=  ...Level 100 (Co-Founder): chanserv access $input(Enter Channel,egi,StrangeScript needs input) add $input(NickName,egi,StrangeScript needs input) 100 | $report(Adding Level 100 (Co-Founder) to Channel on ChanServ).active
n140=  ...Level ?: chanserv access $report(Enter Channel,egi,StrangeScript needs input) add $input(NickName,egi,StrangeScript needs input) $input(Level,egi,StrangeScript needs input) | $report(Adding Level $! to Channel on ChanServ).active
n141=  ..Del Level: chanserv access $input(Enter Channel,egi,StrangeScript needs input) del $input(NickName/Nr,egi,StrangeScript needs input) | $report(Deleteing Level for $! on Channel with ChanServ).active
n142=  ..List Level: chanserv access $input(Enter Channel,egi,StrangeScript needs input) list | $report(Getting Access List for Channel on ChanServ).active
n143=  .-
n144=  .Send Memos
n145=  ..Send Memo to User:memoserv send $input(Memo to who?,egi,StrangeScript needs input) $input(What do you want the memo to say?,egi,StrangeScript needs input) | $report(Sending memo to user).active
n146=  ..Send Memo to OP's:memoserv send $input(Enter Channel,egi,StrangeScript needs input) $input(What do you want the memo to say?,egi,StrangeScript needs input) | $report(Sending memo to OP's on Channel).active
n147=  ..Send Memo to SOP's:memoserv sendsop $input(Enter Channel,egi,StrangeScript needs input) $input(What do you want the memo to say?,egi,StrangeScript needs input) | $report(Sending memo to SOP's on Channel).active
n148=  .Channel Control
n149=  ..Get Ops on ?: chanserv op $input(Channel,egi,StrangeScript needs input) $me | $report(Using ChanServ to OP $me).active
n150=  ..Get Ops on # $+ : { chanserv op # $me | $report(Using ChanServ to OP $me on #).active }
n151=  ..Op Somebody ?: chanserv op $input(Enter Channel,egi,StrangeScript needs input) $input(Enter Nick,egi,StrangeScript needs input) | $report(Using ChanServ to OP on Channel).active
n152=  ..Op Somebody # $+ : chanserv op # $input(Enter Nick,egi,StrangeScript needs input) | $report(Using ChanServ to OP on Channel #).active
n153=  ..-
n154=  ..Deop Yourself ?: chanserv deop $input(Enter Channel,egi,StrangeScript needs input) $me | $report(Using ChanServ to DEOP $me on Channel).active
n155=  ..Deop Yourself # $+ : chanserv deop # $me | $report(Using ChanServ to DEOP $me on Channel #).active
n156=  ..Deop Somebody ?: chanserv deop $input(Enter Channel,egi,StrangeScript needs input) $input(Enter Nick,egi,StrangeScript needs input) | $report(Using ChanServ to DEOP on Channel).active
n157=  ..Deop Somebody # $+ : chanserv deop # $input(Enter Nick,egi,StrangeScript needs input) | $report(Using ChanServ to DEOP on Channel #).active
n158=  ..Deop Everybody ?: chanserv mdeop $input(Enter Channel,egi,StrangeScript needs input) | $report(Using ChanServ to Mass DEOP everyone on Channel).active
n159=  ..Deop Everybody # $+ : chanserv mdeop # | $report(Using ChanServ to Mass DEOP everyone on Channel #).active
n160=  ..-
n161=  ..Kick Everybody ?: chanserv mkick $input(Enter Channel,egi,StrangeScript needs input) | $report(Using ChanServ to Mass KICK everyone on Channel).active
n162=  ..Kick Everybody # $+ : chanserv mkick # | $report(Using ChanServ to Mass KICK everyone on Channel #).active
n163=  ..-
n164=  ..Unban Yourself: chanserv unban $report(Enter Channel,egi,StrangeScript needs input) $me | $report(Using ChanServ to unban $me on Channel).active
n165=  ..Clear Banlist: chanserv unban $input(Enter Channel,egi,StrangeScript needs input) all | $report(Using ChanServ to clear banlist on Channel).active
n166=  .-
n167=  .Channel Invites
n168=  ..Invite Yourself: chanserv invite $input(Enter Channel,egi,StrangeScript needs input) | $report(Using ChanServ to invite $me to Channel).active
n169=  ..Invite Someone: chanserv invite $input(Enter Channel,egi,StrangeScript needs input) $input(Enter Nick,egi,StrangeScript needs input) | $report(Using ChanServ to invite to Channel).active
n170=  .-
n171=  .Set
n172=  ..Desc: chanserv set # DESC $input(Description,egi,StrangeScript needs input) | $report(Setting Channel Description on ChanServ).active
n173=  ..Founder: chanserv set # FOUNDER | $report(Setting Channel Founder on ChanServ).active
n174=  ..Topic: chanserv set # TOPIC $input(Topic,egi,StrangeScript needs input) | $report(Setting Channel Topic on ChanServ).active
n175=  ..Mlock: chanserv set # MLOCK $input(Mode Lock +nt-islmpk,egi,StrangeScript needs input) | $report(Setting Channel Modes on ChanServ).active
n176=  ..Keep Topic
n177=  ...On: chanserv set # KEEPTOPIC ON
n178=  ...Off: chanserv set # KEEPTOPIC OFF
n179=  ..Lock Topic 
n180=  ...On: chanserv set # TOPICLOCK $input(Founder or SOP,egi,StrangeScript needs input)
n181=  ...Off: chanserv set # TOPICLOCK OFF
n182=  ..Private
n183=  ...On: chanserv set # PRIVATE ON
n184=  ...Off: chanserv set # PRIVATE OFF
n185=  ..Restricted
n186=  ...On: chanserv set # RESTRICTED ON
n187=  ...Off: chanserv set # RESTRICTED OFF
n188=  ..Secure
n189=  ...On: chanserv set # SECURE ON
n190=  ...Off: chanserv set # SECURE OFF
n191=  ..Secure Ops
n192=  ...On: chanserv set # SECUREOPS ON
n193=  ...Off: chanserv set # SECUREOPS OFF
n194=  .-
n195=  .Channel Info ?: chanserv info $input(Enter Channel,egi,StrangeScript needs input) | $report(Using ChanServ to get channel info for Channel).active
n196=  .Channel Info # $+ : chanserv info # | $report(Using ChanServ to get channel info for Channel #).active
n197=  NickServ
n198=  .NickServ Help:{ nickserv help | $report(Getting help from NickServ).active }
n199=  .-
n200=  .Identify Yourself:{ nickserv identify $readini($textdir $+ PassWord.ini,n,$network,$me) | $report(Identifying to NickServ as: $readini($textdir $+ PassWord.ini,n,$network,$me)).active }
n201=  .Identify Using
n202=  ..Saved Nick One $chr(91) $key(settings,savednick1) $chr(93) $+ :{ nickserv identify $readini($textdir $+ PassWord.ini,n,$network,savednick1) | $report(Identifying to NickServ as: $key(settings,savednick1) $readini($textdir $+ PassWord.ini,n,$network,savednick1)).active }
n203=  ..Saved Nick Two $chr(91) $key(settings,savednick2) $chr(93) $+ :{ nickserv identify $readini($textdir $+ PassWord.ini,n,$network,savednick2) | $report(Identifying to NickServ as: $key(settings,savednick2) $readini($textdir $+ PassWord.ini,n,$network,savednick2)).active }
n204=  ..Saved Nick Three $chr(91) $key(settings,savednick3) $chr(93) $+ :{ nickserv identify $readini($textdir $+ PassWord.ini,n,$network,savednick3) | $report(Identifying to NickServ as: $key(settings,savednick3) $readini($textdir $+ PassWord.ini,n,$network,savednick3)).active }
n205=  ..Saved Nick Four $chr(91) $key(settings,savednick4) $chr(93) $+ :{ nickserv identify $readini($textdir $+ PassWord.ini,n,$network,savednick4) | $report(Identifying to NickServ as: $key(settings,savednick4) $readini($textdir $+ PassWord.ini,n,$network,savednick4)).active }
n206=  .Register $me $+ :{
n207=    if ($network == dalnet) { nickserv register $input(Enter Password To Use,egi,StrangeScript needs input) $input(Enter Valid Email Address,egi,StrangeScript needs input) }
n208=    else { nickserv register $input(Enter Password To Use,egi,StrangeScript needs input) $input(Enter Valid Email Address,egi,StrangeScript needs input) }
n209=    $report(Registering $me with NickServ).active
n210=  }
n211=  .Drop $me $+ :nickserv drop $me | $report(Dropping $me from NickServ).active
n212=  .-
n213=  .Access
n214=  ..Access List: nickserv access list $input(Nick To List:,egi,StrangeScript needs input) | $report(Listing access on NickServ).active
n215=  ..Add: nickserv access add $input(Enter Address:,egi,StrangeScript needs input) | $report(Adding access to $me on NickServ).active
n216=  ..Delete: nickserv access del $input(Enter Address:,egi,StrangeScript needs input) | $report(Removeing access to $me from NickServ).active
n217=  .-
n218=  .Nick Recovery
n219=  ..Release: nickserv release $input(Nick To Release:,egi,StrangeScript needs input) | $report(Using release command on NickServ).active
n220=  ..Recover: nickserv recover $input(Nick To Recover:,egi,StrangeScript needs input) $input(Enter Your Password:,egi,StrangeScript needs input) | $report(Using recover command on NickServ).active
n221=  ..Ghost: nickserv ghost $input(Name of Ghost Nick:,egi,StrangeScript needs input) $input(Enter Your Password:,egi,StrangeScript needs input) | $report(Using ghost command on NickServ).active
n222=  .-
n223=  .Set
n224=  ..Kill
n225=  ...On: nickserv set kill on | $report(Setting kill command to ON).active
n226=  ...Off: nickserv set kill off | $report(Setting kill command to OFF).active
n227=  ..Url: nickserv set url $input(URL To Associate With:,egi,StrangeScript needs input) | $report(Setting URL on NickServ).active
n228=  .-
n229=  .List: nickserv list $input(Enter a Nick or Address:,egi,StrangeScript needs input) | $report(Using list command on NickServ).active
n230=  .Info: nickserv info $input(Enter a Nick:,egi,StrangeScript needs input) | $report(Getting info on NickServ).active
n231=  MemoServ
n232=  .MemoServ Help:memoserv help | $report(Getting help from MemoServ).active
n233=  .-
n234=  .Send Memos
n235=  ..Send Memo to User:memoserv send $$?="Memo to who? (their nick)" $$?="What do you want the memo to say?" | $report(Sending memo to user).active
n236=  ..Send Memo to OP's:memoserv send $$?="Enter Channel" $$?="What do you want the memo to say?" | $report(Sending memo to OP's).active
n237=  ..Send Memo to SOP's:memoserv sendsop $$?="Enter Channel" $$?="What do you want the memo to say?" | $report(Sending memo to SOP's).active
n238=  .-
n239=  .Read Memos
n240=  ..List Memo's:memoserv list | $report(Getting memo list from MemoServ).active
n241=  ..Read Memo:memoserv read $$?="What number memo do you wanna read?" | $report(Reading memos from MemoServ).active
n242=  ..-
n243=  ..Read Memo 1:memoserv read 1 | $report(Reading memo 1 from MemoServ).active
n244=  ..Read Memo 2:memoserv read 2 | $report(Reading memo 2 from MemoServ).active
n245=  ..Read Memo 3:memoserv read 3 | $report(Reading memo 3 from MemoServ).active
n246=  ..Read Memo 4:memoserv read 4 | $report(Reading memo 4 from MemoServ).active
n247=  ..Read Memo 5:memoserv read 5 | $report(Reading memo 5 from MemoServ).active
n248=  ..More:memoserv read $$?="What number memo do you wanna read?" | $report(Reading memos from MemoServ).active
n249=  .Delete Memos
n250=  ..Delete Memo:memoserv del $$?="What number memo do you wanna delete?" | $report(Delete memo from MemoServ).active
n251=  ..UnDelete Memo:memoserv undel $$?="What number memo do you wanna undelete?" | $report(Undelete memo from MemoServ).active
n252=  ..-
n253=  ..Delete Memo 1:memoserv del 1 | $report(Delete memo 1 from MemoServ).active
n254=  ..Delete Memo 2:memoserv del 2 | $report(Delete memo 2 from MemoServ).active
n255=  ..Delete Memo 3:memoserv del 3 | $report(Delete memo 3 from MemoServ).active
n256=  ..Delete Memo 4:memoserv del 4 | $report(Delete memo 4 from MemoServ).active
n257=  ..Delete Memo 5:memoserv del 5 | $report(Delete memo 5 from MemoServ).active
n258=  ..-
n259=  ..Delete All:memoserv DEL ALL | $report(Delete all memos from MemoServ).active
n260=  ..-
n261=  ..Purge Memos:memoserv PURGE | $report(Purge memos from MemoServ).active
n262=  .Memo Forwarding
n263=  ..Check Status:memoserv forward | $report(Checking forwarding status on MemoServ).active
n264=  ..Forward Memos To:memoserv forward $$?="Nick to forward to?" $$?*="Enter your password:" | $report(Forwarding memos on MemoServ).active
n265=  ..Turn Forwarding Off:memoserv forward - | $report(Discontinueing memo forwarding on MemoServ).active
n266=  ;ss.pop.serverHelp
n267=  ;.Help:.msg HelpServ help
n268=  -
n269=  AutoJoin Setup
n270=  .Toggle AutoJoin Setting $chr(91) $key(settings,autojoin) $chr(93)
n271=  ..ON:keywrite settings autojoin ON | setupshow Auto Join $key(settings,autojoin)
n272=  ..OFF:keywrite settings autojoin OFF | setupshow Auto Join $key(settings,autojoin)
n273=  ..SPEED:keywrite settings autojoin SPEED | setupshow Auto Join $key(settings,autojoin)
n274=  .-
n275=  .Run AutoJoin:{ if ($key(settings,autojoin) == SPEED) { .raw join $key(settings,autojoinspeed) } | else { autojoin } }
n276=  .-
n277=  .Current AutoJoin Rooms
n278=  ..Click Below To Join:/halt
n279=  ..-
n280=  .. $+ $gettok($key(settings,autojoinrooms),1,44) $+ :join $gettok($key(settings,autojoinrooms),1,44)
n281=  .. $+ $gettok($key(settings,autojoinrooms),2,44) $+ :join $gettok($key(settings,autojoinrooms),2,44)
n282=  .. $+ $gettok($key(settings,autojoinrooms),3,44) $+ :join $gettok($key(settings,autojoinrooms),3,44)
n283=  .. $+ $gettok($key(settings,autojoinrooms),4,44) $+ :join $gettok($key(settings,autojoinrooms),4,44)
n284=  .. $+ $gettok($key(settings,autojoinrooms),5,44) $+ :join $gettok($key(settings,autojoinrooms),5,44)
n285=  .. $+ $gettok($key(settings,autojoinrooms),6,44) $+ :join $gettok($key(settings,autojoinrooms),6,44)
n286=  .. $+ $gettok($key(settings,autojoinrooms),7,44) $+ :join $gettok($key(settings,autojoinrooms),7,44)
n287=  .. $+ $gettok($key(settings,autojoinrooms),8,44) $+ :join $gettok($key(settings,autojoinrooms),8,44)
n288=  .. $+ $gettok($key(settings,autojoinrooms),9,44) $+ :join $gettok($key(settings,autojoinrooms),9,44)
n289=  .. $+ $gettok($key(settings,autojoinrooms),10,44) $+ :join $gettok($key(settings,autojoinrooms),10,44)
n290=  .-
n291=  .Add A Room
n292=  ..Any Room:{
n293=    var %temp.add.room = $input(Enter The Room Name,egi,StrangeScript needs input)
n294=    if (%temp.add.room != $null) {
n295=      if ($numtok($key(settings,autojoinrooms),44) < 10) { 
n296=        if ($chr(37) isin %temp.add.room) { keywrite settings autojoinrooms $addtok($key(settings,autojoinrooms),$chr(37) $ $+ + $remove(%temp.add.room,$chr(37)),44) }
n297=        if ($chr(37) !isin %temp.add.room) { keywrite settings autojoinrooms $addtok($key(settings,autojoinrooms),%temp.add.room,44) }
n298=        $report(AutoJoin,%temp.add.room,Add,to your autojoin).active
n299=      }
n300=      if ($numtok($key(settings,autojoinrooms),44) > 10) { $report(AutoJoin,%temp.add.room,Failed,Your AutoJoin can only contain 10 entries so delete some).active }
n301=    }
n302=  }
n303=  ..Current Room:{
n304=    if (%temp.add.room != $null) {
n305=      if ($numtok($key(settings,autojoinrooms),44) < 10) { 
n306=        if ($chr(37) isin #) { keywrite settings autojoinrooms $addtok($key(settings,autojoinrooms),$chr(37) $ $+ + $remove(#,$chr(37)),44) }
n307=        if ($chr(37) !isin #) { keywrite settings autojoinrooms $addtok($key(settings,autojoinrooms),#,44) }
n308=        $report(AutoJoin,%temp.add.room,Add,to your autojoin).active
n309=      }
n310=      if ($numtok($key(settings,autojoinrooms),44) > 10) { $report(AutoJoin,%temp.add.room,Failed,Your AutoJoin can only contain 10 entries so delete some).active }
n311=    }
n312=  }
n313=  .Delete A Room
n314=  ..Click Below To Delete:/halt
n315=  ..-
n316=  .. $+ $gettok($key(settings,autojoinrooms),1,44) $+ :keywrite settings autojoinrooms $deltok($key(settings,autojoinrooms),1,44)
n317=  .. $+ $gettok($key(settings,autojoinrooms),2,44) $+ :keywrite settings autojoinrooms $deltok($key(settings,autojoinrooms),2,44)
n318=  .. $+ $gettok($key(settings,autojoinrooms),3,44) $+ :keywrite settings autojoinrooms $deltok($key(settings,autojoinrooms),3,44)
n319=  .. $+ $gettok($key(settings,autojoinrooms),4,44) $+ :keywrite settings autojoinrooms $deltok($key(settings,autojoinrooms),4,44)
n320=  .. $+ $gettok($key(settings,autojoinrooms),5,44) $+ :keywrite settings autojoinrooms $deltok($key(settings,autojoinrooms),5,44)
n321=  .. $+ $gettok($key(settings,autojoinrooms),6,44) $+ :keywrite settings autojoinrooms $deltok($key(settings,autojoinrooms),6,44)
n322=  .. $+ $gettok($key(settings,autojoinrooms),7,44) $+ :keywrite settings autojoinrooms $deltok($key(settings,autojoinrooms),7,44)
n323=  .. $+ $gettok($key(settings,autojoinrooms),8,44) $+ :keywrite settings autojoinrooms $deltok($key(settings,autojoinrooms),8,44)
n324=  .. $+ $gettok($key(settings,autojoinrooms),9,44) $+ :keywrite settings autojoinrooms $deltok($key(settings,autojoinrooms),9,44)
n325=  .. $+ $gettok($key(settings,autojoinrooms),10,44) $+ :keywrite settings autojoinrooms $deltok($key(settings,autojoinrooms),10,44)
n326=  .Create Instant Autojoin:insta.aj
n327=  -
n328=}
