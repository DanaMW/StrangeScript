[aliases]
n0=/opall {
n1=  keywrite settings rumble OFF
n2=  var %tmp.quit = 1
n3=  while (%tmp.quit <= $chan(0)) { 
n4=    .chanserv op $chan(%tmp.quit) $me
n5=    inc %tmp.quit 
n6=    if (%tmp.quit > $chan(0)) { break } 
n7=  }
n8=}
n9=ssl {
n10=  if ($1 == $null) || ($2 == $null) || ($3 == $null) { $report(Error,SSL,Format: /ssl <network> <server> <port>).active | halt }
n11=  if (%ssl. [ $+ [ $1 ] ] == $null) { set %ssl. $+ $1 $rand(9000,9999) $+ , $+ $2 $+ , $+ $3 }
n12=  if ($portfree($gettok(%ssl. [ $+ [ $1 ] ] ,1,46)) == $true) {
n13=    set %ssl. $+ $1 $rand(9000,9999) $+ , $+ $2 $+ , $+ $3
n14=    ; if ($master(settings,cygwin.use) == ON) { }
n15=    run -n $mircdirstunnelw.exe -c -d localhost: $+ $gettok(%ssl. [ $+ [ $1 ] ] ,1,46) -r $2 $+ : $+ $3 
n16=    if ($server == $null) { .server localhost $gettok(%ssl. [ $+ [ $1 ] ] ,1,46) }
n17=    else { .server -m localhost $gettok(%ssl. [ $+ [ $1 ] ] ,1,46) }
n18=  }
n19=  else { 
n20=    if ($server == $null) { .server localhost $gettok(%ssl. [ $+ [ $1 ] ] ,1,46) }
n21=    else { .server -m localhost $gettok(%ssl. [ $+ [ $1 ] ] ,1,46) }
n22=  }
n23=  else { 
n24=    if ($server == $null) { .server localhost $gettok(%ssl. [ $+ [ $1 ] ] ,1,46) }
n25=    else { .server -m localhost $gettok(%ssl. [ $+ [ $1 ] ] ,1,46) }
n26=  }
n27=}
n28=fix.mode {
n29=  mode $me +iowghrpaAsNWt
n30=  mode $me +s +kcFfjvGenq
n31=  mode $me
n32=  return
n33=}
n34=report.modes {
n35=  var %cmp = $remove($chanmodes,$chr(44))
n36=  var %cmpc = $len($remove($chanmodes,$chr(44)))
n37=  .write -c report_modes.txt
n38=  var %tmp.c = 1
n39=  while {%tmp.c <= %cmpc) {
n40=    echo -at ... $+ $mid(%cmp,%tmp.c,1)
n41=    ;.write -a report_modes.txt ... $+ $mid($remove($chanmodes,$chr(44)),1,1)
n42=    ;.write -a report_modes.txt .... $+ + $+ $mid(%cmp,%tmp.c,1) $+ :mode # + $+ $mid(%cmp,%tmp.c,1)
n43=    ;.write -a report_modes.txt .... $+ - $+ $mid(%cmp,%tmp.c,1) $+ :mode # - $+ $mid(%cmp,%tmp.c,1)
n44=    inc %tmp.c
n45=    if {%tmp.c > %cmpc) { break }
n46=  }
n47=  return below
n48=}
n49=key {
n50=  ;1=network 2=room 3=key
n51=  var %tmp.fold = $textdir $+ $network $+ .ini
n52=  return $readini(%tmp.fold,$1,$2)
n53=}
n54=master {
n55=  ;1=network 2=room 3=key
n56=  var %tmp.fold = $textdir $+ ScriptInfo.ini
n57=  return $readini(%tmp.fold,$1,$2)
n58=}
n59=keywrite {
n60=  ;keywrite Room key value
n61=  if ($1 == $null) || ($2 == $null) { $report(Error In KeyWrite: Trying to delete key,$1-).active | return }
n62=  var %tmp.fold = $textdir $+ $network $+ .ini
n63=  if ($3 != $null) { .writeini %tmp.fold $1 $2 $3- }
n64=  else { .writeini %tmp.fold $1 $2 "" }
n65=  return
n66=}
n67=masterwrite {
n68=  ;masterwrite Room key value
n69=  if ($1 == $null) || ($2 == $null) { $report(Error In MasterWrite: Trying to delete key,$1-).active | return }
n70=  var %tmp.fold = $textdir $+ ScriptInfo.ini
n71=  if ($3 != $null) { .writeini %tmp.fold $1 $2 $3- }
n72=  else { .writeini %tmp.fold $1 $2 "" | $report(MasterWrite: Clearing key,$1-).active }
n73=  return
n74=}
n75=smile {
n76=  if ($master(settings,smile) == $null) {
n77=    var %tmp.sm = 04 $+ $chr(125) $+ 12 $+ ; $+ 08 $+ - $+ 04 $+ $chr(41)
n78=    var %tmp.sm $hex.ini(%tmp.sm)
n79=    masterwrite settings smile %tmp.sm
n80=  }
n81=  unset %tmp.sm
n82=  return $unhex.ini($master(settings,smile))
n83=}
n84=is.room { if ($chr(35) isin $active) { return Room $chr(91) # $chr(93) Options } }
n85=/hex.ini {
n86=  unset %hex.*
n87=  set %hex.word $replace($1-,$chr(32),$chr(95))
n88=  set %n 1
n89=  while (%n <= $len(%hex.word)) {
n90=    set %hex.char $asc($mid(%hex.word,%n,1))
n91=    set %hex.val1 $int($calc(%hex.char / 16))
n92=    set %hex.val2 $calc($calc(%hex.char - (%hex.val1 * 16)))
n93=    if (%hex.val1 == 10) { set %hex.val1 A }
n94=    if (%hex.val1 == 11) { set %hex.val1 B }
n95=    if (%hex.val1 == 12) { set %hex.val1 C }
n96=    if (%hex.val1 == 13) { set %hex.val1 D }
n97=    if (%hex.val1 == 14) { set %hex.val1 E }
n98=    if (%hex.val1 == 15) { set %hex.val1 F }
n99=    if (%hex.val2 == 10) { set %hex.val2 A }
n100=    if (%hex.val2 == 11) { set %hex.val2 B }
n101=    if (%hex.val2 == 12) { set %hex.val2 C }
n102=    if (%hex.val2 == 13) { set %hex.val2 D }
n103=    if (%hex.val2 == 14) { set %hex.val2 E }
n104=    if (%hex.val2 == 15) { set %hex.val2 F }
n105=    set %hex.char %hex.val1 $+ %hex.val2
n106=    set %hex.comp %hex.comp $+ %hex.char
n107=    inc %n
n108=    if (%n > $len(%hex.word)) { break }
n109=  }
n110=  .timer 1 1 unset %hex.* %n
n111=  return %hex.comp
n112=}
n113=/unhex.ini {
n114=  unset %hex.*
n115=  set %hex.word $1-
n116=  set %hex.word $remove(%hex.word,',^)
n117=  set %n 1
n118=  while (%n <= $len(%hex.word)) {
n119=    set %hex.char $mid(%hex.word,%n,1)
n120=    if (%hex.char == A) { set %hex.char 10 }
n121=    if (%hex.char == B) { set %hex.char 11 }
n122=    if (%hex.char == C) { set %hex.char 12 }
n123=    if (%hex.char == D) { set %hex.char 13 }
n124=    if (%hex.char == E) { set %hex.char 14 }
n125=    if (%hex.char == F) { set %hex.char 15 }
n126=    set %hex.val $calc(16 * %hex.char)
n127=    inc %n
n128=    set %hex.char $mid(%hex.word,%n,1)
n129=    if (%hex.char == A) { set %hex.char 10 }
n130=    if (%hex.char == B) { set %hex.char 11 }
n131=    if (%hex.char == C) { set %hex.char 12 }
n132=    if (%hex.char == D) { set %hex.char 13 }
n133=    if (%hex.char == E) { set %hex.char 14 }
n134=    if (%hex.char == F) { set %hex.char 15 }
n135=    set %hex.val $calc(%hex.val + %hex.char)
n136=    set %hex.val $chr(%hex.val)
n137=    set %hex.comp %hex.comp $+ %hex.val
n138=    inc %n
n139=    if (%n > $len(%hex.word)) { break }
n140=  }
n141=  .timer 1 1 unset %hex.* %n
n142=  return $replace(%hex.comp,$chr(95),$chr(160))
n143=}
n144=spell.check {
n145=  return $report(SP)  $+ $1-
n146=}
n147=AutoOwner { return $textdir $+ AutoOwner. $+ $network $+ .ini }
n148=AutoOp { return $textdir $+ AutoOp. $+ $network $+ .ini }
n149=bluetop topic # $blue($1-)
n150=bluetalk say $blue($1-)
n151=blue {
n152=  var %bluetop = $bluestart
n153=  var %n = $len($1-)
n154=  var %n2 = 1
n155=  while (%n2 <= %n) {
n156=    var %bluetop = %bluetop $blueletter($mid($1-,%n2,1))
n157=    inc %n2
n158=    if (%n2 > %n) { break }
n159=  }
n160=  var %bluetop = %bluetop $blueend
n161=  return %bluetop
n162=}
n163=bluestart { return 09..:]02,02 }
n164=blueend { return 09[:.. }
n165=blueappend { return 12:09,99 }
n166=blueletter { return 12(09 $+ $1 $+ 01) }
n167=
n168=tubetop tubes $iif($1 == $null,tubEweRKs,$1-) | topic # %tubewerks
n169=tubetalk tubes $1- | say %tubewerks
n170=tubeart {
n171=  %n = 1
n172=  while (%n <= 6) {
n173=    set %tubewerks [ [ $tubeselect ] ]
n174=    set %tubewerks $gettok(%tubewerks,1,32) $+ * $+ $gettok(%tubewerks,2,32)
n175=    echo -a %tubewerks
n176=    inc %n
n177=  }
n178=  %n = 5
n179=  while (%n > 0) {
n180=    set %tubewerks [ [ $tubeselect ] ]
n181=    set %tubewerks $gettok(%tubewerks,1,32) $+ * $+ $gettok(%tubewerks,2,32)
n182=    echo -a %tubewerks
n183=    dec %n
n184=  }
n185=  %n = 2
n186=  while (%n <= 6) {
n187=    set %tubewerks [ [ $tubeselect ] ]
n188=    set %tubewerks $gettok(%tubewerks,1,32) $+ * $+ $gettok(%tubewerks,2,32)
n189=    echo -a %tubewerks
n190=    inc %n
n191=  }
n192=  %n = 5
n193=  while (%n > 0) {
n194=    set %tubewerks [ [ $tubeselect ] ]
n195=    set %tubewerks $gettok(%tubewerks,1,32) $+ * $+ $gettok(%tubewerks,2,32)
n196=    echo -a %tubewerks
n197=    dec %n
n198=  }
n199=}
n200=tubes { set %tubewerks [ [ $tubechoose ] ] | set %tubewerks $gettok(%tubewerks,1,32) $1- $gettok(%tubewerks,2,32) }
n201=tubechoose return $chr(36) $+ tubes $+ $rand(1,6)
n202=tubeselect return $chr(36) $+ tubes $+ %n
n203=tubes1 { return 12,2*9,3*13,6*11,10*4,5*8,7 4,5*11,10*13,6*9,3*12,2* }
n204=tubes2 { return 9,3*13,6*11,10*4,5*8,7*12,2 8,7*4,5*11,10*13,6*9,3* }
n205=tubes3 { return 13,6*11,10*4,5*8,7*12,2*9,3 12,2*8,7*4,5*11,10*13,6* }
n206=tubes4 { return 11,10*4,5*8,7*12,2*9,3*13,6 9,3*12,2*8,7*4,5*11,10* }
n207=tubes5 { return 4,5*8,7*12,2*9,3*13,6*11,10 13,6*9,3*12,2*8,7*4,5* }
n208=tubes6 { return 8,7*12,2*9,3*13,6*11,10*4,5 11,10*13,6*9,3*12,2*8,7* }
n209=;parse.setup {
n210=;  if ($network == $null) { quit Major error in parse.setup | halt }
n211=;  $report(Parsing server setup information below).status
n212=;  if (*supported* iswm $1-) { var %tmp.ps.info = $remove($2-,are supported by this server) }
n213=;  if (*available* iswm $1-) { var %tmp.ps.info = $remove($2-,are available on this server) }
n214=;  var %tmp.fold = $textdir $+ $network $+ .ini
n215=;  var %tmp.ps = 1
n216=;  while (%tmp.ps <= $numtok(%tmp.ps.info,32)) {
n217=;    if (*=* iswm $gettok(%tmp.ps.info,%tmp.ps,32)) { .writeini %tmp.fold parse.setup $gettok($gettok(%tmp.ps.info,%tmp.ps,32),1,61) $gettok($gettok(%tmp.ps.info,%tmp.ps,32),2,61) }
n218=;    else { .writeini %tmp.fold parse.setup $gettok(%tmp.ps.info,%tmp.ps,32) $gettok(%tmp.ps.info,%tmp.ps,32) }
n219=;    inc %tmp.ps
n220=;    if (%tmp.ps > $numtok(%tmp.ps.info,32)) { break }
n221=;  }
n222=;  return
n223=;}
n224=/halfop { 
n225=  if ($1 == ?) && ($key(#,lastin) ison $chan) { .raw mode # +h $key(#,lastin) | return }
n226=  if ($1 != ?) && ($1 != $null) { .raw mode # +hhh $1 $2 $3 }
n227=  if ($1 != ?) && ($1 == $null) {
n228=    if ($modespl == $null) { var %tmp.num = 1 }
n229=    else { var %tmp.num = $modespl }
n230=    var %tmp.count = 1
n231=    var %tmp.total = 1
n232=    while (%tmp.count <= $numtok($snicks,44)) {
n233=      var %tmp.user = $addtok(%tmp.user,$snick(#,%tmp.count),44)
n234=      if (%tmp.total == %tmp.num) {
n235=        if ($network == Dalnet) { .raw mode # $str(+h,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32)) }
n236=        else { .raw mode # + $+ $str(h,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32)) }
n237=        unset %tmp.user
n238=        var %tmp.total = 0
n239=      }
n240=      inc %tmp.total
n241=      inc %tmp.count
n242=      if (%tmp.count > $snick(#,0)) { break }
n243=    }
n244=    if ($network == Dalnet) { .raw mode # $str(+h,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32)) }
n245=    else { .raw mode # + $+ $str(h,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32)) }
n246=    return
n247=  }
n248=}
n249=/halfdop {
n250=  if ($1 == ?) && ($key(#,lastin) ison $chan) { .raw mode # -h $key(#,lastin) ]
n251=  }
n252=  if ($1 != ?) && ($1 != $null) { .raw mode # -hhh $1 $2 $3 }
n253=  if ($1 != ?) && ($1 == $null) {
n254=    if ($key(settings,ircx) == ON) { .raw access # clear owner }
n255=    if ($modespl == $null) { var %tmp.num = 1 }
n256=    else { var %tmp.num = $modespl }
n257=    var %tmp.count = 1
n258=    var %tmp.total = 1
n259=    while (%tmp.count <= $numtok($snicks,44)) {
n260=      var %tmp.user = $addtok(%tmp.user,$snick(#,%tmp.count),44)
n261=      if (%tmp.total == %tmp.num) {
n262=        if ($network == Dalnet) { .raw mode # $str(-h,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32)) }
n263=        else { .raw mode # - $+ $str(h,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32)) }
n264=        unset %tmp.user
n265=        var %tmp.total = 0
n266=      }
n267=      inc %tmp.total
n268=      inc %tmp.count
n269=      if (%tmp.count > $snick(#,0)) { break }
n270=    }
n271=    if ($network == Dalnet) { .raw mode # $str(-h,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32)) }
n272=    else { .raw mode # - $+ $str(h,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32)) }
n273=  }
n274=}
n275=/hidden.rooms {
n276=  if ($chan($1).mode == $null) { $report(Speed Error,/hidden.rooms,$1,room modes null - Rechecking...).chan | return }
n277=  if (*u* iswm $chan($1).mode) { names $1 }
n278=  if (*x* iswm $chan($1).mode) { names $1 }
n279=  return
n280=}
n281=display {
n282=  if ($exists(temp.txt) == $true) { remove temp.txt }
n283=  run cmd.exe /c dir/a " $+ $1- $+ " > temp.txt
n284=  msg # $report(Displaying the contents of $1-)
n285=  .timer 1 2 display.play
n286=  return
n287=}
n288=display.play {
n289=  if ($lines(temp.txt) == 0) { msg # $report(Directory or file doesnt exist) | .remove temp.txt | return }
n290=  .timer 1 1 .play # temp.txt 50
n291=  return
n292=}
n293=disks { disk }
n294=disk {
n295=  msg # $report(Disks,this system has $disk(0) disks.)
n296=  var %tmpd 1
n297=  ;ADD THIS $disk(%tmpd).label
n298=  while (%tmpd <= $disk(0)) {
n299=    ;$report(Disks,this system has $disk(0) disks.)
n300=    ;$len($disk(2).size) $round($calc($disk(2).size / 1024 / 1024 / 1024),1)
n301=    if ($len($disk(%tmpd).size) >= 10) { msg # $report(Disk %tmpd,$disk(%tmpd).path,Type: $disk(%tmpd).type,Size: $round($calc($disk(%tmpd).size / 1024 / 1024 / 1024),1) gigs,Free: $round($calc($disk(%tmpd).free / 1024 / 1024 / 1024),1) gigs) }
n302=    elseif ($len($disk(%tmpd).size) >= 7) && ($len($disk(%tmpd).size) < 10) { msg # $report(Disk %tmpd,$disk(%tmpd).path,Type: $disk(%tmpd).type,Size: $round($calc($disk(%tmpd).size / 1024 / 1024),1) megs,Free: $round($calc($disk(%tmpd).free / 1024 / 1024),1) megs) }
n303=    elseif ($len($disk(%tmpd).size) >= 4) && ($len($disk(%tmpd).size) < 7) { msg # $report(Disk %tmpd,$disk(%tmpd).path,Type: $disk(%tmpd).type,Size: $round($calc($disk(%tmpd).size / 1024),1) kb,Free: $round($calc($disk(%tmpd).free / 1024),1) kb) }
n304=    else { msg # $report(Disk %tmpd,$remove($disk(%tmpd).path,\),Type: $disk(%tmpd).type,Size: $disk(%tmpd).size k,Free: $disk(%tmpd).free k)
n305=    }
n306=    ;$round($calc($disk(2).size / 1024 / 1024 / 1024 ),2) gig
n307=    inc %tmpd
n308=  }
n309=}
n310=botmenu { if ($exists($mircdirMBot\mirc.exe) == $true) { return Bot Menu } }
n311=/menu.kick { 
n312=  if ($1 == ?) && ($key(#,lastin) ison $chan) { .raw kick # $key(#,lastin) | return }
n313=  if ($1 != ?) && ($1 != $null) { .raw kick # $1 }
n314=  if ($1 != ?) && ($1 == $null) {
n315=    var %tmp.count = 1
n316=    while (%tmp.count <= $snick(#,0)) {
n317=      .kick # $snick(#,%tmp.count) $unhex.ini($master(settings,kick.message))
n318=      inc %tmp.count
n319=      if (%tmp.count > $snick(#,0)) { break }
n320=    }
n321=    ;else { .raw mode # + $+ $str(o,$numtok(%tmp.user,44)) $replace(%tmp.user,$chr(44),$chr(32)) }
n322=    return
n323=  }
n324=}
n325=/menu.kick1 { 
n326=  var %tmp.count = 1
n327=  while (%tmp.count <= $snick(#,0)) {
n328=    .kick # $snick(#,%tmp.count) $1-
n329=    inc %tmp.count
n330=    if (%tmp.count > $snick(#,0)) { break }
n331=  }
n332=  return
n333=}
n334=/songs { return $master(settings,songs) }
n335=/check.room.vars {
n336=  if ($key(#,setupauto) == $null) { keywrite # setupauto OFF }
n337=  if ($key(#,modelock) == $null) { keywrite # modelock OFF }
n338=  if ($key(#,topiclock) == $null) { keywrite # topiclock OFF } 
n339=  if ($key(#,kicklock) == $null) { keywrite # kicklock OFF }
n340=  if ($key(#,ban.lock) == $null) { keywrite # ban.lock OFF }
n341=  if ($key(#,GateScan) == $null) { keywrite # GateScan OFF }
n342=  if ($key(#,whoisonknock) == $null) { keywrite # whoisonknock OFF }
n343=  if ($key(#,unmaskonknock) == $null) { keywrite # unmaskonknock OFF }
n344=  if ($key(#,deop) == $null) { keywrite # deop OFF }
n345=  if ($key(#,modemaster) == $null) { keywrite # modemaster OFF }
n346=  return
n347=}
n348=status {
n349=  notice # $report(Status Report) - $report(Servers:,$null,$scid(0))
n350=  notice # $report(Total User Sockets:,$null,$sock(*,0)) - $report(Type: BNC:,$null,$sock(BNC*,0)) - $report(Boom:,$null,$sock(@Boom*,0)) - $report(Gate:,$null,$sock(@Gate*,0)) - $report(Split:,$null,$sock(@Split*,0)) - $report(Spy:,$null,$sock(Spy*,0)) - $report(Bot:,$null,$sock(Bot*,0))
n351=}
n352=;
n353=; the below returns the network IRC URL for connecting.
n354=;
n355=bAdd {
n356=  if ($1 == $null) { var %tmp.btad $network }
n357=  else { var %tmp.btad $1 }
n358=  if (%tmp.btad == local) || (%tmp.btad == localhost) { set %bAdd irc.localdomain.net }
n359=  if (%tmp.btad == dalnet) { set %bAdd irc.dal.net }
n360=  if (%tmp.btad == undernet) { set %bAdd us.undernet.org }
n361=  if (%tmp.btad == libera.chat) { set %bAdd irc.libera.chat }
n362=  if (%tmp.btad == deepnet) { set %bAdd irc.deepnet.chat }
n363=  ;else { set %bAdd $$?="Enter IRC login Address" }
n364=  return %bAdd
n365=}
n366=/ssipsave {
n367=  ;.msg %boss $report($1-)
n368=  var %tmp.x = $gettok($mircdir,1,92) $+ $chr(92) $+ $gettok($mircdir,2,92) $+ $chr(92) $+ text\IPTracker.txt
n369=  var %tmp.xx = $gettok($mircdir,1,92) $+ $chr(92) $+ $gettok($mircdir,2,92) $+ $chr(92) $+ text\LastSeen.txt
n370=  if ($exists(%tmp.x) == $false) { set %tmp $ip | .write -c %tmp.x $me *!*@ $+ $puttok($ip,$chr(42),4,46) }
n371=  if ($exists(%tmp.xx) == $false) { set %tmp $ip | .write -c %tmp.xx $me $asctime(mmm dd yyyy) on %current.Server in #StrangeScript at $time }
n372=  if (%ssipsave != ON) { return }
n373=  if ($4 == DNS) {
n374=    var %temp1 = $1
n375=    var %temp2 = $3
n376=    goto DNS.back
n377=  }
n378=  if ($gettok($address($1,2),-1,46) isalpha) { set %awaiting.dns. [ $+ [ $address($1,2) ] ] $1 $+ , $+ $2 | dns $1 | halt }
n379=  var %temp1 = $1
n380=  var %temp2 = $myaddress2($1)
n381=  :DNS.back
n382=  var %temp3 = $read(%tmp.x,s,$1)
n383=  if (%temp3 == $null) {
n384=    echo -t $2 $sys $report(IPTracker,Not on file,SAVING,%temp1,%temp2)
n385=    .write %tmp.xx %temp1 $asctime(mmm dd yyyy) on %current.Server in $2 at $time
n386=    var %temp3 = $addtok(%temp3,%temp2,44)
n387=    .write %tmp.x %temp1 %temp3
n388=    return
n389=  }
n390=  var %tmp = $readn
n391=  if ($istok(%temp3,%temp2,44) == $true) {
n392=    echo -t $2 $sys $report(IPTracker,Already on file,SKIPPING,%temp1,%temp2)
n393=    echo -t $2 $sys $report(LastSeen,$null,$null,$read(%tmp.xx,n,%tmp))
n394=    if (%ssipsave.IP == ON) { echo -t $2 $sys $report(IPTracker,Used ips,$null,%temp3) }
n395=    if (%ssipsave.IP == STATS) { echo -st $sys $report(IPTracker,Used ips,$null,%temp3) }
n396=    .write -l $+ %tmp %tmp.xx %temp1 $asctime(mmm dd yyyy) on %current.Server in $2 at $time
n397=    ;.write -l $+ %tmp %tmp.x %temp1 %temp3
n398=    return
n399=  }
n400=  if ($istok(%temp3,%temp2,44) == $false) {
n401=    echo -t $2 $sys $report(IPTracker,Already on file but new ip,UPDATING,%temp1,%temp2)
n402=    echo -t $2 $sys $report(LastSeen,$null,$null,$read(%tmp.xx,n,%tmp))
n403=    if (%ssipsave.IP == ON) { echo -t $2 $sys $report(IPTracker,Used ips,$null,%temp2,%temp3) }
n404=    if (%ssipsave.IP == STATS) { echo -st $sys $report(IPTracker,Used ips,$null,%temp2,%temp3) }
n405=    if ($len(%tmp3) < 435) { var %temp3 = $addtok(%temp3,%temp2,44) | goto skip }
n406=    if ($len(%tmp3) => 435) { var %temp3 = $puttok(%temp3,%temp2,1,44) }
n407=    :skip
n408=    .write -l $+ %tmp %tmp.xx %temp1 $asctime(mmm dd yyyy) on %current.server in $2 at $time
n409=    .write -l $+ %tmp %tmp.x %temp1 %temp3
n410=    return
n411=  }
n412=}
n413=/seen { 
n414=  if ($1 == HELP) $report(Format:,/seen <nick>,last time a nick was seen and where).active
n415=  if ($1 == $null) { msg # $report(Format,$null,$null,.seen <nick>) | halt }
n416=  else { 
n417=    var %tmp.x = $gettok($mircdir,1,92) $+ $chr(92) $+ $gettok($mircdir,2,92) $+ $chr(92) $+ text\LastSeen.txt
n418=    var %tmp.xx = $read(%tmp.x,s,$2)
n419=    if (%tmp.xx == $null) { var %tmp.xx = User not in database }
n420=    msg # $report(LastSeen,$2,$null,%tmp.xx)
n421=  }
n422=}
n423=convert.temp {
n424=  if ($2 == F) {
n425=    ;var %tmp.ans2 = $1
n426=    ; var %tmp.ans = $calc((%tmp.ans2 − 32) × 5/9) 
n427=    ; $report(%tmp.ans).active
n428=  }
n429=  if ($2 == C) {
n430=    ;(35°C × 9/5) + 32 = 95°F
n431=  }
n432=}
