[script]
n0=alias Split {
n1=    if (%split.split == OFF) {
n2=      if ($1 != $null) {
n3=        if ($1 !isnum) { halt }
n4=        if ($1 == 1) && ($sock(@Split1).name == $null) { sockopen @Split1 %split.ip 6667 }
n5=        if ($1 == 2) && ($sock(@Split2).name == $null) { sockopen @Split2 %split.ip 6667 }
n6=        if ($1 == 3) && ($sock(@Split3).name == $null) { sockopen @Split3 %split.ip 6667 }
n7=        if ($1 == 4) && ($sock(@Split4).name == $null) { sockopen @Split4 %split.ip 6667 }
n8=        if ($1 == 5) && ($sock(@Split5).name == $null) { sockopen @Split5 %split.ip 6667 }
n9=        if ($1 == 6) && ($sock(@Split6).name == $null) { sockopen @Split6 %split.ip 6667 }
n10=        $report(SplitSock,$null,$null,Firing up $1 Spliters).status
n11=        return
n12=      }
n13=      if ($1 == $null) {
n14=        $report(SplitSock,$null,$null,Firing up 6 Spliters).status
n15=        if ($sock(@Split1).name == $null) { sockopen @Split1 %split.ip 6667 }
n16=        if ($sock(@Split2).name == $null) { sockopen @Split2 %split.ip 6667 }
n17=        if ($sock(@Split3).name == $null) { sockopen @Split3 %split.ip 6667 }
n18=        if ($sock(@Split4).name == $null) { sockopen @Split4 %split.ip 6667 }
n19=        if ($sock(@Split5).name == $null) { sockopen @Split5 %split.ip 6667 }
n20=        if ($sock(@Split6).name == $null) { sockopen @Split6 %split.ip 6667 }
n21=      }
n22=      return
n23=    }
n24=    if (%split.split == ON) {
n25=      if ($1 != $null) {
n26=        if ($1 !isnum) { halt }
n27=        $report(SplitSock,$null,$null,Firing up Splitter,$1).status
n28=        if ($sock(@Split1).name == $null) { sockopen @Split1 %split.ip 6667 }
n29=        if ($sock(@Split2).name == $null) { sockopen @Split2 %split.ip 6667 }
n30=        if ($sock(@Split3).name == $null) { sockopen @Split3 %split.ip 6667 }
n31=        if ($sock(@Split4).name == $null) { sockopen @Split4 %split.ip 6667 }
n32=        return
n33=      }
n34=      if ($1 == $null) {
n35=        $report(SplitSock$null,$null,Firing up 2 Spliters).status
n36=        if ($sock(@Split1).name == $null) { sockopen @Split1 %split.ip 6667 }
n37=        if ($sock(@Split2).name == $null) { sockopen @Split2 %split.ip 6667 }
n38=        if ($sock(@Split3).name == $null) { sockopen @Split3 %split.ip 6667 }
n39=        if ($sock(@Split4).name == $null) { sockopen @Split4 %split.ip 6667 }
n40=      }
n41=      return
n42=    }
n43=  }
n44=on 1:SOCKOPEN:@Split*:{
n45=  if ($sockerr > 0) {
n46=    ;$report(Sock Error,$sockname,OPEN,$sock($sockname).wsmsg).status
n47=    echo -st Sock Error $sockname OPEN $sock($sockname).wsmsg
n48=    if (route isin $sock($sockname).wsmsg) { sockclose $sockname | return }
n49=    var %temp $right($sockname,-6)
n50=    stop %temp
n51=    if ($sock(@split*).status != active) { .timer 1 0 split %temp }
n52=    return
n53=  }
n54=  sockmark $sockname %split.nick $+ $chr(91) $+ $right($sockname,-6) $+ $chr(93) $+ - $+ $rand(a,z) $+ $rand(1,9) $+ $rand(a,z) $+ $rand(1,9)
n55=  if (%split.ircx == ON) { sockwrite -n $sockname user s e r v $+ $cr $+ nick $sock($sockname).mark $+ $cr $+ ircx $+ $cr $+ join $replace(%split.chan,$chr(32),$chr(160)) }
n56=  else { sockwrite -n $sockname user s e r v $+ $cr $+ nick $sock($sockname).mark $+ $cr $+ join $replace(%split.chan,$chr(32),$chr(160)) }
n57=  $report(SplitSock,$null,$null,$sockname,has connected).status
n58=  if (%split.end == ON) { if ($timer(AMPROP3. [ $+ [ $network ] ] ) == $null) { .timerAMPROP3. $+ $network 1 120 stop } }
n59=  if (%split.split == ON) { .timerGET $+ $right($sockname,-6) 1 1 stop $right($sockname,-6) | .timerGO $+ $right($sockname,-6) 1 1 split $right($sockname,-6) }
n60=  if (%split.echo == ON) { 
n61=    if ($window($sockname).x == $null) { window -aen $sockname 0 0 @SplitSock Arial 12 /sockwrite -n @Split* }
n62=    else { window -aen $sockname 0 0 @SplitSock Arial 12 }
n63=    titlebar $sockname Connection to $sock($sockname,1).ip on port $sock($sockname,1).port
n64=    echo -h $sockname 10 [04 $+ $sockname $+ 10]  $+ $lowcol $+ Connection $sock($sockname,1).status
n65=  }
n66=}
n67=alias do.prop {
n68=  $report(Proping All Channels).active
n69=  var %tmp.split1 = 1
n70=  while (%tmp.split1 <= $numtok(%split.chan,44)) {
n71=    .timerProp1 [ $+ [ %tmp.split1 ] ] 1 $calc(2 * %tmp.split1) sockwrite -n @Split* prop $gettok(%split.chan,%tmp.split1,44) OWNERKEY %key [ $+ [ $gettok(%split.chan,%tmp.split1,44) ] ] $+ $cr $+ prop $gettok(%split.chan,%tmp.split1,44) topic : $+ $chr(91) $+ $me $+ $chr(93) %split.topic
n72=    inc %tmp.split1
n73=    if (%tmp.split1 > $numtok(%split.chan,44)) { break }
n74=  }
n75=  return
n76=}
n77=on 1:SOCKREAD:@Split*:{
n78=  if ($sockerr > 0) {
n79=    $report(Sock Error,$sockname,READ,$sock($sockname).wsmsg).status
n80=    var %temp $right($sockname,-6)
n81=    stop %temp
n82=    if ($sock(@split*).status != active) { .timer 1 0 split %temp }
n83=    return
n84=  }
n85=  :next.split.read
n86=  sockread %split.read.line
n87=  if ($sockbr == 0) { return }
n88=  if ($gettok(%split.read.line,1,32) == PING) { sockwrite -n $sockname PONG $gettok(%split.read.line,2,32) | echo -h $sockname 10 $+ $chr(91) $+ $white $+ OutBound $+ 10 $+ $chr(93) 10 $+ $chr(91) $+ $bright $+ ME $+ 10 $+ $chr(93) $+ : 04 $+ Sent Pong event of $gettok(%split.read.line,2,32) }
n89=  if ($gettok(%split.read.line,2,32) == KICK) && (*channel collision* iswm $gettok(%split.read.line,5-,32)) { 
n90=    if ($sock($sockname).mark == $gettok(%split.read.line,4,32)) { sockwrite -n $sockname join $gettok(%split.read.line,3,32) }
n91=    goto next.split.read 
n92=  }
n93=  if ($gettok(%split.read.line,2,32) == 372) { goto next.split.read }
n94=  if ($gettok(%split.read.line,2,32) == 002) { goto next.split.read }
n95=  if ($gettok(%split.read.line,2,32) == 003) { goto next.split.read }
n96=  if ($gettok(%split.read.line,2,32) == 004) { goto next.split.read }
n97=  if ($gettok(%split.read.line,2,32) == 251) { goto next.split.read }
n98=  if ($gettok(%split.read.line,2,32) == 252) { goto next.split.read }
n99=  if ($gettok(%split.read.line,2,32) == 353) {
n100=    if (%split.prop == ON) && (%split.split != ON) {
n101=      set %resock @ $+ $remove($gettok(%split.read.line,3,32),32)
n102=      if ($remove($gettok(%split.read.line,6,32),:) == %resock) {
n103=        if (%split.rand == ON) { keywrite $gettok(%split.read.line,5,32) ownerkey $newkey }
n104=        sockwrite -n $sockname prop $gettok(%split.read.line,5,32) OWNERKEY $key($gettok(%split.read.line,5,32),ownerkey) $+ $crlf $+ prop $gettok(%split.read.line,5,32) topic : $+ $chr(91) $+ $me $+ $sockname $+ $chr(93) %split.topic
n105=        ;sockwrite -n $sockname access $gettok(%split.read.line,5,32) add owner *!*@209.27.51.* $crlf prop $gettok(%split.read.line,5,32) topic : $+ $chr(91) $+ $me $+ $sockname $+ $chr(93) %split.topic
n106=        $report(Socket Prop,$sockname,Just proped,$gettok(%split.read.line,5,32),$gettok(%split.read.line,1,32),$key($gettok(%split.read.line,5,32),ownerkey)).status
n107=      }
n108=    }
n109=  }
n110=  if ($gettok(%split.read.line,2,32) == 254) { goto next.split.read }
n111=  if ($gettok(%split.read.line,2,32) == 255) { goto next.split.read }
n112=  if ($gettok(%split.read.line,2,32) == 265) { goto next.split.read }
n113=  if ($gettok(%split.read.line,2,32) == 266) { goto next.split.read }
n114=  if ($gettok(%split.read.line,2,32) == 375) { goto next.split.read }
n115=  if ($gettok(%split.read.line,2,32) == 376) { goto next.split.read }
n116=  ;if ($gettok(%split.read.line,4,32) == :qup) {
n117=  ;if ($server != $null) && ($gettok($gettok($remove(%split.read.line,$chr(58)),1,32),1,33) == $me) {
n118=  ;sockwrite -n $sockname mode $gettok(%split.read.line,3,32) +q $me $crlf prop $gettok(%split.read.line,3,32) OWNERKEY $key($gettok(%split.read.line,3,32),ownerkey) $crlf mode $gettok(%split.read.line,3,32) +isuw
n119=  ;}
n120=  ;}
n121=  ;if ($gettok(%split.read.line,4,32) == :prop) && ($gettok($gettok($remove(%split.read.line,$chr(58)),1,32),1,33) == $me) { sockwrite -n $sockname prop $gettok(%split.read.line,3,32) OWNERKEY $key($gettok(%split.read.line,3,32),ownerkey) }
n122=  ;if ($gettok(%split.read.line,4,32) == :lock) && ($gettok($gettok($remove(%split.read.line,$chr(58)),1,32),1,33) == $me) { sockwrite -n $sockname mode $gettok(%split.read.line,3,32) +isuw }
n123=  if (%split.echo == ON) {
n124=    if (*cp*chat* iswm %split.read.line) { echo -h $sockname 10 $+ $chr(91) $+ $white $+ InBound3 $+ 10 $+ $chr(93) $+  $replace($gettok(%split.read.line,2-,32),$chr(32),$chr(160)) | goto next.split.read }
n125=    if (*privmsg* iswm %split.read.line) { 
n126=      set %split.read.line $replace(%split.read.line,$chr(32),$chr(160))
n127=      echo -h $sockname 10 $+ $chr(91) $+ $white $+ InBound $+ 10 $+ $chr(93) $+ $chr(91) $+ $white $+ $remove($left(%split.read.line,$calc($pos(%split.read.line,$chr(33),1) -1)),$chr(58)) $+ 10 $+ $chr(93) $+  $remove($mid(%split.read.line,$pos(%split.read.line,$chr(58),2),$calc($calc($len(%split.read.line) +1) -$pos(%split.read.line,$chr(58),2))),$chr(58))
n128=    }
n129=    if (*privmsg* !iswm %split.read.line) { echo -h $sockname 10 $+ $chr(91) $+ $white $+ InBound2 $+ 10 $+ $chr(93) $+ $chr(91) $+ $white $+ $remove($left(%split.read.line,$calc($pos(%split.read.line,$chr(33),1) -1)),$chr(58)) $+ 10 $+ $chr(93)  $+ $replace($gettok(%split.read.line,2-,32),$chr(32),$chr(160)) }
n130=  }
n131=  goto next.split.read
n132=}
n133=alias stop {
n134=  if ($1 == $null) {
n135=    $report(SplitSock,Stopping ALL Splitter's).status
n136=    sockclose @Split*
n137=    set %tmp.split.W 1  
n138=    while (%tmp.split.W <= 21) {
n139=      window -c @Split [ $+ [ %tmp.split.W ] ]
n140=      inc %tmp.split.W
n141=      if (%tmp.split.W > 21) { break }
n142=    }
n143=    unset %tmp.split* %split.dead*
n144=    return
n145=  }
n146=  if ($1 != $null) {
n147=    sockclose @split [ $+ [ $1 ] ]
n148=    window -c @split [ $+ [ $1 ] ]
n149=    return
n150=  }
n151=}
n152=on 1:SOCKCLOSE:@Split*:{
n153=  window -c $sockname
n154=  $report(SockClose,$null,$null,Remote closed Socket,$right($sockname,-6)).status
n155=  if ($sock(@Split*).status != active) { .timer 1 0 split $right($sockname,-6) }
n156=  return
n157=}
n158=on 1:CLOSE:@Split*:{ stop $right($target,-6) }
n159=alias splitsay { if ($1 == $null) { halt } | sockwrite -n @Split* $1- | halt }
n160=alias spliter { if ($dialog(split).x != $null) { .dialog -v split spliter } | else { .dialog -mdev split spliter } }
n161=dialog spliter {
n162=  title "Split Sockets Setup"
n163=  size -1 -1 150 105
n164=  option dbu
n165=  button "OK", 3, 120 55 20 34, ok
n166=  button "Fire", 5, 65 79 24 10
n167=  button "Kill", 6, 91 79 24 10
n168=  radio "Fire on DC ON", 7, 10 91 50 10 push
n169=  radio "Fire on DC OFF", 8, 65 91 50 10 push
n170=  edit "", 9, 10 15 10 10,
n171=  edit "", 20, 20 15 25 10,
n172=  edit "", 25, 44 15 40 10,
n173=  edit "", 10, 10 40 130 12, autohs
n174=  check "Set IRCX", 11, 10 55 50 10, push
n175=  check "Set Prop", 12, 10 67 50 10, push
n176=  check "Echo to Screen", 13, 10 79 50 10, push
n177=  text "R    Nick        Sip", 14, 10 5 60 10
n178=  text "Channels to take", 15, 10 30 60 10
n179=  edit "", 16, 70 15 70 10, autohs
n180=  text "Topic", 17, 70 5 60 10
n181=  check "Roll", 21, 65 55 24 10, push
n182=  check "Die", 22, 91 55 24 10, push
n183=  button "X", 23, 120 90 20 10,
n184=  check "Random Key", 24, 65 67 50 10, push
n185=
n186=}
n187=on *:dialog:split:init:0: {
n188=  if ($chr(37) isin %split.chan) { set %split.ircx ON }
n189=  if ($chr(37) !isin %split.chan) { set %split.ircx OFF }
n190=  if (%split.dc == ON) { did -c split 7 }
n191=  if (%split.dc == OFF) { did -c split 8 }
n192=  if (%split.max != $null) { did -o split 9 1 %split.max }
n193=  if (%split.nick != $null) { did -o split 20 1 %split.nick }
n194=  if (%split.chan != $null) { did -o split 10 1 %split.chan }
n195=  if (%split.topic != $null) { did -o split 16 1 %split.topic }
n196=  if (%split.ip != $null) { did -o split 25 1 %split.ip }
n197=  if (%split.ircx == ON) { did -c split 11 }
n198=  if (%split.ircx == OFF) { did -u split 11 }
n199=  if (%split.ircx == $null) { set %split.ircx OFF | did -u split 11 }
n200=  if (%split.prop == ON) { did -c split 12 }
n201=  if (%split.prop == OFF) { did -u split 12 }
n202=  if (%split.prop == $null) { set %split.prop OFF | did -u split 12 }
n203=  if (%split.echo == ON) { did -c split 13 }
n204=  if (%split.echo == OFF) { did -u split 13 }
n205=  if (%split.echo == $null) { set %split.echo OFF | did -u split 13 }
n206=  if (%split.split == ON) { did -c split 21 }
n207=  if (%split.split == OFF) { did -u split 21 }
n208=  if (%split.split == $null) { set %split.split OFF | did -u split 21 }
n209=  if (%split.end == ON) { did -c split 22 }
n210=  if (%split.end == OFF) { did -u split 22 }
n211=  if (%split.end == $null) { set %split.end OFF | did -u split 22 }
n212=  if (%split.rand == ON) { did -c split 24 }
n213=  if (%split.rand == OFF) { did -u split 24 }
n214=  if (%split.rand == $null) { set %split.rand OFF | did -u split 24 }
n215=  ;%split.ip
n216=}
n217=on *:dialog:split:edit:*: {
n218=  if ($did == 9) { set %split.max $did(9).text }
n219=  if ($did == 20) { set %split.nick $did(20).text }
n220=  if ($did == 25) { set %split.ip $did(25).text }
n221=  if ($did == 10) {
n222=    set %split.chan $did(10).text
n223=    if ($chr(37) isin $did(10).text) { set %split.ircx ON | did -c split 11 }
n224=    else { set %split.ircx OFF | did -u split 11 }
n225=  }
n226=  if ($did == 16) { set %split.topic $did(16).text }
n227=  ;if ($did == 18) { set %split.key $did(18).text }
n228=}
n229=on *:dialog:split:sclick:*: {
n230=  if ($did == 4) { halt }
n231=  if ($did == 5) { split | halt }
n232=  if ($did == 6) {
n233=    set %split.lock OFF
n234=    set %split.split OFF
n235=    did -u split 21
n236=    .timerGo1 off | .timerGo2 off | .timerGo3 off | .timerGo4 off | .timerGo5 off | .timerGo6 off | .timerGo7 off | .timerGo8 off
n237=    stop
n238=    halt
n239=  }
n240=  if ($did == 7) { set %split.dc ON | halt }
n241=  if ($did == 8) { set %split.dc OFF | halt }
n242=  if ($did == 11) { if (%split.ircx == ON) { set %split.ircx OFF | halt } | if (%split.ircx == OFF) { set %split.ircx ON | if ($sock(@Split*).name != $null) { sockwrite -n @split* ircx } | halt } }
n243=  if ($did == 12) { if (%split.prop == ON) { set %split.prop OFF | halt } | if (%split.prop == OFF) { set %split.prop ON | halt } }
n244=  if ($did == 13) { if (%split.echo == ON) { set %split.echo OFF | halt } | if (%split.echo == OFF) { set %split.echo ON | halt } }
n245=  if ($did == 21) { if (%split.split == ON) { set %split.split OFF | halt } | if (%split.split == OFF) { set %split.split ON | halt } }
n246=  if ($did == 22) { if (%split.end == ON) { set %split.end OFF | halt } | if (%split.end == OFF) { set %split.end ON | halt } }
n247=  if ($did == 23) { do.prop }
n248=  if ($did == 24) { if (%split.rand == ON) { set %split.rand OFF | halt } | if (%split.rand == OFF) { set %split.rand ON | halt } }
n249=}
