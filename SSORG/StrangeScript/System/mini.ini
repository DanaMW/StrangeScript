[script]
n0==============================================================
n1=;=============================================================
n2=alias small.server {
n3=  if ($1 == $null) { sockopen @SmallServ $$?="Address of Server" $$?="Port to connect to" }
n4=  if ($1 != $null) && ( $2 == $null) { sockopen @SmallServ $1 6667 }
n5=  if ($1 != $null) && ( $2 != $null) { sockopen @SmallServ $1 $2 }
n6=}
n7=on 1:SOCKOPEN:@SmallServ:{
n8=  if ($sockerr > 0) { $stecho $white $+ Sock Error: $bright $+ OPEN $highcol $+ $sockname $lowcol $+ $sock($sockname).wserr $sock($sockname).wsmsg | return }
n9=  .window -ael10 @MiniServ 
n10=  .titlebar @MiniServ $chr(91) $+ $chr(160) $+ Server: $sock(@SmallServ).ip $+ $chr(160) $+ $chr(93) $chr(91) $+ $chr(160) $+ Room: %mini.room $+ $chr(160) $+ $chr(93)
n11=  sockwrite -n $sockname user $rand(A,Z) $+ $rand(A,Z) $+ $rand(1,9) $+ $rand(1,9) $+ $rand(1,9) $+ $rand(1,9) $+ $rand(1,9) $+ $rand(1,9) Sock@Strange.com $rand(A,Z) $+ $rand(A,Z) $+ $rand(1,9) $+ $rand(1,9) $rand(A,Z) $+ $rand(A,Z) $+ $rand(1,9) $+ $rand(1,9) $+ $rand(1,9) $+ $rand(1,9) $+ $rand(1,9) $+ $rand(1,9)
n12=  sockwrite -n $sockname nick Shifty
n13=}
n14=on 1:SOCKREAD:@SmallServ:{
n15=  if ($sockerr > 0) { $stecho $white $+ Sock Error: $bright $+ READ $highcol $+ $sockname $lowcol $+ $sock($sockname).wserr $sock($sockname).wsmsg | return }
n16=  :next.mini.read
n17=  .titlebar @MiniServ $chr(91) $+ $chr(160) $+ Server: $sock(@SmallServ).ip $+ $chr(160) $+ $chr(93) $chr(91) $+ $chr(160) $+ Room: %mini.room $+ $chr(160) $+ $chr(93)
n18=  sockread %mini.read.line
n19=  if ($sockbr == 0) { return }
n20=  if ($gettok(%mini.read.line,1,32) == PING) { sockwrite -n $sockname PONG $gettok(%mini.read.line,2,32) | echo -t @MiniServ Sent PONG event $gettok(%mini.read.line,2,32) | goto next.mini.read }
n21=  if (353 isin %mini.read.line) { set %mini.names %mini.read.line | /Mini.Put.Names }
n22=  if (372 isin %mini.read.line) { goto next.mini.read }
n23=  if (421 isin %mini.read.line) { goto next.mini.read }
n24=  if (mode isin %mini.read.line) && (%mini.room != $null) { .timerMNN 1 1 sockwrite -n @SmallServ names %mini.room }
n25=  if (join isin %mini.read.line) && (%mini.room != $null) { .timerMNN 1 1 sockwrite -n @SmallServ names %mini.room }
n26=  if (part isin %mini.read.line) && (%mini.room != $null) { .timerMNN 1 1 sockwrite -n @SmallServ names %mini.room }
n27=  if (kick isin %mini.read.line) && (%mini.room != $null) { .timerMNN 1 1 sockwrite -n @SmallServ names %mini.room }
n28=  if (quit isin %mini.read.line) && (%mini.room != $null) { .timerMNN 1 1 sockwrite -n @SmallServ names %mini.room }
n29=  if (*cp*chat* iswm %mini.read.line) { echo -h @MiniServ 10 $+ $chr(91) $+ $white $+ InBound3 $+ 10 $+ $chr(93) $+  $replace($gettok(%mini.read.line,2-,32),$chr(32),$chr(160)) | goto next.mini.read }
n30=  if (*privmsg* iswm %mini.read.line) { 
n31=    set %mini.read.line $replace(%mini.read.line,$chr(32),$chr(160))
n32=    echo -h @MiniServ 10 $+ $chr(91) $+ $white $+ InBound $+ 10 $+ $chr(93) $+ $chr(91) $+ $white $+ $remove($left(%mini.read.line,$calc($pos(%mini.read.line,$chr(33),1) -1)),$chr(58)) $+ 10 $+ $chr(93) $+  $remove($mid(%mini.read.line,$pos(%mini.read.line,$chr(58),2),$calc($calc($len(%mini.read.line) +1) -$pos(%mini.read.line,$chr(58),2))),$chr(58))
n33=  }
n34=  if (*privmsg* !iswm %mini.read.line) { echo -h @MiniServ 10 $+ $chr(91) $+ $white $+ InBound2 $+ 10 $+ $chr(93) $+ $chr(91) $+ $white $+ $remove($left(%mini.read.line,$calc($pos(%mini.read.line,$chr(33),1) -1)),$chr(58)) $+ 10 $+ $chr(93)  $+ $replace($gettok(%mini.read.line,2-,32),$chr(32),$chr(160)) }
n35=  goto next.mini.read
n36=}
n37=;on 1:INPUT:@MiniServ:{ sockwrite -n @SmallServ $replace($1-,$chr(32),$chr(160)) }
n38=on 1:INPUT:@MiniServ:{
n39=  .titlebar @MiniServ $chr(91) $+ $chr(160) $+ Server: $sock(@SmallServ).ip $+ $chr(160) $+ $chr(93) $chr(91) $+ $chr(160) $+ Room: %mini.room $+ $chr(160) $+ $chr(93)
n40=  if ($1 == /close) { sockclose @SmallServ | .window -c @miniServ | halt }
n41=  if ($1 == /quit) { unset %mini.room %mini.read.line %mini.names }
n42=  if ($1 == /msg) { sockwrite -n @SmallServ privmsg $2 : $+ $3- | Mini.Echo $2- | halt }
n43=  if ($1 == /join) { set %mini.room $2 }
n44=  if ($1 == /part) { unset %mini.room | clear -l @MiniServ }
n45=  if ($1 == /cycle) { sockwrite -n @SmallServ part %mini.room | clear -l @MiniServ | sockwrite -n @SmallServ join %mini.room | halt }
n46=  if ($1 == /server) { sockclose @SmallServ | clear -l @MiniServ | unset %mini.room %mini.read.line %mini.names | small.server $2- | halt }
n47=  if ($left($1,1) == /) { sockwrite -n @SmallServ $right($1-,-1) | Mini.Echo $1- | halt }
n48=  if ($left($1,1) != /) { sockwrite -n @SmallServ privmsg %mini.room : $+ $1- | Mini.Echo $1- | halt }
n49=  .titlebar @MiniServ $chr(91) $+ $chr(160) $+ Server: $sock(@SmallServ).ip $+ $chr(160) $+ $chr(93) $chr(91) $+ $chr(160) $+ Room: %mini.room $+ $chr(160) $+ $chr(93)
n50=  halt
n51=}
n52=alias Mini.Echo {
n53=  echo @MiniServ 10[00OutBound10][00Me10]  $+ $1- 
n54=}
n55=alias Mini.Put.Names {
n56=  clear -l @MiniServ
n57=  set %tmp1 1
n58=  set %tmp2 6
n59=  :mini.loop
n60=  if (%tmp2 > $numtok(%mini.names,32)) { goto mini.done }
n61=  /rline -l 4 @MiniServ %tmp1 $remove($gettok(%mini.names,%tmp2,32),$chr(58))
n62=  inc %tmp1
n63=  inc %tmp2
n64=  goto mini.loop
n65=  :mini.done
n66=  unset %tmp*
n67=}
n68=;=============================================================
n69=;=============================================================
