alias net return $sep $+ $chr(186) $+ ( $+ 4 $network $sep $+ )
alias mybar {
  set %mybar. $+ $cid $chr(124) $+ $chr(91) Servers: $scid(0) $chr(93) $+ $chr(124) $+ $chr(91) $server $chr(93) $+ $chr(124) $+ $chr(91) Nick: $me $chr(93) $+ $chr(124) $+ $chr(91) Network: $network $chr(93) $+ $chr(124) $+ $chr(91) $network $chr(93) $+ $chr(124) $+ $chr(91) Lag: $key(settings,lagmrc) $chr(93) $+ $chr(124) $+ $chr(91) IRCMode: $key(settings,ircmode) $chr(93) $+ $chr(124) $+ $chr(91) StrangeScript $chr(93) $+ $chr(124)
  if (%mybar.temp == $null) { titlebar %mybar. [ $+ [ $activecid ] ] }
  if (%mybar.temp != $null) { titlebar %mybar. [ $+ [ $activecid ] ] }
  return
}
alias cycle {
  if ($key(settings,cycle.counter) >= 2) { return }
  keywrite settings cycle.counter $calc($key(settings,cycle.counter) + 1)
  if ($1 != $null) { .raw part $1 $cr join $1 $key($1,ownerkey) }
  if ($1 == $null) { .raw part # $cr join # $key(#,ownerkey) }
  .timerCYC1a. $+ $network 1 5 keywrite settings cycle.counter 0
  .timerCYC1b. $+ $network 1 5 echo -t # $sys $report(StrangeScript,Cycle Counter,$null,$null,Reset to,,0)
}
alias script.play {
  if ($key(settings,script.sounds) == OFF) { return }
  if ($right($1-,3) == wav) {
    if ($inwave != $true) { splay -w $1- }
  }
  if ($right($1-,3) == mp3) || ($right($1-,3) == wma) {
    if ($insong != $true) { splay -p $1- }
  }
  $report(StrangeScript,Sound Play,$null,Playing a *. $+ $upper($right($1,3)) sound file).status
  return
}
raw 366:*: {
  haltdef
  if ($me ison $2) && (%speed. [ $+ [ $2 ] ] != $null) {
    echo -t $2 $sys $report(Speed,Join,$2,Synched in:,$calc(($ticks - %speed. [ $+ [ $2 ] ] ) / 1000), secs)
    unset %speed. $+ $2
    cline %sc.me $2 $me
  }
  return
}
on *:INPUT:#: {
  if (/* !iswm $1) {
    haltdef
    .raw privmsg #  : $+ $1-
    $report($nick,$null,$null,$null,$1-).text
    halt
  }
}
on ^*:TEXT:*:#: {
  haltdef
  $report($nick,$null,$null,$null,$1-).chan
  ;$report(TEXT,#,$nick,$1-).active
}
on *:ACTION:*:#: {
  $report(ACTION,#,$nick,$1-).chan
}
on *:ACTION:*:?: {
  $report(ACTION,?,$nick,$-).status

}
on *:ERROR:*: {
  haltdef
  $report(Received Error,$null,From server,reported as follows,$1-).active
  IF (status !isin $window($active)) { $report(Received Error,$null,From server,reported as follows,$1-).status }
  halt
}
on ^*:QUIT: {
  set %tmp.quit 1
  while (%tmp.quit <= $comchan($nick,0)) {
    echo -t $comchan($nick,%tmp.quit) $sys $report(Quit,$chan,$nick,$null,$1-)
    inc %tmp.quit
    if (%tmp.quit > $comchan($nick,0)) { break }
  }
  IF (status !isin $window($active)) { $report(Quit,$chan,$nick,$null,$1-).status }
  if ($nick == $me) && ($server != $null) { cycleall }
  halt
}
on *:BAN:#: {
  haltdef
  $report(Ban,$chan,$nick,$1-).chan
  $report(Ban,$chan,$nick,$1-).active
}
on *:UNBAN:#: {
  haltdef
  $report(UNBAN,$chan,$null,$nick,$1-).chan
  $report(UNBAN,$chan,$null,$nick,$1-).active
  IF (status !isin $window($active)) { $report(UNBAN,$chan,$null,$nick,$1-).active }
}
on ^*:TOPIC:#: {
  haltdef
  if ($1- == $null) { var %tmp.tp1 = Topic has been cleared }
  else { var %tmp.tp1 = Changed the topic to | var %tmp.tp2 = $1- }
  $report(TOPIC,$chan,$nick,%tmp.tp1,%tmp.tp2).chan
  IF (status !isin $window($active)) { $report(TOPIC,$chan,$nick,%tmp.tp1,%tmp.tp2).status }
  if ($nick == $me) { keywrite # topic $hex.ini($1-) }
  if ($key(#,topiclock) == $null) { keywrite # topiclock OFF }
  keywrite # topic $hex.ini($1-)
  if ($key(#,topiclock) == OFF) && ($nick(#,$me,o) != $null) { keywrite # topic $hex.ini($1-) | halt }
  if ($key(#,topiclock) == ON) {
    if ($unhex.ini($key(#,topic)) == $1-) { halt }
    .timerTOPLOCc. $+ $network 1 1 .raw topic # : $+ $unhex.ini($key(#,topic))
    $report(Topic Lock,#,Active,Correcting topic).chan
    ;IF (status !isin $window($active)) { $report(Topic Lock,#,Active,Correcting topic).status }
    .timerTOPLOCc. $+ $network 1 1 .raw topic # : $+ $unhex.ini($key(#,topic))
    halt
  }
  halt
}
on ^*:NICK: {
  haltdef
  set %tmp.nick 1
  while (%tmp.nick <= $comchan($newnick,0)) {
    echo -t $comchan($newnick,%tmp.nick) $sys $report(Nick,$nick,$comchan($newnick,%tmp.nick),Will now be known as,$newnick)
    inc %tmp.nick
    if (%tmp.nick > $comchan($newnick,0))  { break }
  }
  IF (status !isin $window($active)) { $report(Nick,$nick,$null,Will now be known as,$newnick).status }
  if ($nick == $me) { keywrite settings boss $me }
  unset %temp.nick.change
  unset %temp.nick.change1
  halt
}
on *:PONG: {
  if ($key(settings,pingpong.show) == ON) {
    IF (status !isin $window($active)) { $report(Server,$1,PONG,with message,$2-).status }
  }
}
on *:PING: {
  if ($key(settings,pingpong.show) == ON) {
    if (status !isin $window($active)) { $report(Server,$1,PING,with message,$2-).status }
  }
}
on *:KICK:#: {
  haltdef
  $report(Kick,$chan,$nick,$knick,$1-).chan
  if (status !isin $window($active)) { $report(Kick,$chan,$nick,$knick,$1-).status }
  f ($knick == $nick) { halt }
  if ($knick == $me) {
    if ($nick == ChanServ) { halt }
    if ($nick == ChanServ@services.dal.net) && ($network == Dalnet) { halt }
    idchan
    raw join #
    chanserv
  }
  ;if ($nick isowner $chan(#)) { HALT }
  ;halt
}
on 1:ACTION:*:#: {
  haltdef
  echo -t $comchan($nick,1) $sys $report(Away,$comchan($nick,1),$nick,has been set as being,AWAY).active
  if (status !isin $window($active)) { $report(Away,$comchan($nick,%tmp.aw),$nick,has been set as being,AWAY).status }
  halt
}
alias /Lagon { keywrite settings lagchk ON | $report(StrangeScript,Auto Lag Check,$null,Set to,$key(settings,lagchk)).status | Lgchk | return }
alias /Lagoff { keywrite settings Lagchk OFF | $report(StrangeScript,Auto Lag Check,$null,Set to,$key(settings,lagchk)).status |  .timer850. $+ $network off | keywrite settings Lagmrc OFF | return }
alias LagSet.Secs {
  keywrite settings Lagmrcsecs $$?="How many second between check pings?"
  $report(StrangeScript,$null,Lag Set Seconds,Set to,$key(settings,Lagmrcsecs)).active
  if ($key(settings,lagchk) == ON) { lagoff | lagon }
  else { lagoff }
  return
}
/Lgchk { .timer850. $+ $network 0 $key(settings,Lagmrcsecs) Lagchk }
/Lagchk { .raw Lag-CK $+ $chr(160) $+ $ticks }
/showLag { /mybar | return }
alias Lagset {
  if ($1 == $null) {
    $report(StrangeScript,$null,Lag Set Seconds,Try this,syntax: /Lagset <seconds>).active
    return
  }
  else {
    keywrite settings Lagmrcsecs $1
    $report(StrangeScript,$null,Lag Set Seconds,Set to,$key(settings,Lagmrcsecs)).active
    if ($key(settings,lagchk) == ON) { lagoff | lagon }
  }
  return
}
/sound.play {
  if ($1 == IN) { goto soundin }
  ;  if ($1 == OUT) { goto soundout }
  ;  if ($1 == REQUEST) { goto soundreg }
  :soundin
  return
  :soundout
}
list {
  if ($key(settings,ircmode) == IRCd) { .raw list $1- }
  if ($key(settings,ircmode) == IRCx) {
    if ($1 != $null) {
      if (> isin $1) && ($2 == $null) { listx $1 | halt }
      if (> isin $1) && (< isin $2) { listx $1 $2 | halt }
      if (< isin $1) && ($2 == $null) { listx $1 | halt }
      if (< isin $1) && (> isin $2) { listx $2 $1 | halt }
      if (-min isin $1) && ($3 == $null) { listx > $+ $calc($2 - 1) | halt }
      if (-min isin $1) && (-max isin $3) { listx > $+ $calc($2 - 1) < $+ $calc($4 + 1) | halt }
      if (-max isin $1) && ($3 == $null) { listx < $+ $calc($2 + 1) | halt }
      if (-max isin $1) && (-min isin $3) { listx > $+ $calc($4 - 1) < $+ $calc($2 + 1) | halt }
      if ($chr(35) isin $1) { listx N=* $+ $1 $+ * | halt }
      if (N= isin $1) { listx N=* $+ $remove($1,N=) $+ * | halt }
      if (T= isin $1) { listx T=* $+ $remove($1,T=) $+ * | halt }
      if (S= isin $1) { listx S=* $+ $remove($1,S=) $+ * | halt }
      if (L= isin $1) { listx L=* $+ $remove($1,L=) $+ * | halt }
      if (R= isin $1) { listx $1 | halt }
      if ($2 != $null) { listx $1- | halt }
      else { listx N=* $+ $1 $+ * }
    }
    else {
      $report(List,$null,Help,/list #/#,more than/less than NUM members).active
      $report(List,$null,Help,/list N=?/T=?/S=?/L=?,name/topic/subject/language text search).active
      listx
    }
  }
}
RAW 421:*: {
  haltdef
  if (*Lag-CK* iswm $2) {
    var %lag.mrc.tmp = $null
    var %tmp.lag = $calc($ticks - $gettok($2,2,160))
    if ($len(%tmp.lag) < 3) { keywrite settings Lagmrc .0 $+ %tmp.lag secs }
    elseif ($len(%tmp.lag) = 3) { keywrite settings Lagmrc . $+ %tmp.lag secs }
    elseif ($len(%tmp.lag) = 4) { keywrite settings Lagmrc $left(%tmp.lag,1) $+ . $+ $right(%tmp.lag,-1) secs }
    elseif ($len(%tmp.lag) = 5) { keywrite settings Lagmrc $left(%tmp.lag,1) $+ . $+ $right(%tmp.lag,-1) secs }
    elseif ($len(%tmp.lag) > 5) { keywrite settings Lagmrc ERROR }
    if (%lag.mrc.tmp != $null) { lag.warn $gettok(%Lag.mrc,1,46) }
    mybar
    halt
  }
  $report(Server,$null,Error,Sorry,the command,$2,is an,$3-,to me.).active
  IF (status !isin $window($active)) { $report(Server,$null,Error,Sorry,the command,$2,is an,$3-,to me.).status }
}
raw 352:*: {
  inc %tempa
  set %user $+ %tempa $strip($3)
  set %host $+ %tempa $strip($4)
  set %server $+ %tempa $strip($5)
  set %handle $+ %tempa $strip($6-)
}
raw 311:*: {
  $report(IDENT,$null,$null,$null,$1-).active
  IF (status !isin $window($active)) { $report(IDENT,$null,$null,$null,$1-).status }
  halt
}
raw 315:*: {
  haltdef
  $report(315,$1-).status
  updatenl
  :sswholoop
  $report(Info $+ %tempb,$null,$null,%handle [ $+ [ %tempb ] ] %user [ $+ [ %tempb ] ]  $+ @ $+ %host [ $+ [ %tempb ] ]).active
  $report(Server,$null,$null,%server [ $+ [ %tempb ] ]).active
  if (%tempb >= %tempa) {
    $report($null,$null,Done).active
    $report($chain).active
    unset %handle* %user* %server* %host* %temp*
    .disable #sswho
    halt
  }
  else {  inc %tempb | goto sswholoop }
  aline @UserInfo $sys $highcol $+ Who Reply number $white $+ %tempb 
  aline @UserInfo $sys $lowcol $+ Info: $highcol $+ %handle [ $+ [ %tempb ] ] %user [ $+ [ %tempb ] ]  $+ @ $+ %host [ $+ [ %tempb ] ]
  aline @UserInfo $sys $lowcol $+ Server: $highcol $+ %server [ $+ [ %tempb ] ]
  if (%tempb >= %tempa) {
    aline @UserInfo $sys $bright $+ Done
    aline @UserInfo $sys $+ $chain
    unset %handle* %user* %server* %host* %temp*
    .disable #sswho
    halt
  }
  else { inc %tempb | goto sswholoop }
  else {
    $report(Who Reply,$null,number,%tempb).status
    $report(Handle,$null,$null,%handle [ $+ [ %tempb ] ] %user [ $+ [ %tempb ] ]  $+ @ $+ %host [ $+ [ %tempb ] ] ).status
    $report(Serve,$null,$null,%server [ $+ [ %tempb ] ] ).status
    if (%tempb >= %tempa) {
      $report(Done).status
      $report($chain).status
      unset %handle* %user* %server* %host* %temp*
      .disable #sswho
      halt
    }
    else {  inc %tempb | goto sswholoop }
  }
}
on ^*:SNOTICE:*:{
  haltdef
  if (*disconnect* iswm $1-) { if ($key(settings,script.sounds) == ON) { script.play D:\bin\AdiIRC\Sounds\shit.wav } }
  if (*logoff* iswm $1-) { script.play D:\bin\AdiIRC\Sounds\logoff.wav }
  echo $color(notice) -at $sys $report($network,Server Notice,$null,$null,$1-)
  IF (status !isin $window($active)) { echo $color(notice) -st $sys $report($network,Server Notice,$null,$null,$1-) }
  halt
}
on ^*:NOTICE:*:*: {
  haltdef
  if ($nick == NickServ) {
    if (*IDENTIFY* iswm $1-) { auto.ident }
  }
  if ($nick == ChanServ) {
    if (*IDENTIFY* iswm $1-) { auto.room.ident $1- }
  }
  if ($chan == $null) {
    echo $color(notice) -at $sys $report(Notice,$nick,$null,$null,$1-)
    IF (status !isin $window($active)) { echo $color(notice) -st $sys $report(Notice,$nick,$null,$null,$1-) }
  }
  if ($chan != $null) {
    echo $color(notice) -at $sys $report(Notice,$nick,$null,$null,$1-) 
    IF (status !isin $window($active)) { echo $color(notice) -st $sys $report(Notice,$nick,$null,$null,$1-) }
  }
}
on *:INVITE:#: {
  haltdef
  if ($nick == ChanServ) {
    join $chan %key. [ $+ [ $chan ] ]
    if ($key(settings,script.sounds) == ON) { script.play D:\bin\AdiIRC\Sounds\invite.wav }
    $report(Invite,Auto Join,$nick,has just invited you to,$chan).active
    halt
  }
  if ($key(settings,script.sounds) == ON) { script.play D:\bin\AdiIRC\Sounds\invite.wav }
  $report(Invite,$nick,$null,has just invited you to,$chan).active
  	  if (status !isin $window($active)) { $report(Invite,$nick,$null,has just invited you to,$chan).status }
  halt
}
raw 421:*: {
  haltdef
  $report(Server,$null,Error,Sorry,the command,$2,is an,$3-,to me.).active
  IF (status !isin $window($active)) { $report(Server,$null,Error,Sorry,the command,$2,is an,$3-,to me.).status }
  halt
}
raw 352:*: {
  $report(352,$1-).status
  %copdisplay $sys $6 $7 $5 $+ : $9-
  halt
}
raw 315:*: {
  haltdef
  updatenl
  %copdisplay $sys $bright $+ Done
  %copdisplay $sys $+ $chain
  unset %copdisplay
  .disable #opscan
}
raw 438:*: {
  haltdef
  set %temp.nick.change $2
  $report(Nick Change,Time Wait,$null,Your nick will be auto changed in,$9, Seconds).status
  .timerNick. $+ $network 1 $9 /nick %temp.nick.change
  .timerNC. $+ $network 1 $9 $report(Nick Change,$null,$null,Auto-Changing your NickName to,%temp.nick.change).status
}
raw 401:*: {
  haltdef
  $report(Server,$null,Error,No Such Nick,$2).active
  unset %handle
}
on ^*:NOTIFY: {
  if ($key(settings,script.sounds) == ON) { script.play D:\bin\AdiIRC\Sounds\invite.wav }
  $report(NotifyOn,$nick,$fulladress,is now online,$null).active
  if (status !isin $window($active)) { $report(NotifyOn,$nick,is now online,Notes: $notify($nick).note).status }
  whois $nick
  halt
}
on 1:UNOTIFY: {
  $report(NotifyOff,$nick,is now offline).active
  IF (status !isin $window($active)) { $report(NotifyOff,$nick,is now offline).status }
}
;RAW *:*: { $report(RAW,$event,$numeric,$rawmsg).status }
;MOTD
raw 372:*:{ if ($3 == $null) { halt } | $report(MOTD,$null,$null,$null,$null,$3-).status  | halt }
raw 375:*:{ if ($3 == $null) { halt } | $report(MOTD,$null,$null,$null,$null,$3-).status  | halt }
raw 376:*:{ if ($3 == $null) { halt } | $report(MOTD,$null,$null,$null,$null,$3-).status  | halt }
;Notify-Watch info
raw 603:*:{ $report(StrangeScript,Watch Info,$null,$null,$2-).active | halt }
raw 605:*:{ $report(StrangeScript,Watch Info,$null,$null,$2-).active | halt }
raw 606:*:{ $report(StrangeScript,Watch Info,$null,$null,$2-).active | halt }
raw 607:*:{ $report(StrangeScript,Watch Info,$null,$null,$2-).active | halt }
raw 318:*:{ $report(StrangeScript,Watch Info,$null,$null,$2-).active | halt }
raw 319:*:{ $report(StrangeScript,Watch Info,$null,$null,$2-).active | halt }
raw 307:*:{ $report(StrangeScript,Watch Info,$null,$null,$2-).active | halt }
raw 312:*:{ $report(StrangeScript,Watch Info,$null,$null,$2-).active | halt }
;Server Information
raw 1:*:{ $report(Server Info,$null,$null,$3-).active | halt }
raw 2:*:{ $report(Server Info,$null,$null,$3-).active | halt }
raw 3:*:{ $report(Server Info,$null,$null,$3-).active | halt }
raw 4:*:{ $report(Server Info,$null,$null,$3-).active | halt }
raw 5:*:{ $report(Server Info,$null,$null,$3-).active | halt }


raw 8:*:{ $report(8,Server Info,$null,$null,$2-,$null).active }
raw 290:*:{ $report(290,Server Info,$null,$null,$2-,$null).active }
raw 292:*:{ $report(292,Server Info,$null,$null,$2-,$null).active }
raw 221:*:{ keywrite settings bossmodes $2 | $report(221,Server Info,$null,$null,$2-,$null).active }
raw 320:*:{ $report(320,Server Info,$null,$null,$2-,$null).active }
raw 251:*:{ $report($null,Server Info,$null,$null,$2-,$null).status | halt }
raw 252:*:{ $report($null,Server Info,$null,$null,$2-,$null).status | halt }
raw 253:*:{ $report($null,Server Info,$null,$null,$2-,$null).status | halt }
raw 254:*:{ $report($null,Server Info,$null,$null,$2-,$null).status | halt }
raw 255:*:{ $report($null,Server Info,$null,$null,$2-,$null).status | halt }
raw 265:*:{ $report($null,Server Info,$null,$null,$2-,$null).status | halt }
raw 266:*:{ $report($null,Server Info,$null,$null,$2-,$null).status | halt }
raw 305:*:{ $report(305,Back,$1,$null,$2-,$null).active }
raw 306:*:{ $report(306,Away,$1,$null,$2-,$null).active }
raw 432:*:{ $report(432,Nick,$null,Failed,$2-,$null).active }
raw 433:*:{ $report(433,Nick,$2,Failed,$3-).active | /idnick }
raw 440:*:{ $report(Server Info,$null,$null,$2-,$null).active }
raw 502:*:{ $report(Server Info,$null,$null,$2-,$null).active }
raw 324:*:{ echo -t $2 $sys $report($1,$2,$3-) | haltdef }
raw 329:*:{ echo -t $2 $sys $report(StrangeScript,Creation Info,$null,$null,$1-) | halt }

raw 335:*:{ $report(335,$1-).active | haltdef }
raw 671:*:{ $report(671,$1-).active | haltdef }
raw 310:*:{ $report($2,$null,$null,$3 $4 $5,$6-).active }
raw 378:*:{ $report($2,$null,$null,$3 $4 $5,$6-).active }
raw 379:*:{ $report($2,$null,$null,$3 $4 $5,$6-).active }
raw 341:*:{ $report(Invite,Success,$2,has been invited to $3).active }
raw 443:*:{ $report(Invite,Failed,$2,Already on $3).active }
raw 518:*:{ $report(Invite,Failed,$2 $3,$4,$5,$6-).active }
raw 471:*:{ $report(Join,Failed,Cant join $2,Room Limit Exceded).active }
raw 473:*:{ $report(Join,Failed,Cant join $2,Invite Only).active | $report(Try to use ChanServ to auto invite you.).active | chanserv invite $2 $me }
raw 474:*:{ $report(Join,Failed,Cant join $2,Banned IP).active }
raw 475:*:{ $report(Join,Failed,Cant join $2,Wrong Member Key).active }
raw 477:*:{ $report(Join,Failed,Cant join $2,Need Registered Nick).active }
raw 404:*:{ $report(Server,Failed,$2,Can Not Send To Channel).active }
raw 412:*:{ $report(Server,Failed,$null,No Text To Send).active }
raw 441:*:{ $report(Server,Failed,$2,User Not On Channel).active }
raw 442:*:{ $report(Server,Failed,$2,Your Not On Channel).active }
raw 403:*:{ $report(Server,Failed,$2,No Such Channel).active }
raw 407:*:{ $report(Server,Failed,$null,Too Many Targets).active }
raw 381:*:{ $report(Server,Success,$null,$1-).active }
on 1:CLOSE:@RoomKeys:{ haltdef | unset %tmp.keys $report(CLOSE,$1-).status }
on 1:CONNECT:{
  haltdef
  $report(StrangeScript,Server Connect Event Triggered,$null,$null,$1-).status
  if ($network == $null) { $report(StrangeScript,ERROR,NO NETWORK).active | break }
  $report(Server,$null,$null,Set at,$network).active
  .servjc
  .conset
  if ($key(settings,recover.nick) == ON) { recover.nick $key(settings,saved.nick.1) }
  if ($key(settings,auto.ident) == ON) { auto.ident }
  .timerBAR. $+ $network -om 0 500 mybar
  set %setup.count 0
  $report($fullver).active
  if ($key(settings,Lagchk) == ON)  { lagon }
  if ($key(settings,auto.join) == ON)  { .timer $+ aj 1 5 auto.join }
}
raw knock:*: {
  haltdef
  set %last.knock.reason $2
  if (471 isin $2) { var %last.knock.reason = Room Limit Exceded }
  if (473 isin $2) { var %last.knock.reason = Invite only }
  if (474 isin $2) { var %last.knock.reason = Banned IP }
  if (475 isin $2) { var %last.knock.reason = Wrong Member Key }
  if (913 isin $2) { var %last.knock.reason = ServerOp's Only }
  if ($key(settings,script.sounds) == ON) { script.play D:\bin\AdiIRC\Sounds\knock.wav }
  echo -t $1 $sys $report(Knock,$1,$nick,just knocked and got message,%last.knock.reason).status
  echo -t $1 $sys $report(Knock,Press CONTROL-F5 to Invite,$null,/Last to whois or,/Hide add, $key(settings,lastknock.nick), to filter out).status
  IF (status !isin $window($active)) { $report(Knock,$1,$nick,just knocked and got message,%last.knock.reason).status }
}
ctcp *:*:*: {
  haltdef
  ;$report(CTCP,$1-).status
  if ($chr(43)  isin $1-) { halt }
  if ($chr(47) $+ con isin $2-) { halt }
  if ($chr(47) $+ aux isin $2-) { halt }
  if ($chr(47) $+ nul isin $2-) { halt }
  if ($1 == DCC) {
    $report(Ctcp,$nick,Received,$upper($1),$strip($2-)).active
    IF (status !isin $window($active)) { $report(Ctcp,$nick,Received,$upper($1),$strip($2-)).status }
    return
  }
  if ($1 == SEND) {
    $report(Ctcp,$nick,Received,$upper($1),$strip($2-)).active
    IF (status !isin $window($active)) { $report(Ctcp,$nick,Received,$upper($1),$strip($2-)).status }
    return
  }
  if ($1 == CHAT) {
    $report(Ctcp,$nick,Received,$upper($1),$strip($2-)).active
    IF (status !isin $window($active)) { $report(Ctcp,$nick,$upper($1),With message:,$strip($2-)).status }
    return
  }
  if ($1 == AWAY) {
    $report(Ctcp,$nick,Received,$upper($1),$strip($2-)).active;
    IF (status !isin $window($active)) { $report(Ctcp,$nick,Received,$upper($1),$strip($2-)).status }
    halt
  }
  if ($1 == PING) {
    $report(Ctcp,$nick,Received,$upper($1),$strip($2-)).active
    IF (status !isin $window($active)) { $report(Ctcp,$nick,Received,$upper($1),$strip($2-)).status }
    ;if ($nick == $me) { .ctcpreply $nick $1- | script.play D:\bin\AdiIRC\Sounds\ping.wav | halt }
    ;$report(Script Mode,$null,$key(settings,strange),Sending reply,$nick).active | .ctcpreply $nick $1-
    .ctcpreply $nick $1-
    if ($key(settings,script.sounds) == ON) { script.play D:\bin\AdiIRC\Sounds\ping.wav }
    ;halt
  }
  if ($1 == VERSION) {
    $report(Ctcp,$nick,Received,$upper($1),$strip($2-)).active
    IF (status !isin $window($active)) { $report(Ctcp,$nick,Received,$upper($1),$strip($2-)).status }
    .ctcpreply $nick VERSION $fullver
    ;.ctcp reply $nick VERSION $fullver
    halt
  }
  if ($1 == SOUND) { halt }
  if ($1 == PAGE) {
    $report(Ctcp,$nick,Received,$upper($1),$strip($2-)).active
    IF (status !isin $window($active)) { $report(Ctcp,$nick,Received,$upper($1),$strip($2-)).status }
    if ($key(settings,script.sounds) == ON) { script.play D:\bin\AdiIRC\Sounds\page.wav }
    halt
  }
  if ($1 == MESSAGE) { $report(Message,$nick,Script,Message as follows,$2-).active | halt }
  $report(Ctcp,$nick,Received,$upper($1),$strip($2-)).active
  IF (status !isin $window($active)) { $report(Ctcp,$nick,Received,$upper($1),$strip($2-)).status }
  halt
}
on *:CTCPREPLY:*: {
  haltdef
  if ($1 == PING) && ($2 != $null) {
    set %temp.ping.calc $calc(($ticks - $remove($3,$chr(1))) / 1000)
    if (%temp.ping.calc < 60) {
      $report(Ctcp Reply,$nick,$upper($1),Reply was:,$strip($2-)).active 09 $+ : $lowcol $+ It took $highcol $+ %temp.ping.calc $lowcol $+ Seconds
      IF (status !isin $window($active)) { $report(Ctcp Reply,$nick,$upper($1),Reply was:,$strip($2-)).status 09 $+ : $lowcol $+ It took $highcol $+ %temp.ping.calc $lowcol $+ Seconds }
      halt
    }
    if (%temp.ping.calc > 60) {
      var %temp $calc($ctime - $2)
      $report(Ctcp Reply,$nick,$upper($1),Reply was:,$strip($2-)).active 09 $+ : $lowcol  It took $highcol $duration(%temp)
      IF (status !isin $window($active)) { $report(Ctcp Reply,$nick,$upper($1),Reply was:,$strip($2-)).status 09 $+ : $lowcol  It took $highcol $duration(%temp) }
      halt
    }
    halt
  }
  else {
    $report(Ctcp Reply,$nick,$upper($1),Reply was:,$strip($2-)).active
    IF (status !isin $window($active)) { $report(Ctcp Reply,$nick,$upper($1),Reply was:,$strip($2-)).status }
    halt
  }
}
ON 1:*:*:{ $report(1,$event,$rawmsg).active }
on 1:LOGON:*:{
  echo -at $sys $report(StrangeScript,Logon Event trigged)
}
on 1:START: { 
  if ($key(settings,saved.nick.1) != $null) { nick $key(settings,saved.nick.1) }
  $report(StrangeScript,Start Event,$1-).status
  unset %mybar*
}
ON 1:EXIT:{
  if ($key(settings,saved.nick.1) != $null) { nick $key(settings,saved.nick.1) }
}
on 1:CONNECTFAIL:{
  if ($key(settings,saved.nick.1) != $null) { nick $key(settings,saved.nick.1) }
  $report(Connect Fail,$1-).active
}
on 1:DISCONNECT:{
  haltdef
  if ($key(settings,saved.nick.1) != $null) { nick $key(settings,saved.nick.1) }
  unset %mybar*
  if ($key(settings,script.sounds) == ON) { script.play D:\bin\AdiIRC\Sounds\shit.wav }
  clearall
  if (%ssl. [ $+ [ $network ] ] != $null) { unset %ssl. [ $+ [ $network ] ] }
  IF (status !isin $window($active)) { $report(Disconnect,$nick,$server,$time,$1-).status }
}
on ^*:MODE:#: {
  haltdef
  $report(Mode,$nick,$chan,$null,$1-).chan
  IF (status !isin $window($active)) { $report(Mode,$nick,$chan,$null,$1-).status }
}
on ^*:OP:#:{
  haltdef
  $report(Op,$nick,$chan,$opnick,$1-).chan
}
on *:DEOP:#:{ $report(Deop,$nick,$null,$chan,$1-).status }
on *:VOICE:#:{ $report(VOICE,$1-).status }
on *:DEVOICE:#:{ $report(Devoice,$null,$null,$nick,$1-).status }
on *:HELP:#:{ $report(HELP,$1-).status }
on *:DEHELP:#:{ $report(DEHELP,$1-).status }
on *:SERVEROP:#:{ $report(SERVEROP,$1-).status }
on ^*:RAWMODE:#: {
  haltdef
  ;$report(RawMode,$null,$nick,$null,$1-).chan
  $report(RawMode,$nick,$chan,$2,$1-).chan
  if ($nick == $server) { halt }
  if ($nick == System) { cycle | halt }
  if ($nick == $mode(1)) { halt }
  halt
}
on ^*1:JOIN:#: {
  if ($nick == $me) { set %speed. $+ # $ticks }
  .echo -t # $sys $report(Join,$chan,$nick,$address)
  IF (status !isin $window($active)) { $report(Join,$chan,$nick,$address).status }
}
on ^*:PART:#: {
  haltdef
  echo -t # $sys $report(Part,$chan,$nick,$address,$1-)
  ;IF (status !isin $window($active)) { $report(Part,$chan,$nick,$fulladdress,$1-).status }
}
