alias net return $sep $+ $chr(186) $+ ( $+ 4 $network $sep $+ )
alias mybar {
  set %mybar. $+ $cid $chr(124) $+ $chr(91) Servers: $scid(0) $chr(93) $+ $chr(124) $+ $chr(91) $server $chr(93) $+ $chr(124) $+ $chr(91) Nick: $me $chr(93) $+ $chr(124) $+ $chr(91) Network: $network $chr(93) $+ $chr(124) $+ $chr(91) $network $chr(93) $+ $chr(124) $+ $chr(91) Lag: $key($network,lagmrc) $chr(93) $+ $chr(124) $+ $chr(91) IRCMode: $key($network,ircmode) $chr(93) $+ $chr(124) $+ $chr(91) StrangeScript $chr(93) $+ $chr(124)
  if (%mybar.temp == $null) { titlebar %mybar. [ $+ [ $activecid ] ] }
  if (%mybar.temp != $null) { titlebar %mybar. [ $+ [ $activecid ] ] }
  return
}
alias cycle {
  if ($key($network,cycle.counter) >= 2) { return }
  keywrite $network cycle.counter $calc($key($network,cycle.counter) + 1)
  if ($1 != $null) { .raw part $1 $cr join $1 $key($1,ownerkey) }
  if ($1 == $null) { .raw part # $cr join # $key(#,ownerkey) }
  .timerCYC1a. $+ $network 1 5 keywrite $network cycle.counter 0
  .timerCYC1b. $+ $network 1 5 echo -t # $sys $report(StrangeScript,Cycle Counter,$null,$null,Reset to,,0)
}
alias script.play {
  if ($key(StrangeScript,script.sounds) == OFF) { return }
  if ($right($1-,3) == wav) {
    if ($inwave != $true) { splay -w $1- }
  }
  if ($right($1-,3) == mp3) || ($right($1-,3) == wma) {
    if ($insong != $true) { splay -p $1- }
  }
  $report(StrangeScript,Sound Play,$null,Playing a *. $+ $upper($right($1,3)) sound file).status
  return
}
alias say { if ($1 == $null) { $report(StrangeScript,Say,$null,No text sent).active | halt } | msg $active $1- }
alias Lagon { keywrite $network Lagchk ON | $report(StrangeScript,Auto Lag Check,$null,Set to,$key($network,lagchk)).status | Lgchk | return }
alias Lagoff { keywrite $network Lagchk OFF | $report(StrangeScript,Auto Lag Check,$null,Set to,$key($network,lagchk)).status |  .timer850. $+ $network off | keywrite $network Lagmrc OFF | return }
alias LagSet.Secs {
  set %tmp.lss $$?="How many second between check pings?"
  if (%tmp.lss == $null) { return  }
  keywrite $network Lagmrcsecs %tmp.lss
  $report(StrangeScript,$null,Lag Set Seconds,Set to,$key($network,Lagmrcsecs)).active
  unset %tmp.lss
  if ($key($network,lagchk) == ON) { lagoff | lagon }
  else { lagoff }
  return
}
/Lgchk { .timer850. $+ $network 0 $key($network,Lagmrcsecs) Lagchk }
/Lagchk { .raw Lag-CK $+ $chr(160) $+ $ticks }
/showLag { /mybar | return }
alias Lagset {
  if ($1 == $null) {
    $report(StrangeScript,$null,Lag Set Seconds,Try this,syntax: /Lagset <seconds>).active
    return
  }
  else {
    keywrite $network Lagmrcsecs $1
    $report(StrangeScript,$null,Lag Set Seconds,Set to,$key($network,Lagmrcsecs)).active
    if ($key($network,lagchk) == ON) { lagoff | lagon }
  }
  return
}
/sound.play {
  if ($1 == IN) { goto soundin }
  ;  if ($1 == OUT) { goto soundout }
  ;  if ($1 == REQUEST) { goto soundreg }
  :soundin
  return
  :soundout
}
;list { .raw list $1-  }
/out { saveini | clearall | partall | if ($server != $null) { exit } }
